var searchIndex = JSON.parse('{\
"twitch_api":{"doc":"github crates-io docs-rs-big","t":"","n":["DeserError","HelixClient","HttpClient","PathError","TWITCH_EVENTSUB_WEBSOCKET_URL","TWITCH_HELIX_URL","TWITCH_PUBSUB_URL","TWITCH_TMI_URL","TmiClient","TwitchClient","add_channel_moderator","add_channel_vip","ban_user","block_user","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cancel_a_raid","client","clone","clone","clone","clone_into","clone_into","clone_into","create_eventsub_subscription","default","default","default","delete_all_chat_message","delete_chat_message","delete_eventsub_subscription","eventsub","extra","fmt","fmt","from","from","from","from","get_all_custom_rewards","get_banned_users_in_channel_from_id","get_broadcaster_subscriptions","get_channel_emotes_from_id","get_channel_emotes_from_login","get_channel_from_id","get_channel_from_login","get_channel_schedule","get_channels_from_ids","get_chat_settings","get_chatters","get_client","get_custom_rewards","get_emote_sets","get_eventsub_subscriptions","get_followed_channels","get_followed_streams","get_games_by_id","get_global_emotes","get_moderators_in_channel_from_id","get_total_channel_followers","get_user_chat_color","get_user_from_id","get_user_from_login","get_users_chat_colors","get_users_from_ids","get_vips_in_channel","helix","helix","into","into","into","into","new","parse_json","parse_json_value","provide","pubsub","remove_channel_moderator","remove_channel_vip","req","req","req","req_delete_custom","req_get_custom","req_patch_custom","req_post_custom","req_put_custom","search_categories","search_channels","send_chat_announcement","send_whisper","source","start_a_raid","tmi","tmi","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","twitch_oauth2","type_id","type_id","type_id","type_id","types","unban_user","unblock_user","update_user_chat_color","vzip","vzip","vzip","vzip","with_client","error","path","Body","BodyError","BoxedFuture","Bytes","Client","ClientDefault","CompatError","DummyHttpClient","Error","Error","Error","Error","Http","InvalidHeaderName","InvalidHeaderName","InvalidHeaderValue","InvalidHeaderValue","InvalidHeaderValue","Io","Other","Request","RequestExt","ReqwestClientDefaultError","ReqwestError","Response","ResponseExt","Surf","SurfError","TWITCH_API_USER_AGENT","Ureq","UreqError","UrlError","UrlError","advance","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","chunk","clear","clone","clone","clone_into","clone_into","cmp","copy_from_slice","copy_to_bytes","default","default","default","default_client","default_client_with_name","default_client_with_name","deref","drop","empty","eq","eq","eq","eq","eq","eq","eq","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fd","from_filelike","from_into_filelike","from_into_socketlike","from_iter","from_socketlike","from_static","hash","into","into","into","into","into","into","into","into_iter","into_iter","into_request_vec","into_response_bytes","into_response_vec","is_empty","is_end_stream","len","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","poll_data","poll_next","poll_trailers","provide","provide","provide","provide","provide","remaining","req","req","size_hint","slice","slice_ref","source","source","source","source","split_off","split_to","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","truncate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_agent","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wrap_stream","AuthorizationRevoked","ChannelBan","ChannelBanV1","ChannelCharityCampaignDonate","ChannelCharityCampaignDonateV1","ChannelCharityCampaignProgress","ChannelCharityCampaignProgressV1","ChannelCharityCampaignStart","ChannelCharityCampaignStartV1","ChannelCharityCampaignStop","ChannelCharityCampaignStopV1","ChannelCheer","ChannelCheerV1","ChannelFollow","ChannelFollowV1","ChannelFollowV2","ChannelGoalBegin","ChannelGoalBeginV1","ChannelGoalEnd","ChannelGoalEndV1","ChannelGoalProgress","ChannelGoalProgressV1","ChannelHypeTrainBegin","ChannelHypeTrainBeginV1","ChannelHypeTrainEnd","ChannelHypeTrainEndV1","ChannelHypeTrainProgress","ChannelHypeTrainProgressV1","ChannelPointsCustomRewardAdd","ChannelPointsCustomRewardAddV1","ChannelPointsCustomRewardRedemptionAdd","ChannelPointsCustomRewardRedemptionAddV1","ChannelPointsCustomRewardRedemptionUpdate","ChannelPointsCustomRewardRedemptionUpdateV1","ChannelPointsCustomRewardRemove","ChannelPointsCustomRewardRemoveV1","ChannelPointsCustomRewardUpdate","ChannelPointsCustomRewardUpdateV1","ChannelPollBegin","ChannelPollBeginV1","ChannelPollEnd","ChannelPollEndV1","ChannelPollProgress","ChannelPollProgressV1","ChannelPredictionBegin","ChannelPredictionBeginV1","ChannelPredictionEnd","ChannelPredictionEndV1","ChannelPredictionLock","ChannelPredictionLockV1","ChannelPredictionProgress","ChannelPredictionProgressV1","ChannelRaid","ChannelRaidV1","ChannelShieldModeBegin","ChannelShieldModeBeginV1","ChannelShieldModeEnd","ChannelShieldModeEndV1","ChannelShoutoutCreate","ChannelShoutoutCreateV1","ChannelShoutoutReceive","ChannelShoutoutReceiveV1","ChannelSubscribe","ChannelSubscribeV1","ChannelSubscriptionEnd","ChannelSubscriptionEndV1","ChannelSubscriptionGift","ChannelSubscriptionGiftV1","ChannelSubscriptionMessage","ChannelSubscriptionMessageV1","ChannelUnban","ChannelUnbanV1","ChannelUpdate","ChannelUpdateV1","DeserializeError","EVENT_TYPE","Enabled","Event","EventSubSubscription","EventSubscription","EventSubscriptionInformation","EventType","MalformedEvent","Message","ModeratorRemoved","Notification","NotificationFailuresExceeded","OPT_SCOPE","Payload","Payload","PayloadParseError","Revocation","SCOPE","Status","StreamOffline","StreamOfflineV1","StreamOnline","StreamOnlineV1","Transport","TransportMethod","TransportResponse","UnimplementedEvent","UnknownEventType","UnknownMessageType","UserAuthorizationGrant","UserAuthorizationGrantV1","UserAuthorizationRevoke","UserAuthorizationRevokeV1","UserRemoved","UserUpdate","UserUpdateV1","Utf8Error","VERSION","VerificationRequest","VerificationRequest","VersionRemoved","Webhook","Webhook","Webhook","WebhookCallbackVerificationFailed","WebhookCallbackVerificationPending","WebhookTransport","WebhookTransportResponse","Websocket","Websocket","Websocket","WebsocketConnectionUnused","WebsocketDisconnected","WebsocketFailedPingPong","WebsocketInternalError","WebsocketNetworkError","WebsocketNetworkTimeout","WebsocketReceivedInboundTraffic","WebsocketTransport","WebsocketTransportResponse","as_webhook","as_webhook","as_websocket","as_websocket","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callback","callback","challenge","channel","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","condition","condition","condition","connected_at","cost","cost","created_at","created_at","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","disconnected_at","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","event","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","get_event_type","get_event_version","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_notification","is_revocation","is_verification_request","is_webhook","is_webhook","is_websocket","is_websocket","message","parse_http","parse_notification","parse_revocation","parse_verification_request","provide","secret","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","session_id","session_id","source","status","status","stream","subscription","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","transport","transport","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_webhook","try_into_webhook","try_into_websocket","try_into_websocket","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","webhook","websocket","event_type","version","ChannelBanV1","ChannelBanV1Payload","ChannelCharityCampaignDonateV1","ChannelCharityCampaignDonateV1Payload","ChannelCharityCampaignProgressV1","ChannelCharityCampaignProgressV1Payload","ChannelCharityCampaignStartV1","ChannelCharityCampaignStartV1Payload","ChannelCharityCampaignStopV1","ChannelCharityCampaignStopV1Payload","ChannelCheerV1","ChannelCheerV1Payload","ChannelFollowV1","ChannelFollowV1Payload","ChannelFollowV2","ChannelFollowV2Payload","ChannelGoalBeginV1","ChannelGoalBeginV1Payload","ChannelGoalEndV1","ChannelGoalEndV1Payload","ChannelGoalProgressV1","ChannelGoalProgressV1Payload","ChannelHypeTrainBeginV1","ChannelHypeTrainBeginV1Payload","ChannelHypeTrainEndV1","ChannelHypeTrainEndV1Payload","ChannelHypeTrainProgressV1","ChannelHypeTrainProgressV1Payload","ChannelPointsCustomRewardAddV1","ChannelPointsCustomRewardAddV1Payload","ChannelPointsCustomRewardRedemptionAddV1","ChannelPointsCustomRewardRedemptionAddV1Payload","ChannelPointsCustomRewardRedemptionUpdateV1","ChannelPointsCustomRewardRedemptionUpdateV1Payload","ChannelPointsCustomRewardRemoveV1","ChannelPointsCustomRewardRemoveV1Payload","ChannelPointsCustomRewardUpdateV1","ChannelPointsCustomRewardUpdateV1Payload","ChannelPollBeginV1","ChannelPollBeginV1Payload","ChannelPollEndV1","ChannelPollEndV1Payload","ChannelPollProgressV1","ChannelPollProgressV1Payload","ChannelPredictionBeginV1","ChannelPredictionBeginV1Payload","ChannelPredictionEndV1","ChannelPredictionEndV1Payload","ChannelPredictionLockV1","ChannelPredictionLockV1Payload","ChannelPredictionProgressV1","ChannelPredictionProgressV1Payload","ChannelRaidV1","ChannelRaidV1Payload","ChannelShieldModeBeginV1","ChannelShieldModeBeginV1Payload","ChannelShieldModeEndV1","ChannelShieldModeEndV1Payload","ChannelShoutoutCreateV1","ChannelShoutoutCreateV1Payload","ChannelShoutoutReceiveV1","ChannelShoutoutReceiveV1Payload","ChannelSubscribeV1","ChannelSubscribeV1Payload","ChannelSubscriptionEndV1","ChannelSubscriptionEndV1Payload","ChannelSubscriptionGiftV1","ChannelSubscriptionGiftV1Payload","ChannelSubscriptionMessageV1","ChannelSubscriptionMessageV1Payload","ChannelUnbanV1","ChannelUnbanV1Payload","ChannelUpdateV1","ChannelUpdateV1Payload","amount","background_color","background_color","background_color","ban","banned_at","bits","bits_voting","bits_voting","bits_voting","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_login","broadcaster_login","broadcaster_login","broadcaster_name","broadcaster_name","broadcaster_name","broadcaster_name","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","campaign_id","category_id","category_name","channel_points_custom_reward","channel_points_custom_reward_redemption","channel_points_voting","channel_points_voting","channel_points_voting","charity_campaign","charity_description","charity_description","charity_description","charity_description","charity_logo","charity_logo","charity_logo","charity_logo","charity_name","charity_name","charity_name","charity_name","charity_website","charity_website","charity_website","charity_website","cheer","choices","choices","choices","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cooldown_ends_at","cooldown_ends_at","cooldown_expires_at","cooldown_expires_at","cooldown_expires_at","cost","cost","cost","cumulative_months","cumulative_total","current_amount","current_amount","current_amount","current_amount","current_amount","current_amount","default","default_image","default_image","default_image","description","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","duration_months","ended_at","ended_at","ended_at","ended_at","ended_at","ends_at","ends_at","ends_at","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expires_at","expires_at","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","follow","followed_at","followed_at","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_broadcaster_user_id","from_broadcaster_user_id","from_broadcaster_user_id","from_broadcaster_user_login","from_broadcaster_user_login","from_broadcaster_user_name","from_broadcaster_user_name","global_cooldown","global_cooldown","global_cooldown","goal","goal","goal","hypetrain","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","id","image","image","image","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_achieved","is_anonymous","is_anonymous","is_enabled","is_enabled","is_enabled","is_gift","is_gift","is_in_stock","is_in_stock","is_in_stock","is_mature","is_paused","is_paused","is_paused","is_permanent","is_user_input_required","is_user_input_required","is_user_input_required","language","last_contribution","last_contribution","level","level","locked_at","locks_at","locks_at","max_per_stream","max_per_stream","max_per_stream","max_per_user_per_stream","max_per_user_per_stream","max_per_user_per_stream","message","message","moderator_user_id","moderator_user_id","moderator_user_id","moderator_user_id","moderator_user_id","moderator_user_id","moderator_user_id","moderator_user_id","moderator_user_id","moderator_user_id","moderator_user_login","moderator_user_login","moderator_user_login","moderator_user_login","moderator_user_login","moderator_user_name","moderator_user_name","moderator_user_name","moderator_user_name","moderator_user_name","outcomes","outcomes","outcomes","outcomes","poll","prediction","progress","progress","prompt","prompt","prompt","raid","reason","redeemed_at","redeemed_at","redemptions_redeemed_current_stream","redemptions_redeemed_current_stream","redemptions_redeemed_current_stream","reward","reward","reward_id","reward_id","reward_id","reward_id","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","shield_mode","should_redemptions_skip_request_queue","should_redemptions_skip_request_queue","should_redemptions_skip_request_queue","shoutout","started_at","started_at","started_at","started_at","started_at","started_at","started_at","started_at","started_at","started_at","started_at","started_at","started_at","started_at","started_at","started_at","started_at","status","status","status","status","stopped_at","streak_months","subscribe","subscription","target_amount","target_amount","target_amount","target_amount","target_amount","target_amount","target_cooldown_ends_at","tier","tier","tier","tier","title","title","title","title","title","title","title","title","title","title","title","to_broadcaster_user_id","to_broadcaster_user_id","to_broadcaster_user_id","to_broadcaster_user_login","to_broadcaster_user_login","to_broadcaster_user_name","to_broadcaster_user_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_contributions","top_contributions","top_contributions","total","total","total","total","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unban","update","user_id","user_id","user_id","user_id","user_id","user_id","user_id","user_id","user_id","user_id","user_id","user_id","user_input","user_input","user_login","user_login","user_login","user_login","user_login","user_login","user_login","user_login","user_login","user_login","user_login","user_login","user_name","user_name","user_name","user_name","user_name","user_name","user_name","user_name","user_name","user_name","user_name","user_name","viewer_count","viewer_count","viewers","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","winning_outcome_id","ChannelBanV1","ChannelBanV1Payload","banned_at","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","ends_at","is_permanent","moderator_user_id","moderator_user_login","moderator_user_name","reason","user_id","user_login","user_name","ChannelPointsCustomRewardAddV1","ChannelPointsCustomRewardAddV1Payload","ChannelPointsCustomRewardRemoveV1","ChannelPointsCustomRewardRemoveV1Payload","ChannelPointsCustomRewardUpdateV1","ChannelPointsCustomRewardUpdateV1Payload","add","background_color","background_color","background_color","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","cooldown_expires_at","cooldown_expires_at","cooldown_expires_at","cost","cost","cost","default_image","default_image","default_image","global_cooldown","global_cooldown","global_cooldown","id","id","id","image","image","image","is_enabled","is_enabled","is_enabled","is_in_stock","is_in_stock","is_in_stock","is_paused","is_paused","is_paused","is_user_input_required","is_user_input_required","is_user_input_required","max_per_stream","max_per_stream","max_per_stream","max_per_user_per_stream","max_per_user_per_stream","max_per_user_per_stream","prompt","prompt","prompt","redemptions_redeemed_current_stream","redemptions_redeemed_current_stream","redemptions_redeemed_current_stream","remove","reward_id","reward_id","should_redemptions_skip_request_queue","should_redemptions_skip_request_queue","should_redemptions_skip_request_queue","title","title","title","update","ChannelPointsCustomRewardAddV1","ChannelPointsCustomRewardAddV1Payload","background_color","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","cooldown_expires_at","cost","default_image","global_cooldown","id","image","is_enabled","is_in_stock","is_paused","is_user_input_required","max_per_stream","max_per_user_per_stream","prompt","redemptions_redeemed_current_stream","should_redemptions_skip_request_queue","title","ChannelPointsCustomRewardRemoveV1","ChannelPointsCustomRewardRemoveV1Payload","background_color","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","cooldown_expires_at","cost","default_image","global_cooldown","id","image","is_enabled","is_in_stock","is_paused","is_user_input_required","max_per_stream","max_per_user_per_stream","prompt","redemptions_redeemed_current_stream","reward_id","reward_id","should_redemptions_skip_request_queue","title","ChannelPointsCustomRewardUpdateV1","ChannelPointsCustomRewardUpdateV1Payload","background_color","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","cooldown_expires_at","cost","default_image","global_cooldown","id","image","is_enabled","is_in_stock","is_paused","is_user_input_required","max_per_stream","max_per_user_per_stream","prompt","redemptions_redeemed_current_stream","reward_id","reward_id","should_redemptions_skip_request_queue","title","Canceled","ChannelPointsCustomRewardRedemptionAddV1","ChannelPointsCustomRewardRedemptionAddV1Payload","ChannelPointsCustomRewardRedemptionUpdateV1","ChannelPointsCustomRewardRedemptionUpdateV1Payload","Fulfilled","RedemptionStatus","Reward","Unfulfilled","Unknown","add","borrow","borrow","borrow_mut","borrow_mut","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_login","broadcaster_user_name","broadcaster_user_name","clone","clone","clone_into","clone_into","cost","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","id","id","id","into","into","prompt","redeemed_at","redeemed_at","reward","reward","reward_id","reward_id","serialize","serialize","status","status","title","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update","user_id","user_id","user_input","user_input","user_login","user_login","user_name","user_name","vzip","vzip","ChannelPointsCustomRewardRedemptionAddV1","ChannelPointsCustomRewardRedemptionAddV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","id","redeemed_at","reward","reward_id","reward_id","status","user_id","user_input","user_login","user_name","ChannelPointsCustomRewardRedemptionUpdateV1","ChannelPointsCustomRewardRedemptionUpdateV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","id","redeemed_at","reward","reward_id","reward_id","status","user_id","user_input","user_login","user_name","ChannelCharityCampaignDonateV1","ChannelCharityCampaignDonateV1Payload","ChannelCharityCampaignProgressV1","ChannelCharityCampaignProgressV1Payload","ChannelCharityCampaignStartV1","ChannelCharityCampaignStartV1Payload","ChannelCharityCampaignStopV1","ChannelCharityCampaignStopV1Payload","amount","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_login","broadcaster_login","broadcaster_login","broadcaster_name","broadcaster_name","broadcaster_name","broadcaster_name","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","campaign_id","charity_description","charity_description","charity_description","charity_description","charity_logo","charity_logo","charity_logo","charity_logo","charity_name","charity_name","charity_name","charity_name","charity_website","charity_website","charity_website","charity_website","current_amount","current_amount","current_amount","donate","id","id","id","id","progress","start","started_at","stop","stopped_at","target_amount","target_amount","target_amount","user_id","user_login","user_name","ChannelCharityCampaignDonateV1","ChannelCharityCampaignDonateV1Payload","amount","broadcaster_id","broadcaster_login","broadcaster_name","broadcaster_user_id","broadcaster_user_id","builder","campaign_id","charity_description","charity_logo","charity_name","charity_website","id","user_id","user_login","user_name","ChannelCharityCampaignProgressV1","ChannelCharityCampaignProgressV1Payload","broadcaster_id","broadcaster_login","broadcaster_name","broadcaster_user_id","broadcaster_user_id","builder","charity_description","charity_logo","charity_name","charity_website","current_amount","id","target_amount","ChannelCharityCampaignStartV1","ChannelCharityCampaignStartV1Payload","broadcaster_id","broadcaster_login","broadcaster_name","broadcaster_user_id","broadcaster_user_id","builder","charity_description","charity_logo","charity_name","charity_website","current_amount","id","started_at","target_amount","ChannelCharityCampaignStopV1","ChannelCharityCampaignStopV1Payload","broadcaster_id","broadcaster_login","broadcaster_name","broadcaster_user_id","broadcaster_user_id","builder","charity_description","charity_logo","charity_name","charity_website","current_amount","id","stopped_at","target_amount","ChannelCheerV1","ChannelCheerV1Payload","bits","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","is_anonymous","message","user_id","user_login","user_name","ChannelFollowV1","ChannelFollowV1Payload","ChannelFollowV2","ChannelFollowV2Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_login","broadcaster_user_name","broadcaster_user_name","builder","builder","followed_at","followed_at","moderator_user_id","new","user_id","user_id","user_login","user_login","user_name","user_name","ChannelGoalBeginV1","ChannelGoalBeginV1Payload","ChannelGoalEndV1","ChannelGoalEndV1Payload","ChannelGoalProgressV1","ChannelGoalProgressV1Payload","begin","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","current_amount","current_amount","current_amount","description","description","description","end","ended_at","id","id","id","is_achieved","progress","started_at","started_at","started_at","target_amount","target_amount","target_amount","type_","type_","type_","ChannelGoalBeginV1","ChannelGoalBeginV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","current_amount","description","id","started_at","target_amount","type_","ChannelGoalEndV1","ChannelGoalEndV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","current_amount","description","ended_at","id","is_achieved","started_at","target_amount","type_","ChannelGoalProgressV1","ChannelGoalProgressV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","current_amount","description","id","started_at","target_amount","type_","Bits","ChannelHypeTrainBeginV1","ChannelHypeTrainBeginV1Payload","ChannelHypeTrainEndV1","ChannelHypeTrainEndV1Payload","ChannelHypeTrainProgressV1","ChannelHypeTrainProgressV1Payload","Contribution","ContributionType","Subscription","begin","borrow","borrow","borrow_mut","borrow_mut","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","clone","clone","clone_into","clone_into","cooldown_ends_at","deserialize","deserialize","end","ended_at","eq","eq","equivalent","equivalent","expires_at","expires_at","fmt","fmt","from","from","goal","goal","id","id","id","into","into","last_contribution","last_contribution","level","level","progress","progress","progress","serialize","serialize","started_at","started_at","started_at","to_owned","to_owned","top_contributions","top_contributions","top_contributions","total","total","total","total","try_from","try_from","try_into","try_into","type_","type_id","type_id","user_id","user_login","user_name","vzip","vzip","ChannelHypeTrainBeginV1","ChannelHypeTrainBeginV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","expires_at","goal","id","last_contribution","progress","started_at","top_contributions","total","ChannelHypeTrainEndV1","ChannelHypeTrainEndV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","cooldown_ends_at","ended_at","id","level","started_at","top_contributions","total","ChannelHypeTrainProgressV1","ChannelHypeTrainProgressV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","expires_at","goal","id","last_contribution","level","progress","started_at","top_contributions","total","BitsVoting","ChannelPointsVoting","ChannelPollBeginV1","ChannelPollBeginV1Payload","ChannelPollEndV1","ChannelPollEndV1Payload","ChannelPollProgressV1","ChannelPollProgressV1Payload","amount_per_vote","amount_per_vote","begin","bits_voting","bits_voting","bits_voting","borrow","borrow","borrow_mut","borrow_mut","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","channel_points_voting","channel_points_voting","channel_points_voting","choices","choices","choices","clone","clone","clone_into","clone_into","deserialize","deserialize","end","ended_at","ends_at","ends_at","eq","eq","equivalent","equivalent","fmt","fmt","from","from","id","id","id","into","into","is_enabled","is_enabled","partial_cmp","partial_cmp","progress","serialize","serialize","started_at","started_at","started_at","status","title","title","title","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ChannelPollBeginV1","ChannelPollBeginV1Payload","bits_voting","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","channel_points_voting","choices","ends_at","id","started_at","title","ChannelPollEndV1","ChannelPollEndV1Payload","bits_voting","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","channel_points_voting","choices","ended_at","id","started_at","status","title","ChannelPollProgressV1","ChannelPollProgressV1Payload","bits_voting","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","channel_points_voting","choices","ends_at","id","started_at","title","ChannelPredictionBeginV1","ChannelPredictionBeginV1Payload","ChannelPredictionEndV1","ChannelPredictionEndV1Payload","ChannelPredictionLockV1","ChannelPredictionLockV1Payload","ChannelPredictionProgressV1","ChannelPredictionProgressV1Payload","begin","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","end","ended_at","id","id","id","id","lock","locked_at","locks_at","locks_at","outcomes","outcomes","outcomes","outcomes","progress","started_at","started_at","started_at","started_at","status","title","title","title","title","winning_outcome_id","ChannelPredictionBeginV1","ChannelPredictionBeginV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","id","locks_at","outcomes","started_at","title","ChannelPredictionEndV1","ChannelPredictionEndV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","ended_at","id","outcomes","started_at","status","title","winning_outcome_id","ChannelPredictionLockV1","ChannelPredictionLockV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","id","locked_at","outcomes","started_at","title","ChannelPredictionProgressV1","ChannelPredictionProgressV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","id","locks_at","outcomes","started_at","title","ChannelRaidV1","ChannelRaidV1Payload","builder","from_broadcaster_user_id","from_broadcaster_user_id","from_broadcaster_user_id","from_broadcaster_user_login","from_broadcaster_user_name","to_broadcaster_user_id","to_broadcaster_user_id","to_broadcaster_user_id","to_broadcaster_user_login","to_broadcaster_user_name","viewers","ChannelShieldModeBeginV1","ChannelShieldModeBeginV1Payload","ChannelShieldModeEndV1","ChannelShieldModeEndV1Payload","begin","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_login","broadcaster_user_name","broadcaster_user_name","end","ended_at","moderator_user_id","moderator_user_id","moderator_user_id","moderator_user_id","moderator_user_login","moderator_user_login","moderator_user_name","moderator_user_name","started_at","ChannelShieldModeBeginV1","ChannelShieldModeBeginV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","moderator_user_id","moderator_user_id","moderator_user_login","moderator_user_name","new","started_at","ChannelShieldModeEndV1","ChannelShieldModeEndV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","ended_at","moderator_user_id","moderator_user_id","moderator_user_login","moderator_user_name","new","ChannelShoutoutCreateV1","ChannelShoutoutCreateV1Payload","ChannelShoutoutReceiveV1","ChannelShoutoutReceiveV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_login","broadcaster_user_name","broadcaster_user_name","cooldown_ends_at","create","from_broadcaster_user_id","from_broadcaster_user_login","from_broadcaster_user_name","moderator_user_id","moderator_user_id","moderator_user_id","moderator_user_login","moderator_user_name","receive","started_at","started_at","target_cooldown_ends_at","to_broadcaster_user_id","to_broadcaster_user_login","to_broadcaster_user_name","viewer_count","viewer_count","ChannelShoutoutCreateV1","ChannelShoutoutCreateV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","cooldown_ends_at","moderator_user_id","moderator_user_id","moderator_user_login","moderator_user_name","new","started_at","target_cooldown_ends_at","to_broadcaster_user_id","to_broadcaster_user_login","to_broadcaster_user_name","viewer_count","ChannelShoutoutReceiveV1","ChannelShoutoutReceiveV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","from_broadcaster_user_id","from_broadcaster_user_login","from_broadcaster_user_name","moderator_user_id","new","started_at","viewer_count","ChannelSubscribeV1","ChannelSubscribeV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","is_gift","tier","user_id","user_login","user_name","ChannelSubscriptionEndV1","ChannelSubscriptionEndV1Payload","ChannelSubscriptionGiftV1","ChannelSubscriptionGiftV1Payload","ChannelSubscriptionMessageV1","ChannelSubscriptionMessageV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_login","broadcaster_user_login","broadcaster_user_name","broadcaster_user_name","broadcaster_user_name","cumulative_months","cumulative_total","duration_months","end","gift","is_anonymous","is_gift","message","message","streak_months","tier","tier","tier","total","user_id","user_id","user_id","user_login","user_login","user_login","user_name","user_name","user_name","ChannelSubscriptionEndV1","ChannelSubscriptionEndV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","is_gift","tier","user_id","user_login","user_name","ChannelSubscriptionGiftV1","ChannelSubscriptionGiftV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","cumulative_total","is_anonymous","tier","total","user_id","user_login","user_name","ChannelSubscriptionMessageV1","ChannelSubscriptionMessageV1Payload","SubscriptionMessage","borrow","borrow_mut","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","clone","clone_into","cumulative_months","deserialize","duration_months","emotes","eq","equivalent","fmt","from","into","message","serialize","streak_months","text","tier","to_owned","try_from","try_into","type_id","user_id","user_login","user_name","vzip","ChannelUnbanV1","ChannelUnbanV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","moderator_user_id","moderator_user_login","moderator_user_name","user_id","user_login","user_name","ChannelUpdateV1","ChannelUpdateV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","category_id","category_name","is_mature","language","title","ChannelBan","ChannelBanV1","ChannelCharityCampaignDonate","ChannelCharityCampaignDonateV1","ChannelCharityCampaignProgress","ChannelCharityCampaignProgressV1","ChannelCharityCampaignStart","ChannelCharityCampaignStartV1","ChannelCharityCampaignStop","ChannelCharityCampaignStopV1","ChannelCheer","ChannelCheerV1","ChannelFollow","ChannelFollowV1","ChannelFollowV2","ChannelGoalBegin","ChannelGoalBeginV1","ChannelGoalEnd","ChannelGoalEndV1","ChannelGoalProgress","ChannelGoalProgressV1","ChannelHypeTrainBegin","ChannelHypeTrainBeginV1","ChannelHypeTrainEnd","ChannelHypeTrainEndV1","ChannelHypeTrainProgress","ChannelHypeTrainProgressV1","ChannelPointsCustomRewardAdd","ChannelPointsCustomRewardAddV1","ChannelPointsCustomRewardRedemptionAdd","ChannelPointsCustomRewardRedemptionAddV1","ChannelPointsCustomRewardRedemptionUpdate","ChannelPointsCustomRewardRedemptionUpdateV1","ChannelPointsCustomRewardRemove","ChannelPointsCustomRewardRemoveV1","ChannelPointsCustomRewardUpdate","ChannelPointsCustomRewardUpdateV1","ChannelPollBegin","ChannelPollBeginV1","ChannelPollEnd","ChannelPollEndV1","ChannelPollProgress","ChannelPollProgressV1","ChannelPredictionBegin","ChannelPredictionBeginV1","ChannelPredictionEnd","ChannelPredictionEndV1","ChannelPredictionLock","ChannelPredictionLockV1","ChannelPredictionProgress","ChannelPredictionProgressV1","ChannelRaid","ChannelRaidV1","ChannelShieldModeBegin","ChannelShieldModeBeginV1","ChannelShieldModeEnd","ChannelShieldModeEndV1","ChannelShoutoutCreate","ChannelShoutoutCreateV1","ChannelShoutoutReceive","ChannelShoutoutReceiveV1","ChannelSubscribe","ChannelSubscribeV1","ChannelSubscriptionEnd","ChannelSubscriptionEndV1","ChannelSubscriptionGift","ChannelSubscriptionGiftV1","ChannelSubscriptionMessage","ChannelSubscriptionMessageV1","ChannelUnban","ChannelUnbanV1","ChannelUpdate","ChannelUpdateV1","Event","EventType","EventTypeParseError","StreamOffline","StreamOfflineV1","StreamOnline","StreamOnlineV1","UserAuthorizationGrant","UserAuthorizationGrantV1","UserAuthorizationRevoke","UserAuthorizationRevokeV1","UserUpdate","UserUpdateV1","borrow","borrow_mut","clone","clone_into","fmt","fmt","from","get_verification_request","into","is_notification","is_revocation","is_verification_request","parse","parse_http","parse_websocket","provide","subscription","to_owned","to_str","to_string","try_from","try_into","type_id","verify_payload","vzip","websocket","EventsubWebsocketData","EventsubWebsocketMetadata","Keepalive","Keepalive","KeepaliveMetadata","Notification","Notification","NotificationMetadata","Reconnect","Reconnect","ReconnectMetadata","ReconnectPayload","Revocation","Revocation","RevocationMetadata","SessionData","Welcome","Welcome","WelcomeMetadata","WelcomePayload","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connected_at","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","id","into","into","into","into","into","into","into","into","into","into","keepalive_timeout_seconds","message_id","message_id","message_id","message_id","message_id","message_id","message_id","message_timestamp","message_timestamp","message_timestamp","message_timestamp","message_timestamp","message_timestamp","message_timestamp","metadata","reconnect_url","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","session","session","status","subscription_type","subscription_type","subscription_version","subscription_version","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","metadata","metadata","metadata","metadata","metadata","payload","payload","payload","payload","payload","StreamOfflineV1","StreamOfflineV1Payload","StreamOnlineV1","StreamOnlineV1Payload","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_login","broadcaster_user_name","broadcaster_user_name","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","id","into","into","into","into","offline","online","serialize","serialize","serialize","serialize","started_at","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","StreamOfflineV1","StreamOfflineV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","StreamOnlineV1","StreamOnlineV1Payload","broadcaster_user_id","broadcaster_user_id","broadcaster_user_id","broadcaster_user_login","broadcaster_user_name","builder","id","started_at","type_","UserAuthorizationGrantV1","UserAuthorizationGrantV1Payload","UserAuthorizationRevokeV1","UserAuthorizationRevokeV1Payload","UserUpdateV1","UserUpdateV1Payload","authorization","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_id","client_id","client_id","client_id","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","email","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","serialize","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","update","user_id","user_id","user_id","user_id","user_login","user_login","user_login","user_name","user_name","user_name","vzip","vzip","vzip","vzip","vzip","vzip","UserAuthorizationGrantV1","UserAuthorizationGrantV1Payload","UserAuthorizationRevokeV1","UserAuthorizationRevokeV1Payload","client_id","client_id","client_id","client_id","grant","revoke","user_id","user_id","user_login","user_login","user_name","user_name","UserAuthorizationGrantV1","UserAuthorizationGrantV1Payload","builder","client_id","client_id","new","user_id","user_login","user_name","UserAuthorizationRevokeV1","UserAuthorizationRevokeV1Payload","builder","client_id","client_id","new","user_id","user_login","user_name","UserUpdateV1","UserUpdateV1Payload","builder","description","email","new","user_id","user_id","user_login","user_name","DonationAmount","borrow","borrow_mut","clone","clone_into","currency","decimal_places","deserialize","eq","equivalent","fmt","from","into","serialize","to_owned","try_from","try_into","type_id","value","vzip","Body","Body","Body","BodyError","ClientRequestError","CreateRequestError","CreateRequestError","Cursor","CursorRef","Custom","Custom","Custom","DeserializeError","DeserializeError","DeserializeError","DeserializeError","EmptyBody","Error","Error","Error","Error","Error","FieldNotSupported","HelixClient","HelixRequestBody","HelixRequestDeleteError","HelixRequestDeleteError","HelixRequestGetError","HelixRequestGetError","HelixRequestPatchError","HelixRequestPatchError","HelixRequestPostError","HelixRequestPostError","HelixRequestPutError","HelixRequestPutError","HttpError","HyperError","InvalidResponse","InvalidResponse","InvalidResponse","InvalidResponse","InvalidResponse","InvalidUri","InvalidUri","InvalidUri","JsonError","NoPage","OPT_SCOPE","PATH","Paginated","PairNotSupported","QuerySerializeError","QuerySerializeError","Request","RequestDelete","RequestError","RequestGet","RequestPatch","RequestPost","RequestPut","Response","Response","SCOPE","Scope","SerializeError","SerializeError","TopLevelNotSupported","UriParseError","UrlError","Utf8Error","Utf8Error","Utf8Error","Utf8Error","Utf8Error","ValueNotSupported","as_cow","as_ref","as_ref","as_ref","as_str","bits","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channels","charity","chat","client","clips","clone","clone","clone_into","clone_into","cmp","cmp","create_request","create_request","create_request","create_request","create_request","data","default","deref","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","eventsub","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_static","from_static","from_str","from_str","games","get_bare_uri","get_uri","goals","hash","hash","hypetrain","into","into","into","into","into","into","into","into","into","into","into","into","into_boxed_ref","into_owned","make_stream","moderation","new","other","pagination","parse_inner_response","parse_inner_response","parse_inner_response","parse_inner_response","parse_inner_response","parse_response","parse_response","parse_response","parse_response","parse_response","partial_cmp","partial_cmp","points","points","polls","predictions","provide","provide","provide","provide","provide","provide","provide","provide","provide","query","raids","request","request","response","schedule","search","serialize","serialize","set_pagination","source","source","source","source","source","source","source","source","source","streams","subscriptions","tags","take","teams","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","total","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_to_body","try_to_body","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","users","videos","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","whispers","body","error","message","reason","response","status","status","uri","uri","error","message","reason","response","status","status","uri","uri","body","error","message","reason","response","status","status","uri","uri","body","error","message","reason","response","status","status","uri","uri","body","error","message","reason","response","status","status","uri","uri","location","location","location","location","BitsLeaderboard","Cheermote","GetBitsLeaderboardRequest","GetCheermotesRequest","broadcaster_id","count","date_range","get_bits_leaderboard","get_cheermotes","is_charitable","last_updated","leaderboard","order","period","prefix","started_at","tiers","total","type_","user_id","BitsLeaderboard","DateRange","GetBitsLeaderboardRequest","LeaderboardUser","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","count","date_range","default","deserialize","deserialize","deserialize","deserialize","ended_at","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","leaderboard","new","parse_inner_response","period","period","rank","score","serialize","serialize","serialize","serialize","started_at","started_at","started_at","to_owned","to_owned","to_owned","to_owned","total","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","user_id","user_id","user_id","user_login","user_name","vzip","vzip","vzip","vzip","ChannelCustom","Cheermote","CheermoteImage","CheermoteImageArray","CheermoteImages","CheermoteType","DisplayOnly","GetCheermotesRequest","GlobalFirstParty","GlobalThirdParty","Level","Sponsored","Tiers","animated","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","builder","can_cheer","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","dark","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","id","images","into","into","into","into","into","into","into","into","is_charitable","last_updated","light","min_bits","new","order","prefix","serialize","serialize","serialize","serialize","serialize","serialize","serialize","show_in_bits_card","static_","tiers","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url_1_5x","url_1x","url_2x","url_3x","url_4x","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AddChannelVipRequest","AddChannelVipResponse","ChannelInformation","Editor","FollowedBroadcaster","Follower","GetChannelEditorsRequest","GetChannelFollowersRequest","GetChannelInformationRequest","GetFollowedChannels","GetVipsRequest","ModifyChannelInformation","ModifyChannelInformationBody","ModifyChannelInformationRequest","RemoveChannelVipRequest","RemoveChannelVipResponse","StartCommercial","StartCommercialBody","StartCommercialRequest","Success","Success","Success","Vip","add_channel_vip","after","after","after","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_language","broadcaster_language","broadcaster_login","broadcaster_login","broadcaster_name","broadcaster_name","created_at","delay","delay","description","first","first","first","followed_at","followed_at","game_id","game_id","game_name","get_channel_editors","get_channel_followers","get_channel_information","get_followed_channels","get_vips","length","length","message","modify_channel_information","remove_channel_vip","retry_after","start_commercial","tags","tags","title","title","user_id","user_id","user_id","user_id","user_id","user_id","user_id","user_id","user_login","user_login","user_name","user_name","user_name","AddChannelVipRequest","AddChannelVipResponse","Success","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","new","parse_inner_response","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","Editor","GetChannelEditorsRequest","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","builder","clone","clone","clone_into","clone_into","created_at","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_name","vzip","vzip","Follower","GetChannelFollowersRequest","after","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","first","first","fmt","fmt","followed_at","from","from","into","into","serialize","serialize","set_pagination","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_id","user_id","user_login","user_name","vzip","vzip","ChannelInformation","GetChannelInformationRequest","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_ids","broadcaster_language","broadcaster_login","broadcaster_name","builder","clone","clone","clone_into","clone_into","delay","description","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","game_id","game_name","into","into","serialize","serialize","tags","title","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FollowedBroadcaster","GetFollowedChannels","after","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_name","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","first","first","fmt","fmt","followed_at","from","from","into","into","serialize","serialize","set_pagination","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_id","vzip","vzip","GetVipsRequest","Vip","after","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","first","first","fmt","fmt","from","from","into","into","serialize","serialize","set_pagination","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_id","user_ids","user_login","user_name","vzip","vzip","ModifyChannelInformation","ModifyChannelInformationBody","ModifyChannelInformationRequest","Success","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_language","broadcaster_language","builder","builder","clone","clone","clone","clone_into","clone_into","clone_into","default","delay","delay","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","game_id","game_id","into","into","into","new","parse_inner_response","serialize","serialize","serialize","tags","tags","title","title","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_to_body","type_id","type_id","type_id","vzip","vzip","vzip","RemoveChannelVipRequest","RemoveChannelVipResponse","Success","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","new","parse_inner_response","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","StartCommercial","StartCommercialBody","StartCommercialRequest","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","builder","clone","clone","clone","clone_into","clone_into","clone_into","default","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","into","length","length","message","new","new","retry_after","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_to_body","type_id","type_id","type_id","vzip","vzip","vzip","CharityCampaign","CharityCampaignDonation","GetCharityCampaignDonationsRequest","GetCharityCampaignRequest","after","amount","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_name","campaign_id","charity_description","charity_logo","charity_name","charity_website","current_amount","first","get_charity_campaign","get_charity_campaign_donations","id","id","target_amount","user_id","user_login","user_name","CharityCampaign","GetCharityCampaignRequest","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_name","builder","charity_description","charity_logo","charity_name","charity_website","clone","clone","clone_into","clone_into","current_amount","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","id","into","into","parse_inner_response","serialize","serialize","target_amount","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CharityCampaignDonation","GetCharityCampaignDonationsRequest","after","amount","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","builder","campaign_id","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","first","first","fmt","fmt","from","from","id","into","into","serialize","serialize","set_pagination","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_login","user_name","vzip","vzip","AnnouncementColor","AnnouncementColorError","BadgeSet","Blue","ChannelEmote","ChatBadge","ChatSettings","Chatter","GetChannelChatBadgesRequest","GetChannelEmotesRequest","GetChatSettingsRequest","GetChattersRequest","GetEmoteSetsRequest","GetGlobalChatBadgesRequest","GetGlobalEmotesRequest","GetUserChatColorRequest","GlobalEmote","Green","Orange","Primary","Purple","SendAShoutoutRequest","SendAShoutoutResponse","SendChatAnnouncementBody","SendChatAnnouncementRequest","SendChatAnnouncementResponse","Success","Success","Success","UpdateChatSettingsBody","UpdateChatSettingsRequest","UpdateUserChatColorRequest","UpdateUserChatColorResponse","UserChatColor","after","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","color","color","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","emote_mode","emote_mode","emote_set_id","emote_set_id","emote_type","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","first","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","follower_mode","follower_mode","follower_mode_duration","follower_mode_duration","format","format","from","from","from","from","from","from","from","from_broadcaster_id","get_channel_chat_badges","get_channel_emotes","get_chat_settings","get_chatters","get_emote_sets","get_global_chat_badges","get_global_emotes","get_user_chat_color","id","id","id","image_url_1x","image_url_2x","image_url_4x","images","images","into","into","into","into","into","into","into","message","moderator_id","moderator_id","moderator_id","moderator_id","moderator_id","moderator_id","name","name","non_moderator_chat_delay","non_moderator_chat_delay","non_moderator_chat_delay_duration","non_moderator_chat_delay_duration","provide","scale","scale","send_a_shoutout","send_chat_announcement","serialize","serialize","serialize","serialize","serialize","serialize","set_id","slow_mode","slow_mode","slow_mode_wait_time","slow_mode_wait_time","subscriber_mode","subscriber_mode","theme_mode","theme_mode","tier","to_broadcaster_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique_chat_mode","unique_chat_mode","update_chat_settings","update_user_chat_color","url","user_id","user_id","user_id","user_id","user_login","user_login","user_name","user_name","versions","vzip","vzip","vzip","vzip","vzip","vzip","vzip","GetChannelChatBadgesRequest","GetChannelChatBadgesResponse","borrow","borrow_mut","broadcaster_id","broadcaster_id","builder","clone","clone_into","deserialize","eq","equivalent","fmt","from","into","serialize","to_owned","try_from","try_into","type_id","vzip","GetChannelEmotesRequest","GetChannelEmotesResponse","borrow","borrow_mut","broadcaster_id","broadcaster_id","builder","clone","clone_into","deserialize","eq","equivalent","fmt","from","into","serialize","to_owned","try_from","try_into","type_id","vzip","GetChatSettingsRequest","borrow","borrow_mut","broadcaster_id","broadcaster_id","builder","clone","clone_into","deserialize","eq","equivalent","fmt","from","into","moderator_id","moderator_id","parse_inner_response","serialize","to_owned","try_from","try_into","type_id","vzip","Chatter","GetChattersRequest","after","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","first","first","fmt","fmt","from","from","into","into","moderator_id","new","serialize","serialize","set_pagination","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_login","user_name","vzip","vzip","Emote","GetEmoteSetsRequest","borrow","borrow","borrow_mut","borrow_mut","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","emote_set_id","emote_set_id","emote_set_ids","emote_type","eq","eq","equivalent","equivalent","fmt","fmt","format","from","from","id","images","into","into","name","owner_id","scale","serialize","serialize","theme_mode","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","url","vzip","vzip","GetGlobalChatBadgesRequest","GetGlobalChatBadgesResponse","borrow","borrow_mut","builder","clone","clone_into","default","deserialize","eq","equivalent","fmt","from","into","new","serialize","to_owned","try_from","try_into","type_id","vzip","GetChannelEmotesResponse","GetGlobalEmotesRequest","borrow","borrow_mut","builder","clone","clone_into","default","deserialize","eq","equivalent","fmt","from","into","new","serialize","to_owned","try_from","try_into","type_id","vzip","GetUserChatColorRequest","UserChatColor","borrow","borrow","borrow_mut","borrow_mut","builder","clone","clone","clone_into","clone_into","color","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_id","user_ids","user_login","user_name","vzip","vzip","SendAShoutoutRequest","SendAShoutoutResponse","Success","borrow","borrow","borrow_mut","borrow_mut","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","from_broadcaster_id","into","into","moderator_id","new","parse_inner_response","serialize","to_broadcaster_id","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SendChatAnnouncementBody","SendChatAnnouncementRequest","SendChatAnnouncementResponse","Success","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","builder","builder","clone","clone","clone","clone_into","clone_into","clone_into","color","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","into","message","moderator_id","new","new","parse_inner_response","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_to_body","type_id","type_id","type_id","vzip","vzip","vzip","UpdateChatSettingsBody","UpdateChatSettingsRequest","UpdateChatSettingsResponse","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","builder","builder","clone","clone","clone_into","clone_into","default","deserialize","deserialize","emote_mode","eq","eq","equivalent","fmt","fmt","follower_mode","follower_mode_duration","from","from","into","into","moderator_id","new","non_moderator_chat_delay","non_moderator_chat_delay_duration","parse_inner_response","serialize","serialize","slow_mode","slow_mode_wait_time","subscriber_mode","to_owned","to_owned","try_from","try_from","try_into","try_into","try_to_body","type_id","type_id","unique_chat_mode","vzip","vzip","Success","UpdateUserChatColorRequest","UpdateUserChatColorResponse","borrow","borrow","borrow_mut","borrow_mut","builder","clone","clone","clone_into","clone_into","color","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","new","parse_inner_response","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","HelixClient","clone_client","get_client","new","req_delete","req_get","req_patch","req_post","req_put","with_client","Clip","CreateClipRequest","CreatedClip","GetClipsRequest","after","before","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_name","create_clip","created_at","creator_id","creator_name","duration","edit_url","embed_url","ended_at","first","game_id","game_id","get_clips","has_delay","id","id","id","language","started_at","thumbnail_url","title","url","video_id","view_count","vod_offset","CreateClipRequest","CreatedClip","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","edit_url","eq","eq","equivalent","fmt","fmt","from","from","has_delay","has_delay","id","into","into","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Clip","GetClipsRequest","after","before","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_name","builder","clip_ids","clone","clone","clone_into","clone_into","created_at","creator_id","creator_name","deserialize","deserialize","duration","embed_url","empty","ended_at","ended_at","eq","eq","equivalent","first","first","fmt","fmt","from","from","game_id","game_id","game_id","id","id","into","into","language","serialize","serialize","set_pagination","started_at","started_at","thumbnail_url","title","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","url","video_id","view_count","vod_offset","vzip","vzip","CreateEventSubSubscription","CreateEventSubSubscriptionBody","CreateEventSubSubscriptionRequest","DeleteEventSubSubscription","DeleteEventSubSubscriptionRequest","EventSubSubscriptions","GetEventSubSubscriptionsRequest","Success","after","condition","cost","create_eventsub_subscription","created_at","delete_eventsub_subscription","first","get_eventsub_subscriptions","id","id","max_total_cost","max_total_cost","status","status","subscription","subscriptions","total","total","total_cost","total_cost","transport","transport","type_","type_","user_id","version","CreateEventSubSubscription","CreateEventSubSubscriptionBody","CreateEventSubSubscriptionRequest","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","builder","clone","clone","clone","clone_into","clone_into","clone_into","condition","cost","created_at","default","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","id","into","into","into","max_total_cost","new","new","parse_inner_response","serialize","serialize","status","subscription","to_owned","to_owned","to_owned","total","total_cost","transport","transport","try_from","try_from","try_from","try_into","try_into","try_into","try_to_body","type_","type_id","type_id","type_id","version","vzip","vzip","vzip","DeleteEventSubSubscription","DeleteEventSubSubscriptionRequest","Success","borrow","borrow","borrow_mut","borrow_mut","builder","clone","clone","clone_into","clone_into","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","id","id","into","into","parse_inner_response","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","EventSubSubscriptions","GetEventSubSubscriptionsRequest","after","borrow","borrow","borrow_mut","borrow_mut","builder","clone","clone","clone_into","clone_into","default","deserialize","eq","eq","equivalent","equivalent","eventsub_type","first","fmt","fmt","from","from","into","into","max_total_cost","parse_inner_response","serialize","serialize","set_pagination","status","status","subscriptions","to_owned","to_owned","total","total_cost","try_from","try_from","try_into","try_into","type_","type_id","type_id","user_id","vzip","vzip","Game","GetGamesRequest","GetTopGamesRequest","after","before","box_art_url","first","get_games","get_top_games","id","id","igdb_id","name","name","Game","GetGamesRequest","borrow","borrow_mut","builder","clone","clone_into","deserialize","eq","equivalent","fmt","from","id","ids","into","name","names","serialize","to_owned","try_from","try_into","type_id","vzip","Game","GetTopGamesRequest","after","before","borrow","borrow_mut","builder","clone","clone_into","default","deserialize","eq","equivalent","first","first","fmt","from","into","serialize","set_pagination","to_owned","try_from","try_into","type_id","vzip","CreatorGoal","GetCreatorGoalsRequest","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_name","created_at","current_amount","cursor","description","first","get_creator_goals","id","id","target_amount","type_","CreatorGoal","GetCreatorGoalsRequest","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_name","builder","clone","clone","clone_into","clone_into","created_at","current_amount","cursor","description","deserialize","deserialize","eq","eq","equivalent","equivalent","first","first","fmt","fmt","from","from","id","id","into","into","serialize","serialize","target_amount","to_owned","to_owned","try_from","try_from","try_into","try_into","type_","type_id","type_id","vzip","vzip","Bits","Contribution","ContributionType","GetHypeTrainEventsRequest","Other","Subscription","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","clone","clone","clone_into","clone_into","cursor","deserialize","deserialize","eq","eq","equivalent","equivalent","first","fmt","fmt","from","from","get_hypetrain_events","id","into","into","serialize","serialize","to_owned","to_owned","total","try_from","try_from","try_into","try_into","type_","type_id","type_id","user","vzip","vzip","GetHypeTrainEventsRequest","HypeTrainEvent","HypeTrainEventData","HypeTrainEventType","Progression","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_id","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cooldown_end_time","cursor","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","event_data","event_timestamp","event_type","expires_at","first","fmt","fmt","fmt","fmt","from","from","from","from","goal","id","id","id","into","into","into","into","last_contribution","level","serialize","serialize","serialize","serialize","set_pagination","started_at","to_owned","to_owned","to_owned","to_owned","top_contributions","total","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","AddBlockedTermBody","AddBlockedTermRequest","AddChannelModeratorRequest","AddChannelModeratorResponse","Allow","AutoModAction","BanUser","BanUserBody","BanUserRequest","BannedUser","BlockedTerm","CheckAutoModStatus","CheckAutoModStatusBody","CheckAutoModStatusRequest","DeleteChatMessagesRequest","DeleteChatMessagesResponse","Deny","GetBannedUsersRequest","GetModeratorsRequest","GetShieldModeStatusRequest","LastShieldMode","ManageHeldAutoModMessages","ManageHeldAutoModMessagesBody","ManageHeldAutoModMessagesRequest","Moderator","RemoveBlockedTerm","RemoveBlockedTermRequest","RemoveChannelModeratorRequest","RemoveChannelModeratorResponse","ShieldModeStatus","Success","Success","Success","Success","Success","Success","UnbanUserRequest","UnbanUserResponse","action","add_blocked_term","add_channel_moderator","after","after","ban_user","before","borrow","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","check_automod_status","clone","clone_into","created_at","created_at","delete_chat_messages","deserialize","duration","end_time","eq","equivalent","expires_at","expires_at","first","first","fmt","from","get_banned_users","get_blocked_terms","get_moderators","get_shield_mode_status","id","id","into","is_active","is_permitted","last_activated_at","last_shield_mode","manage_held_automod_messages","message_id","moderator_id","moderator_id","moderator_id","moderator_id","moderator_id","moderator_id","moderator_id","moderator_id","moderator_id","moderator_id","moderator_id","moderator_id","moderator_login","moderator_login","moderator_name","moderator_name","msg_id","msg_id","msg_id","msg_text","reason","reason","remove_blocked_term","remove_channel_moderator","serialize","text","text","to_owned","try_from","try_into","type_id","unban_user","update_shield_mode_status","updated_at","user_id","user_id","user_id","user_id","user_id","user_id","user_id","user_id","user_id","user_login","user_login","user_name","user_name","vzip","AddBlockedTermBody","AddBlockedTermRequest","AddBlockedTermResponse","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","builder","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","moderator_id","new","new","serialize","serialize","text","to_owned","to_owned","try_from","try_from","try_into","try_into","try_to_body","type_id","type_id","vzip","vzip","AddChannelModeratorRequest","AddChannelModeratorResponse","Success","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","moderator_id","new","parse_inner_response","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BanUser","BanUserBody","BanUserRequest","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","builder","builder","clone","clone","clone","clone_into","clone_into","clone_into","created_at","deserialize","deserialize","deserialize","duration","end_time","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","into","moderator_id","moderator_id","new","new","parse_inner_response","reason","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_to_body","type_id","type_id","type_id","user_id","user_id","vzip","vzip","vzip","CheckAutoModStatus","CheckAutoModStatusBody","CheckAutoModStatusRequest","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","builder","builder","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","into","is_permitted","msg_id","msg_id","msg_text","new","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_id","vzip","vzip","vzip","DeleteChatMessagesRequest","DeleteChatMessagesResponse","Success","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","message_id","message_id","moderator_id","new","parse_inner_response","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","BannedUser","GetBannedUsersRequest","after","before","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","expires_at","first","first","fmt","fmt","from","from","into","into","moderator_id","moderator_login","moderator_name","reason","serialize","serialize","set_pagination","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_id","user_login","user_name","users","vzip","vzip","GetBlockedTermsRequest","GetBlockedTermsResponse","after","borrow","borrow_mut","broadcaster_id","builder","clone","clone_into","deserialize","eq","equivalent","first","first","fmt","from","into","moderator_id","new","serialize","set_pagination","to_owned","try_from","try_into","type_id","vzip","GetModeratorsRequest","Moderator","after","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","first","first","fmt","fmt","from","from","into","into","serialize","serialize","set_pagination","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_id","user_ids","user_login","user_name","vzip","vzip","GetShieldModeStatusRequest","LastShieldMode","ShieldModeStatus","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","builder","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","into","is_active","last_activated_at","last_shield_mode","moderator_id","moderator_id","moderator_login","moderator_name","new","parse_inner_response","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Allow","AutoModAction","Deny","ManageHeldAutoModMessages","ManageHeldAutoModMessagesBody","ManageHeldAutoModMessagesRequest","Success","action","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","into","into","into","into","msg_id","new","new","parse_inner_response","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_to_body","type_id","type_id","type_id","type_id","user_id","vzip","vzip","vzip","vzip","RemoveBlockedTerm","RemoveBlockedTermRequest","Success","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","id","into","into","moderator_id","new","parse_inner_response","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","RemoveChannelModeratorRequest","RemoveChannelModeratorResponse","Success","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","moderator_id","new","parse_inner_response","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Success","UnbanUserRequest","UnbanUserResponse","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","moderator_id","new","parse_inner_response","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_id","vzip","vzip","ShieldModeStatus","UpdateShieldModeStatusBody","UpdateShieldModeStatusRequest","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","builder","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","is_active","is_active","is_active","last_shield_mode","moderator_id","new","parse_inner_response","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","try_to_body","type_id","type_id","vzip","vzip","Canceled","CreateCustomRewardBody","CreateCustomRewardRequest","CreateCustomRewardResponse","CustomReward","CustomRewardRedemption","CustomRewardRedemptionStatus","DeleteCustomReward","DeleteCustomRewardRequest","Fulfilled","GetCustomRewardRedemptionRequest","GetCustomRewardRequest","Success","Success","Unfulfilled","UpdateCustomRewardBody","UpdateCustomRewardRequest","UpdateRedemptionStatusBody","UpdateRedemptionStatusInformation","UpdateRedemptionStatusRequest","after","background_color","background_color","background_color","borrow","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_login","broadcaster_name","broadcaster_name","clone","clone_into","cooldown_expires_at","cost","cost","cost","create_custom_rewards","default_image","delete_custom_reward","deserialize","eq","equivalent","first","fmt","from","get_custom_reward","get_custom_reward_redemption","global_cooldown_seconds","global_cooldown_seconds","global_cooldown_setting","id","id","id","id","id","id","id","image","into","is_enabled","is_enabled","is_enabled","is_global_cooldown_enabled","is_global_cooldown_enabled","is_in_stock","is_max_per_stream_enabled","is_max_per_stream_enabled","is_max_per_user_per_stream_enabled","is_max_per_user_per_stream_enabled","is_paused","is_paused","is_user_input_required","is_user_input_required","is_user_input_required","max_per_stream","max_per_stream","max_per_stream_setting","max_per_user_per_stream","max_per_user_per_stream","max_per_user_per_stream_setting","only_manageable_rewards","prompt","prompt","prompt","redeemed_at","redemptions_redeemed_current_stream","reward","reward_id","reward_id","serialize","should_redemptions_skip_request_queue","should_redemptions_skip_request_queue","should_redemptions_skip_request_queue","sort","status","status","status","title","title","title","to_owned","try_from","try_into","type_id","update_custom_reward","update_redemption_status","user_id","user_input","user_login","user_name","vzip","CreateCustomRewardBody","CreateCustomRewardRequest","CreateCustomRewardResponse","background_color","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","builder","builder","clone","clone","clone_into","clone_into","cost","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","global_cooldown_seconds","into","into","is_enabled","is_global_cooldown_enabled","is_max_per_stream_enabled","is_max_per_user_per_stream_enabled","is_user_input_required","max_per_stream","max_per_user_per_stream","new","parse_inner_response","prompt","serialize","serialize","should_redemptions_skip_request_queue","title","to_owned","to_owned","try_from","try_from","try_into","try_into","try_to_body","type_id","type_id","vzip","vzip","DeleteCustomReward","DeleteCustomRewardRequest","Success","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","id","into","into","new","parse_inner_response","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CustomReward","GetCustomRewardRequest","background_color","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_name","builder","clone","clone","clone_into","clone_into","cooldown_expires_at","cost","default_image","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","global_cooldown_setting","id","id","ids","image","into","into","is_enabled","is_in_stock","is_paused","is_user_input_required","max_per_stream_setting","max_per_user_per_stream_setting","only_manageable_rewards","only_manageable_rewards","prompt","redemptions_redeemed_current_stream","serialize","serialize","should_redemptions_skip_request_queue","title","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","CustomRewardRedemption","GetCustomRewardRedemptionRequest","GetCustomRewardRedemptionSortOrder","Newest","Oldest","Reward","after","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_name","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cost","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","first","fmt","fmt","fmt","fmt","from","from","from","from","id","id","id","ids","into","into","into","into","prompt","redeemed_at","reward","reward_id","reward_id","serialize","serialize","serialize","serialize","set_pagination","sort","sort","status","status","status","title","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","user_id","user_input","user_login","user_name","vzip","vzip","vzip","vzip","Success","UpdateCustomReward","UpdateCustomRewardBody","UpdateCustomRewardRequest","background_color","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","builder","builder","clone","clone","clone","clone_into","clone_into","clone_into","cost","default","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","global_cooldown_seconds","id","into","into","into","is_enabled","is_global_cooldown_enabled","is_max_per_stream_enabled","is_max_per_user_per_stream_enabled","is_paused","is_user_input_required","max_per_stream","max_per_user_per_stream","new","parse_inner_response","prompt","serialize","serialize","serialize","should_redemptions_skip_request_queue","title","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_to_body","type_id","type_id","type_id","vzip","vzip","vzip","CustomRewardRedemption","Success","UpdateRedemptionStatusBody","UpdateRedemptionStatusInformation","UpdateRedemptionStatusRequest","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_name","builder","builder","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","id","id","into","into","into","new","parse_inner_response","redeemed_at","reward","reward_id","serialize","serialize","serialize","status","status","status","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_to_body","type_id","type_id","type_id","user_id","user_input","user_login","user_name","vzip","vzip","vzip","CreatePollBody","CreatePollRequest","EndPollBody","EndPollRequest","GetPollsRequest","NewPollChoice","Poll","after","bits_per_vote","bits_per_vote","bits_voting_enabled","bits_voting_enabled","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_name","channel_points_per_vote","channel_points_per_vote","channel_points_voting_enabled","channel_points_voting_enabled","choices","choices","create_poll","duration","duration","end_poll","ended_at","first","get_polls","id","id","id","started_at","status","status","title","title","title","CreatePollBody","CreatePollRequest","CreatePollResponse","NewPollChoice","bits_per_vote","bits_voting_enabled","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","builder","builder","builder","channel_points_per_vote","channel_points_per_vote","channel_points_voting_enabled","channel_points_voting_enabled","choices","clone","clone","clone","clone_into","clone_into","clone_into","default","deserialize","deserialize","deserialize","duration","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","into","new","new","new","parse_inner_response","serialize","serialize","serialize","title","title","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_to_body","type_id","type_id","type_id","vzip","vzip","vzip","Active","Archived","AuthFailed","Completed","EndPoll","EndPollBody","EndPollRequest","Invalid","MissingQuery","Moderated","PollStatus","Success","Terminated","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","builder","builder","clone","clone","clone","clone_into","clone_into","clone_into","default","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","id","into","into","into","new","new","parse_inner_response","serialize","serialize","status","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_to_body","type_id","type_id","type_id","vzip","vzip","vzip","Active","Archived","Completed","GetPollsRequest","Invalid","Moderated","Poll","PollChoice","PollStatus","Terminated","after","bits_per_vote","bits_votes","bits_voting_enabled","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_name","builder","channel_points_per_vote","channel_points_votes","channel_points_voting_enabled","choices","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","duration","ended_at","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","first","fmt","fmt","fmt","fmt","from","from","from","from","id","id","id","ids","into","into","into","into","serialize","serialize","serialize","set_pagination","started_at","status","title","title","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","votes","vzip","vzip","vzip","vzip","GetPredictionsRequest","Prediction","after","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_name","create_prediction","created_at","end_prediction","ended_at","first","get_predictions","id","id","locked_at","outcomes","prediction_window","status","title","winning_outcome_id","CreatePredictionBody","CreatePredictionRequest","CreatePredictionResponse","NewPredictionOutcome","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","builder","builder","builder","clone","clone","clone","clone_into","clone_into","clone_into","default","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","into","new","new","new","outcomes","parse_inner_response","prediction_window","serialize","serialize","serialize","title","title","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_to_body","type_id","type_id","type_id","vzip","vzip","vzip","AuthFailed","EndPrediction","EndPredictionBody","EndPredictionRequest","MissingQuery","Success","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","builder","builder","clone","clone","clone","clone_into","clone_into","clone_into","default","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","id","into","into","into","new","new","parse_inner_response","serialize","serialize","status","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_to_body","type_id","type_id","type_id","vzip","vzip","vzip","winning_outcome_id","winning_outcome_id","Active","Canceled","GetPredictionsRequest","Locked","Prediction","PredictionOutcome","PredictionOutcomeId","PredictionStatus","Resolved","after","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_name","builder","channel_points","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","color","created_at","deref","deserialize","deserialize","deserialize","deserialize","deserialize","ended_at","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","first","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_static","from_str","hash","id","id","id","ids","into","into","into","into","into","into_boxed_ref","into_cow","into_cow","locked_at","new","outcomes","partial_cmp","prediction_window","serialize","serialize","serialize","serialize","set_pagination","status","take","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","top_predictors","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","users","vzip","vzip","vzip","vzip","vzip","winning_outcome_id","CancelARaidRequest","CancelARaidResponse","StartARaidRequest","StartARaidResponse","Success","broadcaster_id","cancel_a_raid","start_a_raid","CancelARaidRequest","CancelARaidResponse","Success","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","parse_inner_response","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StartARaidRequest","StartARaidResponse","borrow","borrow","borrow_mut","borrow_mut","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","new","parse_inner_response","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Body","Body","Body","OPT_SCOPE","PATH","Request","RequestDelete","RequestGet","RequestPatch","RequestPost","RequestPut","Response","SCOPE","create_request","create_request","create_request","create_request","create_request","errors","get_bare_uri","get_uri","parse_inner_response","parse_inner_response","parse_inner_response","parse_inner_response","parse_inner_response","parse_response","parse_response","parse_response","parse_response","parse_response","query","ClientRequestError","CreateRequestError","CreateRequestError","Custom","Custom","Custom","DeserializeError","DeserializeError","DeserializeError","DeserializeError","Error","Error","Error","Error","Error","FieldNotSupported","HelixRequestDeleteError","HelixRequestDeleteError","HelixRequestGetError","HelixRequestGetError","HelixRequestPatchError","HelixRequestPatchError","HelixRequestPostError","HelixRequestPostError","HelixRequestPutError","HelixRequestPutError","HttpError","HyperError","InvalidResponse","InvalidResponse","InvalidResponse","InvalidResponse","InvalidResponse","InvalidUri","InvalidUri","NoPage","PairNotSupported","QuerySerializeError","RequestError","SerializeError","SerializeError","TopLevelNotSupported","UriParseError","UrlError","Utf8Error","Utf8Error","Utf8Error","Utf8Error","Utf8Error","ValueNotSupported","borrow","borrow_mut","custom","fmt","fmt","from","into","provide","to_string","try_from","try_into","type_id","vzip","body","error","message","reason","response","status","status","uri","uri","error","message","reason","response","status","status","uri","uri","body","error","message","reason","response","status","status","uri","uri","body","error","message","reason","response","status","status","uri","uri","body","error","message","reason","response","status","status","uri","uri","location","location","location","location","Response","data","first","get_next","get_other","other","pagination","request","total","Category","CreateChannelStreamScheduleSegmentBody","CreateChannelStreamScheduleSegmentRequest","DeleteChannelStreamScheduleSegment","DeleteChannelStreamScheduleSegmentRequest","GetChannelStreamScheduleRequest","ScheduledBroadcasts","Segment","Success","Success","UpdateChannelStreamSchedule","UpdateChannelStreamScheduleRequest","Vacation","after","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_name","canceled_until","category","category_id","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","create_channel_stream_schedule_segment","delete_channel_stream_schedule_segment","deserialize","deserialize","deserialize","deserialize","duration","end_time","end_time","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","first","fmt","fmt","fmt","fmt","from","from","from","from","get_channel_stream_schedule","id","id","id","id","into","into","into","into","is_recurring","is_recurring","is_vacation_enabled","name","segments","start_time","start_time","start_time","start_time","timezone","timezone","title","title","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_channel_stream_schedule","update_channel_stream_schedule_segment","utc_offset","vacation","vacation_end_time","vacation_start_time","vzip","vzip","vzip","vzip","CreateChannelStreamScheduleSegmentBody","CreateChannelStreamScheduleSegmentRequest","CreateChannelStreamScheduleSegmentResponse","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","builder","builder","category_id","clone","clone","clone_into","clone_into","deserialize","deserialize","duration","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","is_recurring","new","serialize","serialize","start_time","timezone","title","to_owned","to_owned","try_from","try_from","try_into","try_into","try_to_body","type_id","type_id","vzip","vzip","DeleteChannelStreamScheduleSegment","DeleteChannelStreamScheduleSegmentRequest","Success","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","fmt","fmt","from","from","id","into","into","new","parse_inner_response","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","GetChannelStreamScheduleRequest","GetChannelStreamScheduleResponse","after","borrow","borrow_mut","broadcaster_id","broadcaster_id","builder","clone","clone_into","deserialize","eq","equivalent","first","first","fmt","from","id","id","into","serialize","set_pagination","start_time","start_time","to_owned","try_from","try_into","type_id","utc_offset","utc_offset","vzip","Success","UpdateChannelStreamSchedule","UpdateChannelStreamScheduleRequest","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","is_vacation_enabled","parse_inner_response","serialize","serialize","timezone","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vacation_end_time","vacation_start_time","vzip","vzip","UpdateChannelStreamScheduleSegmentBody","UpdateChannelStreamScheduleSegmentRequest","UpdateChannelStreamScheduleSegmentResponse","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","builder","builder","category_id","clone","clone","clone_into","clone_into","default","deserialize","deserialize","duration","eq","eq","equivalent","equivalent","fmt","fmt","from","from","id","into","into","is_canceled","new","parse_inner_response","serialize","serialize","start_time","timezone","title","to_owned","to_owned","try_from","try_from","try_into","try_into","try_to_body","type_id","type_id","vzip","vzip","Category","Channel","SearchCategoriesRequest","SearchChannelsRequest","after","after","before","borrow","borrow_mut","box_art_url","broadcaster_language","broadcaster_login","clone","clone_into","deserialize","display_name","eq","equivalent","first","first","fmt","from","game_id","game_name","id","id","igdb_id","into","is_live","live_only","name","query","query","search_categories","search_channels","serialize","started_at","tag_ids","tags","thumbnail_url","title","to_owned","try_from","try_into","type_id","vzip","Category","SearchCategoriesRequest","after","before","borrow","borrow_mut","builder","clone","clone_into","deserialize","eq","equivalent","first","first","fmt","from","into","parse_inner_response","query","query","serialize","set_pagination","to_owned","try_from","try_into","type_id","vzip","Channel","SearchChannelsRequest","after","borrow","borrow","borrow_mut","borrow_mut","broadcaster_language","broadcaster_login","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","display_name","eq","eq","equivalent","equivalent","first","first","fmt","fmt","from","from","game_id","game_name","id","into","into","is_live","live_only","live_only","query","query","serialize","serialize","set_pagination","started_at","tag_ids","tags","thumbnail_url","title","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","GetFollowedStreamsRequest","GetStreamTagsRequest","GetStreamsRequest","Live","NotLive","ReplaceStreamTags","ReplaceStreamTagsBody","ReplaceStreamTagsRequest","Stream","StreamType","Success","Tag","after","after","before","before","borrow","borrow_mut","broadcaster_id","broadcaster_id","clone","clone_into","deserialize","eq","equivalent","first","first","fmt","from","game_id","game_id","game_name","get_followed_streams","get_stream_tags","get_streams","id","into","is_live","is_mature","language","language","replace_stream_tags","serialize","started_at","tag_ids","tag_ids","tags","thumbnail_url","title","to_owned","try_from","try_into","type_","type_id","user_id","user_id","user_id","user_login","user_login","user_name","viewer_count","vzip","GetFollowedStreamsRequest","GetFollowedStreamsResponse","after","before","borrow","borrow_mut","builder","clone","clone_into","deserialize","eq","equivalent","first","first","fmt","from","into","serialize","set_pagination","to_owned","try_from","try_into","type_id","user_id","user_id","vzip","GetStreamTagsRequest","Tag","borrow","borrow_mut","broadcaster_id","broadcaster_id","builder","clone","clone_into","deserialize","eq","equivalent","fmt","from","into","serialize","to_owned","try_from","try_into","type_id","vzip","GetStreamsRequest","Stream","after","before","borrow","borrow","borrow_mut","borrow_mut","builder","clone","clone","clone_into","clone_into","default","deserialize","deserialize","eq","eq","equivalent","first","first","fmt","fmt","from","from","game_id","game_id","game_name","id","into","into","is_mature","language","language","serialize","serialize","set_pagination","started_at","tag_ids","tags","thumbnail_url","title","to_owned","to_owned","try_from","try_from","try_into","try_into","type_","type_id","type_id","user_id","user_id","user_ids","user_login","user_login","user_logins","user_name","viewer_count","vzip","vzip","ReplaceStreamTags","ReplaceStreamTagsBody","ReplaceStreamTagsRequest","Success","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","builder","builder","clone","clone","clone","clone_into","clone_into","clone_into","default","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","into","into","into","parse_inner_response","serialize","serialize","serialize","tag_ids","tag_ids","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_to_body","type_id","type_id","type_id","vzip","vzip","vzip","BroadcasterSubscription","BroadcasterSubscriptionEvent","CheckUserSubscriptionRequest","GetBroadcasterSubscriptionsEventsRequest","GetBroadcasterSubscriptionsRequest","UserSubscription","after","after","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_login","broadcaster_name","broadcaster_name","check_user_subscription","event_data","event_timestamp","event_type","first","first","get_broadcaster_subscriptions","get_broadcaster_subscriptions_events","gifter_id","gifter_login","gifter_login","gifter_name","gifter_name","id","id","is_gift","is_gift","plan_name","tier","tier","user_id","user_id","user_id","user_id","user_login","user_name","version","CheckUserSubscriptionRequest","UserSubscription","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_name","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","gifter_login","gifter_name","into","into","is_gift","parse_inner_response","serialize","serialize","tier","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_ids","vzip","vzip","BroadcasterSubscription","BroadcasterSubscriptionPointsError","DeserError","GetBroadcasterSubscriptionsRequest","PointsNotFound","after","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_name","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","first","first","fmt","fmt","fmt","fmt","from","from","from","from","gifter_id","gifter_login","gifter_name","into","into","into","is_gift","plan_name","provide","serialize","serialize","set_pagination","source","subscriber","tier","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_id","user_id","user_login","user_name","vzip","vzip","vzip","BroadcasterSubscriptionEvent","BroadcasterSubscriptionEventData","BroadcasterSubscriptionEventType","GetBroadcasterSubscriptionsEventsRequest","Notification","Subscribe","Unsubscribe","after","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_name","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","event_data","event_timestamp","event_type","first","fmt","fmt","fmt","fmt","from","from","from","from","gifter_id","gifter_name","id","id","into","into","into","into","is_gift","plan_name","serialize","serialize","serialize","serialize","set_pagination","tier","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","user_id","user_id","user_ids","user_name","version","vzip","vzip","vzip","vzip","AutoGenerated","False","GetAllStreamTagsRequest","Tag","TagLanguage","TagLanguageRef","True","TwitchTag","after","as_ref","as_ref","as_ref","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","deref","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","first","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_static","from_static","from_str","from_str","get_all_stream_tags","hash","hash","id","into","into","into","into_boxed_ref","into_owned","is_auto","localization_descriptions","localization_names","new","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","tag_id","take","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","GetAllStreamTagsRequest","Tag","after","borrow","borrow_mut","builder","clone","clone_into","default","deserialize","eq","equivalent","first","fmt","from","into","serialize","set_pagination","tag_id","tag_ids","to_owned","try_from","try_into","type_id","vzip","TeamInformation","background_image_url","banner","borrow","borrow_mut","clone","clone_into","created_at","deserialize","eq","equivalent","fmt","from","get_channel_teams","get_teams","id","info","into","serialize","team_display_name","team_name","thumbnail_url","to_owned","try_from","try_into","type_id","updated_at","vzip","BroadcasterTeam","GetChannelTeamsRequest","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","broadcaster_id","broadcaster_login","broadcaster_name","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","parse_inner_response","serialize","serialize","team","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","GetTeamsRequest","Team","borrow","borrow","borrow_mut","borrow_mut","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","id","id","into","into","name","name","serialize","serialize","team","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","users","vzip","vzip","BlockUser","BlockUserRequest","FollowRelationship","GetUserBlockListRequest","GetUsersFollowsRequest","GetUsersRequest","Success","Success","UnblockUser","UnblockUserRequest","User","UserBlock","UsersFollows","after","after","block_user","broadcaster_id","broadcaster_type","created_at","description","display_name","display_name","email","first","first","follow_relationships","followed_at","from_id","from_id","from_login","from_name","get_user_block_list","get_users","get_users_follows","id","id","login","login","offline_image_url","profile_image_url","reason","source_context","target_user_id","target_user_id","to_id","to_id","to_login","to_name","total","type_","unblock_user","user_id","user_login","view_count","BlockUser","BlockUserRequest","Chat","Harassment","Other","Reason","SourceContext","Spam","Success","Whispher","block_user","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","parse_inner_response","reason","reason","serialize","serialize","serialize","serialize","source_context","source_context","target_user_id","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","GetUserBlockListRequest","UserBlock","after","borrow","borrow","borrow_mut","borrow_mut","broadcaster_id","broadcaster_id","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","display_name","eq","eq","equivalent","equivalent","first","fmt","fmt","from","from","into","into","serialize","serialize","set_pagination","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_login","vzip","vzip","GetUsersRequest","User","borrow","borrow","borrow_mut","borrow_mut","broadcaster_type","builder","clone","clone","clone_into","clone_into","created_at","description","deserialize","deserialize","display_name","email","eq","eq","equivalent","equivalent","fmt","fmt","from","from","id","id","ids","into","into","login","login","logins","new","offline_image_url","profile_image_url","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_","type_id","type_id","view_count","vzip","vzip","FollowRelationship","GetUsersFollowsRequest","UsersFollows","after","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","empty","eq","eq","eq","equivalent","equivalent","equivalent","first","fmt","fmt","fmt","follow_relationships","followed_at","followers","following","follows","from","from","from","from_id","from_id","from_login","from_name","into","into","into","parse_inner_response","serialize","serialize","serialize","set_pagination","to_id","to_id","to_login","to_name","to_owned","to_owned","to_owned","total","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Success","UnblockUser","UnblockUserRequest","borrow","borrow","borrow_mut","borrow_mut","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","into","into","parse_inner_response","serialize","serialize","target_user_id","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unblock_user","vzip","vzip","All","All","Archive","Day","GetVideosRequest","Highlight","Month","Sort","Time","Trending","Upload","Video","VideoPeriod","VideoTypeFilter","Views","Week","after","before","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","created_at","delete_videos","description","deserialize","deserialize","deserialize","duration","eq","eq","eq","equivalent","equivalent","equivalent","first","fmt","fmt","fmt","from","from","from","game_id","get_videos","id","id","into","into","into","language","language","muted_segments","period","published_at","serialize","serialize","serialize","sort","stream_id","thumbnail_url","title","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","url","user_id","user_id","user_login","user_name","view_count","viewable","vzip","vzip","vzip","DeleteVideo","DeleteVideosRequest","Success","borrow","borrow","borrow_mut","borrow_mut","builder","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","from","from","id","ids","into","into","parse_inner_response","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","GetVideosRequest","MutedSegment","Video","after","before","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone_into","clone_into","clone_into","created_at","default","description","deserialize","deserialize","deserialize","duration","duration","eq","eq","eq","equivalent","equivalent","equivalent","first","fmt","fmt","fmt","from","from","from","game_id","game_id","id","id","ids","into","into","into","language","language","muted_segments","offset","period","published_at","serialize","serialize","serialize","set_pagination","sort","stream_id","thumbnail_url","title","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","url","user_id","user_id","user_id","user_login","user_name","view_count","viewable","vzip","vzip","vzip","SendWhisperBody","SendWhisperRequest","SendWhisperResponse","Success","from_user_id","message","send_whisper","to_user_id","SendWhisperBody","SendWhisperRequest","SendWhisperResponse","Success","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from_user_id","into","into","into","message","new","new","parse_inner_response","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_user_id","try_from","try_from","try_from","try_into","try_into","try_into","try_to_body","type_id","type_id","type_id","vzip","vzip","vzip","AutoModQueue","AutoModQueue","ChannelBitsBadgeUnlocks","ChannelBitsBadgeUnlocks","ChannelBitsEventsV2","ChannelBitsEventsV2","ChannelCheerEventsPublicV1","ChannelCheerEventsPublicV1","ChannelPointsChannelV1","ChannelPointsChannelV1","ChannelSubGiftsV1","ChannelSubGiftsV1","ChannelSubscribeEventsV1","ChannelSubscribeEventsV1","ChatModeratorActions","ChatModeratorActions","CommunityPointsChannelV1","CommunityPointsChannelV1","Following","Following","HypeTrainEventsV1","HypeTrainEventsV1","HypeTrainEventsV1Rewards","HypeTrainEventsV1Rewards","Message","Pong","Raid","Raid","Reconnect","Response","Response","SCOPE","Topic","TopicData","Topics","TwitchResponse","UserModerationNotifications","UserModerationNotifications","VideoPlayback","VideoPlayback","VideoPlaybackById","VideoPlaybackById","automod_queue","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_bits","channel_bits_badge","channel_cheer","channel_points","channel_sub_gifts","channel_subscriptions","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","community_points","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","error","fmt","fmt","fmt","fmt","fmt","following","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hypetrain","into","into","into","into","into_topic","is_successful","listen_command","moderation","nonce","parse","raid","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unlisten_command","user_moderation_notifications","video_playback","vzip","vzip","vzip","vzip","data","reply","reply","reply","reply","reply","reply","reply","reply","reply","reply","reply","reply","reply","reply","reply","reply","topic","topic","topic","topic","topic","topic","topic","topic","topic","topic","topic","topic","topic","topic","topic","topic","AutoModCaughtMessage","AutoModCaughtMessage","AutoModQueue","AutoModQueueReply","Automod","AutomodFragment","Content","ContentClassification","Fragment","FragmentUserMention","Message","MessageUser","MessageUserBadges","TextFragment","UserMention","badges","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","category","channel_id","chat_color","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","content","content_classification","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","display_name","display_name","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fragments","from","from","from","from","from","from","from","from","from","from","from","hash","id","id","into","into","into","into","into","into","into","into","into","into","into","into_topic","level","login","login","message","moderator_id","non_broadcaster_language","reason_code","resolver_id","resolver_login","sender","sent_at","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","status","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","topics","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_id","user_id","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","automod","text","text","text","user_mention","BadgeEntitlement","BitsContext","BitsEvent","BitsEventData","ChannelBitsEventsV2","ChannelBitsEventsV2Reply","Cheer","badge_entitlement","bits_used","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_id","channel_id","channel_name","chat_message","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","context","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","hash","into","into","into","into","into","into_topic","is_anonymous","serialize","serialize","serialize","serialize","serialize","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","total_bits_used","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","user_id","user_name","vzip","vzip","vzip","vzip","vzip","data","message_id","version","ChannelBitsBadgeUnlocks","ChannelBitsBadgeUnlocksReply","badge_tier","borrow","borrow","borrow_mut","borrow_mut","channel_id","channel_id","channel_name","chat_message","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","hash","into","into","into_topic","serialize","serialize","time","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","user_id","user_name","vzip","vzip","ChannelCheerEventsPublicV1","ChannelCheerEventsPublicV1Reply","Cheer","CheerBomb","SubGift","Subscription","TriggerType","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","channel_id","clone","clone","clone","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","hash","into","into","into","into_topic","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","display_name","domain","selected_count","total_reward_count","trigger_amount","trigger_type","user_id","user_login","ActionTaken","ChannelPointsChannelV1","ChannelPointsChannelV1Reply","CustomRewardUpdated","Fulfilled","Progress","Redemption","RedemptionStatus","RedemptionStatusUpdate","Reward","RewardRedeemed","Unfulfilled","UpdateRedemptionStatusProgress","UpdateRedemptionStatusesFinished","background_color","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_id","channel_id","channel_id","channel_id","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cooldown_expires_at","cost","cursor","default_image","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","global_cooldown","hash","id","id","id","image","into","into","into","into","into","into","into_topic","is_enabled","is_in_stock","is_paused","is_sub_only","is_user_input_required","max_per_stream","max_per_user_per_stream","method","new_status","processed","prompt","redeemed_at","redemptions_redeemed_current_stream","reward","serialize","serialize","serialize","serialize","serialize","serialize","should_redemptions_skip_request_queue","status","template_id","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","total","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","updated_for_indicator_at","user","user_input","vzip","vzip","vzip","vzip","vzip","vzip","progress","progress","redemption","redemption","timestamp","timestamp","timestamp","timestamp","timestamp","updated_reward","ChannelSubGiftsV1","ChannelSubGiftsV1Reply","MysteryGiftPurchase","MysteryGiftPurchase","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","channel_id","channel_id","clone","clone","clone","clone_into","clone_into","clone_into","count","deserialize","deserialize","deserialize","display_name","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","hash","into","into","into","into_topic","serialize","serialize","serialize","tier","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_id","user_name","uuid","vzip","vzip","vzip","ChannelSubscribeEventsV1","ChannelSubscribeEventsV1Reply","Emote","ExtendSub","ExtendSub","ReSub","ReSub","ResubGift","ResubGift","Sub","Sub","SubGift","SubGift","SubMessage","benefit_end_month","benefit_end_month","benefit_end_month","benefit_end_month","benefit_end_month","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_id","channel_id","channel_id","channel_id","channel_id","channel_id","channel_name","channel_name","channel_name","channel_name","channel_name","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cumulative_months","cumulative_months","cumulative_months","cumulative_months","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","display_name","display_name","display_name","display_name","display_name","emotes","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","hash","hash","id","into","into","into","into","into","into","into","into","into","into_topic","is_gift","is_gift","message","months","months","months","multi_month_duration","multi_month_duration","multi_month_duration","multi_month_duration","multi_month_duration","partial_cmp","recipient_display_name","recipient_display_name","recipient_id","recipient_user_name","recipient_user_name","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","start","streak_months","streak_months","sub_message","sub_message","sub_message","sub_message","sub_plan","sub_plan","sub_plan","sub_plan","sub_plan","sub_plan_name","sub_plan_name","sub_plan_name","sub_plan_name","sub_plan_name","time","time","time","time","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_id","user_id","user_id","user_id","user_id","user_name","user_name","user_name","user_name","user_name","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CommunityPointsChannelV1","borrow","borrow_mut","channel_id","clone","clone_into","deserialize","eq","equivalent","fmt","fmt","from","hash","into","into_topic","serialize","to_owned","to_string","try_from","try_from","try_into","type_id","vzip","Following","FollowingReply","borrow","borrow","borrow_mut","borrow_mut","channel_id","clone","clone","clone_into","clone_into","deserialize","deserialize","display_name","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","hash","into","into","into_topic","serialize","serialize","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","user_id","username","vzip","vzip","ActionType","Badge","Bits","BitsRewards","Cheer","Completed","ConductorRewards","Conductors","Config","Easy","Emote","EndingReason","Expired","Hard","HypeTrainApproaching","HypeTrainApproaching","HypeTrainConductorUpdate","HypeTrainConductorUpdate","HypeTrainCooldownExpiration","HypeTrainCooldownExpiration","HypeTrainDifficulty","HypeTrainEnd","HypeTrainEnd","HypeTrainEventsV1","HypeTrainEventsV1Reply","HypeTrainEventsV1Rewards","HypeTrainLevelUp","HypeTrainLevelUp","HypeTrainProgress","HypeTrainProgression","HypeTrainProgression","HypeTrainRewards","HypeTrainRewards","HypeTrainStart","HypeTrainStart","Insane","Kickoff","Level","Medium","NotificationThresholds","ParticipationConversionRates","Participations","Reward","SourceType","Subs","SubsRewards","SuperHard","Tier1","Tier1GiftedSub","Tier2","Tier2GiftedSub","Tier3","Tier3GiftedSub","action","approaching_hype_train_id","bits","bits_cheer","bits_cheer","bits_cheer","bits_extension","bits_extension","bits_extension","bits_poll","bits_poll","bits_poll","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","callout_emote_id","callout_emote_token","channel_id","channel_id","channel_id","channel_id","channel_id","channel_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","completed_level","conductor_rewards","config","cooldown_duration","creator_color","current","current","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","difficulty","difficulty_settings","duration","ended_at","ending_reason","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","events_remaining_durations","expires_at","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","former","former","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","goal","goal","goal","hash","hash","hash","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_topic","into_topic","is_enabled","kickoff","level","level_duration","level_one_rewards","min_points","notification_thresholds","num_of_events","participants","participation_conversion_rates","participations","participations","primary_hex_color","progress","progress","progress","quantity","remaining_seconds","rewards","rewards","sequence_id","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","source","source","started_at","subs","subs_tier_1_gifted_sub","subs_tier_1_gifted_sub","subs_tier_1_gifted_sub","subs_tier_1_sub","subs_tier_1_sub","subs_tier_1_sub","subs_tier_2_gifted_sub","subs_tier_2_gifted_sub","subs_tier_2_gifted_sub","subs_tier_2_sub","subs_tier_2_sub","subs_tier_2_sub","subs_tier_3_gifted_sub","subs_tier_3_gifted_sub","subs_tier_3_gifted_sub","subs_tier_3_sub","subs_tier_3_sub","subs_tier_3_sub","theme_color","time_to_expire","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","total","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updated_at","use_creator_color","use_personalized_settings","use_theme_color","user","user_display_name","user_id","user_login","user_profile_image_url","value","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","badge_id","group_id","group_id","id","id","image_url","reward_level","reward_level","set_id","token","AddBlockedTerm","AddPermittedTerm","ApproveAutomodMessage","ApproveUnbanRequest","ApproveUnbanRequest","AutomodRejected","Ban","ChannelAction","ChannelTermsAction","ChannelTermsAction","ChatChannelModeration","ChatLoginModeration","ChatModeratorActions","ChatModeratorActionsReply","ChatTargetedLoginModeration","Clear","Delete","DeleteBlockedTerm","DeleteNotification","DeletePermittedTerm","DeniedAutomodMessage","DenyUnbanRequest","DenyUnbanRequest","EmoteOnly","EmoteOnlyOff","Followers","FollowersOff","Host","Mod","ModerationAction","ModerationAction","ModerationActionCommand","ModerationType","ModeratorAdded","ModeratorAdded","ModeratorRemoved","ModeratorRemoved","ModifiedAutomodProperties","R9KBeta","R9KBetaOff","Raid","Slow","SlowOff","Subscribers","SubscribersOff","Timeout","Unban","UnbanRequest","Unhost","Unmod","Unraid","Untimeout","Unvip","Vip","VipAdded","VipAdded","args","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_id","channel_id","channel_id","channel_id","channel_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","created_by","created_by","created_by","created_by","created_by_id","created_by_login","created_by_user_id","created_by_user_id","created_by_user_id","created_by_user_id","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expires_at","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_automod","from_automod","hash","id","into","into","into","into","into","into","into","into","into","into","into","into_topic","moderation_action","moderation_action","moderation_action","moderation_action","moderator_message","msg_id","requester_id","requester_login","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","target_user_id","target_user_id","target_user_id","target_user_id","target_user_id","target_user_login","target_user_login","target_user_login","target_user_login","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","updated_at","user_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Raid","RaidCancelV2","RaidCancelV2","RaidGoV2","RaidGoV2","RaidReply","RaidUpdateV2","RaidUpdateV2","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_id","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","creator_id","creator_id","creator_id","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","force_raid_now_seconds","force_raid_now_seconds","force_raid_now_seconds","from","from","from","from","from","hash","id","id","id","into","into","into","into","into","into_topic","serialize","serialize","serialize","serialize","serialize","source_id","source_id","source_id","target_display_name","target_display_name","target_display_name","target_id","target_id","target_id","target_login","target_login","target_login","target_profile_image","target_profile_image","target_profile_image","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","transition_jitter_seconds","transition_jitter_seconds","transition_jitter_seconds","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","viewer_count","viewer_count","viewer_count","vzip","vzip","vzip","vzip","vzip","AutoModCaught","UserModerationNotifications","UserModerationNotificationsReply","borrow","borrow","borrow_mut","borrow_mut","channel_id","clone","clone","clone_into","clone_into","current_user_id","deserialize","deserialize","eq","eq","equivalent","equivalent","fmt","fmt","fmt","from","from","hash","into","into","into_topic","serialize","serialize","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","message_id","status","Archive","BroadcastType","Commercial","Premiere","Rerun","StreamDown","StreamUp","TosStrike","VideoPlayback","VideoPlaybackById","VideoPlaybackReply","ViewCount","Vod","WatchPartyVod","WatchpartyType","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_type","channel_id","channel_login","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","increment_url","into","into","into","into","into","into","into_topic","into_topic","serialize","serialize","serialize","serialize","serialize","serialize","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","viewable","vod_id","vzip","vzip","vzip","vzip","vzip","vzip","wp_id","wp_type","length","play_delay","server_time","server_time","server_time","server_time","server_time","viewers","vod","Chatters","DeserializeError","GetChatters","HttpError","HyperError","RequestError","RequestError","TmiClient","UserId","Utf8Error","admins","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","broadcaster","chatter_count","chatters","clone_client","deserialize","deserialize","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_chatters","get_client","global_mods","into","into","into","moderators","new","provide","serialize","serialize","source","staff","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","viewers","vips","vzip","vzip","vzip","with_client"],"q":[[0,"twitch_api"],[127,"twitch_api::DeserError"],[129,"twitch_api::client"],[345,"twitch_api::eventsub"],[789,"twitch_api::eventsub::PayloadParseError"],[791,"twitch_api::eventsub::channel"],[2500,"twitch_api::eventsub::channel::ban"],[2518,"twitch_api::eventsub::channel::channel_points_custom_reward"],[2592,"twitch_api::eventsub::channel::channel_points_custom_reward::add"],[2617,"twitch_api::eventsub::channel::channel_points_custom_reward::remove"],[2644,"twitch_api::eventsub::channel::channel_points_custom_reward::update"],[2671,"twitch_api::eventsub::channel::channel_points_custom_reward_redemption"],[2745,"twitch_api::eventsub::channel::channel_points_custom_reward_redemption::add"],[2763,"twitch_api::eventsub::channel::channel_points_custom_reward_redemption::update"],[2781,"twitch_api::eventsub::channel::charity_campaign"],[2842,"twitch_api::eventsub::channel::charity_campaign::donate"],[2860,"twitch_api::eventsub::channel::charity_campaign::progress"],[2875,"twitch_api::eventsub::channel::charity_campaign::start"],[2891,"twitch_api::eventsub::channel::charity_campaign::stop"],[2907,"twitch_api::eventsub::channel::cheer"],[2921,"twitch_api::eventsub::channel::follow"],[2946,"twitch_api::eventsub::channel::goal"],[2987,"twitch_api::eventsub::channel::goal::begin"],[3001,"twitch_api::eventsub::channel::goal::end"],[3017,"twitch_api::eventsub::channel::goal::progress"],[3031,"twitch_api::eventsub::channel::hypetrain"],[3117,"twitch_api::eventsub::channel::hypetrain::begin"],[3133,"twitch_api::eventsub::channel::hypetrain::end"],[3148,"twitch_api::eventsub::channel::hypetrain::progress"],[3165,"twitch_api::eventsub::channel::poll"],[3248,"twitch_api::eventsub::channel::poll::begin"],[3263,"twitch_api::eventsub::channel::poll::end"],[3279,"twitch_api::eventsub::channel::poll::progress"],[3294,"twitch_api::eventsub::channel::prediction"],[3344,"twitch_api::eventsub::channel::prediction::begin"],[3357,"twitch_api::eventsub::channel::prediction::end"],[3372,"twitch_api::eventsub::channel::prediction::lock"],[3385,"twitch_api::eventsub::channel::prediction::progress"],[3398,"twitch_api::eventsub::channel::raid"],[3412,"twitch_api::eventsub::channel::shield_mode"],[3436,"twitch_api::eventsub::channel::shield_mode::begin"],[3449,"twitch_api::eventsub::channel::shield_mode::end"],[3462,"twitch_api::eventsub::channel::shoutout"],[3493,"twitch_api::eventsub::channel::shoutout::create"],[3512,"twitch_api::eventsub::channel::shoutout::receive"],[3526,"twitch_api::eventsub::channel::subscribe"],[3539,"twitch_api::eventsub::channel::subscription"],[3580,"twitch_api::eventsub::channel::subscription::end"],[3593,"twitch_api::eventsub::channel::subscription::gift"],[3608,"twitch_api::eventsub::channel::subscription::message"],[3643,"twitch_api::eventsub::channel::unban"],[3657,"twitch_api::eventsub::channel::update"],[3670,"twitch_api::eventsub::event"],[3782,"twitch_api::eventsub::event::websocket"],[3986,"twitch_api::eventsub::event::websocket::EventsubWebsocketData"],[3996,"twitch_api::eventsub::stream"],[4077,"twitch_api::eventsub::stream::offline"],[4085,"twitch_api::eventsub::stream::online"],[4096,"twitch_api::eventsub::user"],[4216,"twitch_api::eventsub::user::authorization"],[4232,"twitch_api::eventsub::user::authorization::grant"],[4241,"twitch_api::eventsub::user::authorization::revoke"],[4250,"twitch_api::eventsub::user::update"],[4260,"twitch_api::extra"],[4280,"twitch_api::helix"],[4629,"twitch_api::helix::HelixRequestDeleteError"],[4638,"twitch_api::helix::HelixRequestGetError"],[4646,"twitch_api::helix::HelixRequestPatchError"],[4655,"twitch_api::helix::HelixRequestPostError"],[4664,"twitch_api::helix::HelixRequestPutError"],[4673,"twitch_api::helix::SerializeError"],[4677,"twitch_api::helix::bits"],[4697,"twitch_api::helix::bits::get_bits_leaderboard"],[4787,"twitch_api::helix::bits::get_cheermotes"],[4954,"twitch_api::helix::channels"],[5039,"twitch_api::helix::channels::add_channel_vip"],[5079,"twitch_api::helix::channels::get_channel_editors"],[5119,"twitch_api::helix::channels::get_channel_followers"],[5166,"twitch_api::helix::channels::get_channel_information"],[5213,"twitch_api::helix::channels::get_followed_channels"],[5260,"twitch_api::helix::channels::get_vips"],[5306,"twitch_api::helix::channels::modify_channel_information"],[5376,"twitch_api::helix::channels::remove_channel_vip"],[5416,"twitch_api::helix::channels::start_commercial"],[5477,"twitch_api::helix::charity"],[5503,"twitch_api::helix::charity::get_charity_campaign"],[5551,"twitch_api::helix::charity::get_charity_campaign_donations"],[5598,"twitch_api::helix::chat"],[5827,"twitch_api::helix::chat::get_channel_chat_badges"],[5848,"twitch_api::helix::chat::get_channel_emotes"],[5869,"twitch_api::helix::chat::get_chat_settings"],[5892,"twitch_api::helix::chat::get_chatters"],[5937,"twitch_api::helix::chat::get_emote_sets"],[5984,"twitch_api::helix::chat::get_global_chat_badges"],[6005,"twitch_api::helix::chat::get_global_emotes"],[6026,"twitch_api::helix::chat::get_user_chat_color"],[6067,"twitch_api::helix::chat::send_a_shoutout"],[6107,"twitch_api::helix::chat::send_chat_announcement"],[6169,"twitch_api::helix::chat::update_chat_settings"],[6220,"twitch_api::helix::chat::update_user_chat_color"],[6260,"twitch_api::helix::client"],[6270,"twitch_api::helix::clips"],[6304,"twitch_api::helix::clips::create_clip"],[6344,"twitch_api::helix::clips::get_clips"],[6410,"twitch_api::helix::eventsub"],[6444,"twitch_api::helix::eventsub::create_eventsub_subscription"],[6513,"twitch_api::helix::eventsub::delete_eventsub_subscription"],[6551,"twitch_api::helix::eventsub::get_eventsub_subscriptions"],[6599,"twitch_api::helix::games"],[6613,"twitch_api::helix::games::get_games"],[6636,"twitch_api::helix::games::get_top_games"],[6661,"twitch_api::helix::goals"],[6677,"twitch_api::helix::goals::get_creator_goals"],[6727,"twitch_api::helix::hypetrain"],[6773,"twitch_api::helix::hypetrain::get_hypetrain_events"],[6864,"twitch_api::helix::moderation"],[7002,"twitch_api::helix::moderation::add_blocked_term"],[7045,"twitch_api::helix::moderation::add_channel_moderator"],[7085,"twitch_api::helix::moderation::ban_user"],[7152,"twitch_api::helix::moderation::check_automod_status"],[7213,"twitch_api::helix::moderation::delete_chat_messages"],[7255,"twitch_api::helix::moderation::get_banned_users"],[7307,"twitch_api::helix::moderation::get_blocked_terms"],[7333,"twitch_api::helix::moderation::get_moderators"],[7379,"twitch_api::helix::moderation::get_shield_mode_status"],[7441,"twitch_api::helix::moderation::manage_held_automod_messages"],[7523,"twitch_api::helix::moderation::remove_blocked_term"],[7564,"twitch_api::helix::moderation::remove_channel_moderator"],[7604,"twitch_api::helix::moderation::unban_user"],[7645,"twitch_api::helix::moderation::update_shield_mode_status"],[7691,"twitch_api::helix::points"],[7810,"twitch_api::helix::points::create_custom_rewards"],[7865,"twitch_api::helix::points::delete_custom_reward"],[7905,"twitch_api::helix::points::get_custom_reward"],[7966,"twitch_api::helix::points::get_custom_reward_redemption"],[8065,"twitch_api::helix::points::update_custom_reward"],[8139,"twitch_api::helix::points::update_redemption_status"],[8213,"twitch_api::helix::polls"],[8253,"twitch_api::helix::polls::create_poll"],[8325,"twitch_api::helix::polls::end_poll"],[8395,"twitch_api::helix::polls::get_polls"],[8495,"twitch_api::helix::predictions"],[8516,"twitch_api::helix::predictions::create_prediction"],[8582,"twitch_api::helix::predictions::end_prediction"],[8647,"twitch_api::helix::predictions::get_predictions"],[8786,"twitch_api::helix::raids"],[8794,"twitch_api::helix::raids::cancel_a_raid"],[8833,"twitch_api::helix::raids::start_a_raid"],[8869,"twitch_api::helix::request"],[8901,"twitch_api::helix::request::errors"],[8964,"twitch_api::helix::request::errors::HelixRequestDeleteError"],[8973,"twitch_api::helix::request::errors::HelixRequestGetError"],[8981,"twitch_api::helix::request::errors::HelixRequestPatchError"],[8990,"twitch_api::helix::request::errors::HelixRequestPostError"],[8999,"twitch_api::helix::request::errors::HelixRequestPutError"],[9008,"twitch_api::helix::request::errors::SerializeError"],[9012,"twitch_api::helix::response"],[9021,"twitch_api::helix::schedule"],[9135,"twitch_api::helix::schedule::create_channel_stream_schedule_segment"],[9182,"twitch_api::helix::schedule::delete_channel_stream_schedule_segment"],[9220,"twitch_api::helix::schedule::get_channel_stream_schedule"],[9251,"twitch_api::helix::schedule::update_channel_stream_schedule"],[9294,"twitch_api::helix::schedule::update_channel_stream_schedule_segment"],[9343,"twitch_api::helix::search"],[9389,"twitch_api::helix::search::search_categories"],[9416,"twitch_api::helix::search::search_channels"],[9471,"twitch_api::helix::streams"],[9533,"twitch_api::helix::streams::get_followed_streams"],[9559,"twitch_api::helix::streams::get_stream_tags"],[9580,"twitch_api::helix::streams::get_streams"],[9641,"twitch_api::helix::streams::replace_stream_tags"],[9702,"twitch_api::helix::subscriptions"],[9746,"twitch_api::helix::subscriptions::check_user_subscription"],[9793,"twitch_api::helix::subscriptions::get_broadcaster_subscriptions"],[9865,"twitch_api::helix::subscriptions::get_broadcaster_subscriptions_events"],[9959,"twitch_api::helix::tags"],[10071,"twitch_api::helix::tags::get_all_stream_tags"],[10096,"twitch_api::helix::teams"],[10124,"twitch_api::helix::teams::get_channel_teams"],[10166,"twitch_api::helix::teams::get_teams"],[10207,"twitch_api::helix::users"],[10261,"twitch_api::helix::users::block_user"],[10343,"twitch_api::helix::users::get_user_block_list"],[10386,"twitch_api::helix::users::get_users"],[10437,"twitch_api::helix::users::get_users_follows"],[10508,"twitch_api::helix::users::unblock_user"],[10547,"twitch_api::helix::videos"],[10640,"twitch_api::helix::videos::delete_videos"],[10679,"twitch_api::helix::videos::get_videos"],[10765,"twitch_api::helix::whispers"],[10773,"twitch_api::helix::whispers::send_whisper"],[10834,"twitch_api::pubsub"],[10976,"twitch_api::pubsub::Response"],[10977,"twitch_api::pubsub::TopicData"],[11009,"twitch_api::pubsub::automod_queue"],[11233,"twitch_api::pubsub::automod_queue::Fragment"],[11238,"twitch_api::pubsub::channel_bits"],[11342,"twitch_api::pubsub::channel_bits::ChannelBitsEventsV2Reply"],[11345,"twitch_api::pubsub::channel_bits_badge"],[11392,"twitch_api::pubsub::channel_cheer"],[11453,"twitch_api::pubsub::channel_cheer::ChannelCheerEventsPublicV1Reply"],[11461,"twitch_api::pubsub::channel_points"],[11612,"twitch_api::pubsub::channel_points::ChannelPointsChannelV1Reply"],[11622,"twitch_api::pubsub::channel_sub_gifts"],[11687,"twitch_api::pubsub::channel_subscriptions"],[11929,"twitch_api::pubsub::community_points"],[11952,"twitch_api::pubsub::following"],[11995,"twitch_api::pubsub::hypetrain"],[12588,"twitch_api::pubsub::hypetrain::Reward"],[12598,"twitch_api::pubsub::moderation"],[12879,"twitch_api::pubsub::raid"],[13003,"twitch_api::pubsub::user_moderation_notifications"],[13045,"twitch_api::pubsub::user_moderation_notifications::UserModerationNotificationsReply"],[13047,"twitch_api::pubsub::video_playback"],[13176,"twitch_api::pubsub::video_playback::VideoPlaybackReply"],[13185,"twitch_api::tmi"]],"d":["A deserialization error","Client for Helix or the New Twitch API","","could not deserialize, error on [{path}]. {error}","Location to twitch Eventsub WebSocket","Location of Twitch Helix","Location to twitch PubSub","Location of Twitch TMI","Client for the twitch TMI endpoint, almost entirely …","Client for Twitch APIs.","Add a channel moderator","Add a channel vip","Ban a user","Block a user","","","","","","","","","Cancel a raid","Different clients you can use with this crate to call …","","","","","","","Create an EventSub subscription","","","","Delete all chat messages in a broadcasters chat room","Delete a specific chat message","Delete an EventSub subscription","Holds serializable EventSub stuff","Extra types not defined in <code>twitch_types</code>","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get all custom rewards","Get all banned users in a channel Get Banned Users","Get authenticated broadcasters’ subscribers","Get channel emotes in channel with user id","Get channel emotes in channel with user login","Get ChannelInformation from a broadcasters id","Get ChannelInformation from a broadcasters login","Get all scheduled streams in a channel.","Get multiple ChannelInformation from broadcasters ids","Get a broadcaster’s chat settings","Get chatters in a stream Chatter","Retrieve a reference of the <code>HttpClient</code> inside this …","Get specific custom rewards, see <code>get_all_custom_rewards</code> to …","Get emotes in emote set","Get all EventSub subscriptions for this Client","Get users followed channels","Get authenticated users’ followed streams","Get games by ID. Can only be at max 100 ids.","Get all global emotes","Get all moderators in a channel Get Moderators","Get a broadcasters follow count","Get a users chat color","Get User from user id","Get User from user login","Get multiple users chat colors","Get multiple Users from user ids.","Get channel VIPs","Helix endpoints or the New Twitch API","Helix endpoint. See <code>helix</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>TwitchClient</code>","Parse a string as <code>T</code>, logging ignored fields and giving a …","Parse a json Value as <code>T</code>, logging ignored fields and giving …","","Holds serializable pubsub stuff","Remove a channel moderator","Remove a channel vip","","","","Request on a valid <code>RequestDelete</code> endpoint, with the …","Request on a valid <code>RequestGet</code> endpoint, with the ability …","Request on a valid <code>RequestPatch</code> endpoint, with the ability …","Request on a valid <code>RequestPost</code> endpoint, with the ability …","Request on a valid <code>RequestPut</code> endpoint, with the ability …","Search Categories","Search Channels via channel name or description","Send a chat announcement","Send a whisper","","Start a raid","TMI Endpoint, twitch’s unsupported api for better …","TMI endpoint. See <code>tmi</code>","","","","","","","","","","","","","","","","","","","Unban a user","Unblock a user","Get a users chat color","","","","","Create a new <code>TwitchClient</code> with an existing <code>HttpClient</code>","Error for the key/value","Path to where the erroring key/value is","A stream of <code>Bytes</code>, used when receiving bodies.","An error occurrec when assembling the body","A boxed future, mimics <code>futures::future::BoxFuture</code>","A cheaply cloneable and sliceable chunk of contiguous …","A client that can do requests","A specific client default for setting some sane defaults …","A compability shim for ensuring an error can represent …","A client that will never work, used to trick documentation …","Error returned","Error returned","Error returned by the client","Errors that can happen when assembling the client","Http failed","could not construct header name","could not construct header name","could not construct header value","could not construct header value","could not construct header value for User-Agent","The response could not be collected","An error occurred","The request type we’re expecting with body.","Extension trait for <code>Request</code>","Possible errors from …","reqwest returned an error","The response type we’re expecting with body","Extension trait for <code>Response</code>","surf failed to do the request: {0}","Possible errors from <code>Client::req()</code> when using the surf …","The User-Agent <code>product</code> of this crate.","Ureq failed to do the request","Possible errors from <code>Client::req()</code> when using the ureq …","uri could not be translated into an url.","uri could not be translated into an url.","","","","","","","","","","","","","","","","","","Create a <code>Body</code> stream with an associated sender half.","","Clears the buffer, removing all data.","","","","","","Creates <code>Bytes</code> instance from slice, by copying it.","","Returns <code>Body::empty()</code>.","","","Construct <code>Self</code> with sane defaults for API calls and oauth2.","Constructs <code>Self</code> with sane defaults for API calls and …","","","","Create an empty <code>Body</code> stream.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Creates a new <code>Bytes</code> from a static slice.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Return the body as a vector of bytes","Return the body as a <code>Bytes</code>","Return the body as a vector of bytes","Returns true if the <code>Bytes</code> has a length of 0.","","Returns the number of bytes contained in this <code>Bytes</code>.","Creates a new empty <code>Bytes</code>.","","","","","","","","","","","","","","","","Send a request","","","Returns a slice of self for the provided range.","Returns a slice of self that is equivalent to the given …","","","","","Splits the bytes into two at the given index.","Splits the bytes into two at the given index.","","","","","","","","Shortens the buffer, keeping the first <code>len</code> bytes and …","","","","","","","","","","","","","","","","","","","","","","","Gives the User-Agent header value for a client annotated …","","","","","","","","Wrap a futures <code>Stream</code> in a box inside <code>Body</code>.","Twitch revoked your subscription because the users in the …","<code>channel.ban</code>: a viewer is banned from the specified channel.","Channel Ban V1 Event","<code>channel.charity_campaign.donate</code>: a user donates to the …","Channel Charity Campaign Donate V1 Event","<code>channel.charity_campaign.progress</code>: progress is made …","Channel Charity Campaign Progress V1 Event","<code>channel.charity_campaign.start</code>: a broadcaster starts a …","Channel Charity Campaign Start V1 Event","<code>channel.charity_campaign.stop</code>: a broadcaster stops a …","Channel Charity Campaign Stop V1 Event","<code>channel.cheer</code>: a user cheers on the specified channel.","Channel Cheer V1 Event","<code>channel.follow</code>: a specified channel receives a follow.","Channel Follow V1 Event","Channel Follow V2 Event","<code>channel.goal.begin</code>: a goal begins on the specified channel.","Channel Goal Begin V1 Event","<code>channel.goal.end</code>: a goal ends on the specified channel.","Channel Goal End V1 Event","<code>channel.goal.progress</code>: a goal makes progress on the …","Channel Goal Progress V1 Event","<code>channel.hype_train.begin</code>: a hype train begins on the …","Channel Hype Train Begin V1 Event","<code>channel.hype_train.end</code>: a hype train ends on the specified …","Channel Hype Train End V1 Event","<code>channel.hype_train.progress</code>: a hype train makes progress …","Channel Hype Train Progress V1 Event","<code>channel.channel_points_custom_reward.add</code>: a custom channel …","Channel Points Custom Reward Add V1 Event","<code>channel.channel_points_custom_reward_redemption.add</code>: a …","Channel Points Custom Reward Redemption Add V1 Event","<code>channel.channel_points_custom_reward_redemption.update</code>: a …","Channel Points Custom Reward Redemption Update V1 Event","<code>channel.channel_points_custom_reward.remove</code>: a custom …","Channel Points Custom Reward Remove V1 Event","<code>channel.channel_points_custom_reward.update</code>: a custom …","Channel Points Custom Reward Update V1 Event","<code>channel.poll.begin</code>: a poll begins on the specified channel.","Channel Poll Begin V1 Event","<code>channel.poll.end</code>: a poll ends on the specified channel.","Channel Poll End V1 Event","<code>channel.poll.progress</code>: a user responds to a poll on the …","Channel Poll Progress V1 Event","<code>channel.prediction.begin</code>: a Prediction begins on the …","Channel Prediction Begin V1 Event","<code>channel.prediction.end</code>: a Prediction ends on the specified …","Channel Prediction End V1 Event","<code>channel.prediction.lock</code>: a Prediction is locked on the …","Channel Prediction Lock V1 Event","<code>channel.prediction.progress</code>: a user participates in a …","Channel Prediction Progress V1 Event","<code>channel.raid</code>: a broadcaster raids another broadcaster’s …","Channel Raid V1 Event","<code>channel.shield_mode.begin</code>: a channel activates shield mode","Channel ShieldMode Begin V1 Event","<code>channel.shield_mode.end</code>: a channel deactivates shield mode","Channel ShieldMode End V1 Event","<code>channel.shoutout.create</code>: a specified broadcaster sends a …","Channel Shoutout Create V1 Event","<code>channel.shoutout.receive</code>: a specified broadcaster receives …","Channel Shoutout Receive V1 Event","<code>channel.subscribe</code>: a specified channel receives a …","Channel Subscribe V1 Event","<code>channel.subscription.end</code>: a subscription to the specified …","Channel Subscription End V1 Event","<code>channel.subscription.gift</code>: a user gives one or more gifted …","Channel Subscription Gift V1 Event","<code>channel.subscription.message</code>: a user sends a …","Channel Subscription Message V1 Event","<code>channel.unban</code>: a viewer is unbanned from the specified …","Channel Unban V1 Event","<code>channel.update</code>: subscription type sends notifications when …","Channel Update V1 Event","could not parse <code>http::Request::body()</code> as a <code>Payload</code>","Subscription type name.","Twitch has verified your callback and is able to send you …","A notification with an event payload. Enumerates all …","General information about an EventSub subscription.","An EventSub subscription.","Metadata about the subscription.","Event Types","event could not be parsed, some context missing","Subscription message/payload. Received on events and other …","The moderator that authorized the subscription is no …","A notification holding some event data.","Twitch revoked your subscription because the notification …","Optional scopes needed by this subscription","Notification received","Payload for given subscription","Errors that can happen when parsing payload","A subscription revocation","Scopes needed by this subscription","Subscription request status","<code>stream.offline</code>: the specified broadcaster stops a stream.","StreamOffline V1 Event","<code>stream.online</code>: the specified broadcaster starts a stream.","StreamOnline V1 Event","Transport setting for event notification","Transport method","Transport response on event notification","could not find an implementation for version <code>{version}</code> on …","unknown event type encountered: {0}","unknown message type encountered: {0}","<code>user.authorization.grant</code>: a user’s authorization has …","User Authorization Grant V1 Event","<code>user.authorization.revoke</code>: a user has revoked …","User Authorization Revoke V1 Event","Twitch revoked your subscription because the users in the …","<code>user.update</code>: user updates their account.","User Update V1 Event","could not parse <code>http::Request::body()</code> as UTF8","Subscription type version","Verification Request","Webhook Callback Verification","Twitch revoked your subscription because the subscribed to …","Webhook transport","Webhook transport response","Webhook","Twitch failed to verify that you own the callback …","Twitch is verifying that you own the callback specified in …","Webhook transport","Webhook transport","Websocket transport","Websocket transport response","Eventsub","The client failed to subscribe to events within the …","The client closed the connection.","The client failed to respond to a ping message.","The Twitch WebSocket server experienced an unexpected …","The Twitch WebSocket server experienced a network error …","The Twitch WebSocket server timed out writing the message …","The client sent a non-pong message. Clients may only send …","Websocket transport","Websocket transport","Returns <code>Some(&amp;WebhookTransport)</code> if this transport is a …","Returns <code>Some(&amp;WebhookTransport)</code> if this transport response …","Returns <code>Some(&amp;WebsocketTransport)</code> if this transport is a …","Returns <code>Some(&amp;WebsocketTransport)</code> if this transport …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Callback","Callback","Challenge string.","Subscription types regarding channels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates the <code>condition</code> for this EventSub subscription","Subscription-specific parameters.","JSON object specifying custom parameters for the …","The UTC date and time that the WebSocket connection was …","How much the subscription counts against your limit.","How much the subscription counts against your limit.","The time the notification was created.","RFC3339 timestamp indicating when the subscription was …","","","","","","","","","","","","","","","","The UTC date and time that the WebSocket connection was …","","","","","","","","","","","","","","","","","","","","","","","","","","","","EventSub events and their types","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convenience method for getting the event type from the …","Convenience method for getting the event version from the …","ID of the subscription.","ID of the subscription.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the message is <code>Notification</code>.","Returns <code>true</code> if the message is <code>Revocation</code>.","Returns <code>true</code> if the message is <code>VerificationRequest</code>.","Returns <code>true</code> if the transport is <code>Webhook</code>.","Returns <code>true</code> if the transport response is <code>Webhook</code>.","Returns <code>true</code> if the transport is <code>Websocket</code>.","Returns <code>true</code> if the transport response is <code>Websocket</code>.","Event information.","Parse http post request as a Payload with a specific event.","Parse string slice as a <code>Payload</code>, this will assume your …","Parse string slice as a <code>Payload</code> with a message of …","Parse string slice as a <code>Payload</code> with a message of …","","Secret attached to the subscription.","","","","","","","","","","","","","","","","An ID that identifies the WebSocket to send notifications …","An ID that identifies the WebSocket that notifications are …","","Status of EventSub subscription","Status of the subscription.","Subscription types regarding streams","Subscription information.","","","","","","","","","","","","","","","","","","Transport method","Notification delivery specific information. Includes the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>Some(WebhookTransport)</code> if this transport is a …","Returns <code>Some(WebhookTransport)</code> if this transport response …","Returns <code>Some(WebsocketTransport)</code> if this transport is a …","Returns <code>Some(WebsocketTransport)</code> if this transport …","Event type. Consider using <code>E::EVENT_TYPE</code> instead.","The category of the subscription.","","","","","","","","","","","","","","","","","Subscription types regarding users","Event version. Consider using <code>E::VERSION</code> instead.","The version of the subscription.","","","","","","","","","","","","","","","","","Convenience method for making a webhook transport","Convenience method for making a websocket transport","Event type","Version","<code>channel.ban</code>: a viewer is banned from the specified channel.","<code>channel.ban</code> response payload.","<code>channel.charity_campaign.donate</code>: a user donates to the …","<code>channel.charity_campaign.donate</code> response payload.","<code>channel.charity_campaign.progress</code>: progress is made …","<code>channel.charity_campaign.progress</code> response payload.","<code>channel.charity_campaign.start</code>: a broadcaster starts a …","<code>channel.charity_campaign.start</code> response payload.","<code>channel.charity_campaign.stop</code>: a broadcaster stops a …","<code>channel.charity_campaign.stop</code> response payload.","<code>channel.cheer</code>: a user cheers on the specified channel.","<code>channel.cheer</code> response payload.","<code>channel.follow</code> v1: a specified channel receives a follow.","<code>channel.follow</code> response payload.","<code>channel.follow</code> v2: a specified channel receives a follow.","<code>channel.follow</code> response payload.","<code>channel.goal.begin</code>: a specified broadcaster begins a goal.","<code>channel.goal.begin</code> response payload.","<code>channel.goal.end</code>: a specified broadcaster ends a goal.","<code>channel.goal.end</code> response payload.","<code>channel.goal.progress</code>: progress is made towards the …","<code>channel.goal.progress</code> response payload.","<code>channel.hype_train.begin</code>: a hype train begins on the …","<code>channel.hype_train.begin</code> response payload.","<code>channel.hype_train.end</code>: a hype train ends on the specified …","<code>channel.hype_train.end</code> response payload.","<code>channel.hype_train.progress</code>: a hype train makes progress …","<code>channel.hype_train.progress</code> response payload.","<code>channel.channel_points_custom_reward.add</code>: a custom channel …","<code>channel.channel_points_custom_reward.add</code> response payload.","<code>channel.channel_points_custom_reward_redemption.add</code>: a …","<code>channel.channel_points_custom_reward_redemption.add</code> …","<code>channel.channel_points_custom_reward_redemption.update</code>: a …","<code>channel.channel_points_custom_reward_redemption.update</code> …","<code>channel.channel_points_custom_reward.remove</code>: a custom …","<code>channel.channel_points_custom_reward.remove</code> response …","<code>channel.channel_points_custom_reward.update</code>: a custom …","<code>channel.channel_points_custom_reward.update</code> response …","<code>channel.poll.begin</code>: a poll begins on the specified channel.","<code>channel.poll.begin</code> response payload.","<code>channel.poll.end</code>: a poll ends on the specified channel.","<code>channel.poll.end</code> response payload.","<code>channel.poll.progress</code>: an user responds to a poll on the …","<code>channel.poll.progress</code> response payload.","<code>channel.prediction.begin</code>: a Prediction begins on the …","<code>channel.prediction.begin</code> response payload.","<code>channel.prediction.end</code>: a Prediction ends on the specified …","<code>channel.prediction.end</code> response payload.","<code>channel.prediction.lock</code>: an user responds to a prediction …","<code>channel.prediction.lock</code> response payload.","<code>channel.prediction.progress</code>: an user responds to a …","<code>channel.prediction.progress</code> response payload.","<code>channel.raid</code>: a a broadcaster raids another …","<code>channel.raid</code> response payload.","<code>channel.shield_mode.begin</code>: an user responds to a …","<code>channel.shield_mode.begin</code> response payload.","<code>channel.shield_mode.end</code>: an user responds to a prediction …","<code>channel.shield_mode.end</code> response payload.","<code>channel.shoutout.create</code>: a Prediction begins on the …","<code>channel.shoutout.create</code> response payload.","<code>channel.shoutout.receive</code>: a Prediction begins on the …","<code>channel.shoutout.receive</code> response payload.","<code>channel.subscribe</code>: a specified channel receives a …","<code>channel.subscribe</code> response payload.","<code>channel.subscription.end</code>: a subscription to the specified …","<code>channel.subscription.end</code> response payload.","<code>channel.subscription.gift</code>: a subscription to the specified …","<code>channel.subscription.gift</code> response payload.","<code>channel.subscription.message</code>: a subscription to the …","<code>channel.subscription.message</code> response payload.","<code>channel.unban</code>: a viewer is unbanned from the specified …","<code>channel.unban</code> response payload.","<code>channel.update</code> subscription type sends notifications when …","<code>channel.update</code> response payload.","An object that contains the amount of money that the user …","Custom background color for the reward. Format: Hex with # …","Custom background color for the reward. Format: Hex with # …","Custom background color for the reward. Format: Hex with # …","A viewer is banned from the specified channel.","The UTC date and time (in RFC3339 format) of when the user …","The number of bits cheered.","The Bits voting settings for the poll.","The Bits voting settings for the poll.","The Bits voting settings for the poll.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","An ID that identifies the broadcaster that’s running the …","An ID that identifies the broadcaster that’s running the …","An ID that identifies the broadcaster that’s running the …","An ID that identifies the broadcaster that ran the …","An ID that identifies the charity campaign.","An ID that identifies the charity campaign.","The broadcaster’s login name.","The broadcaster’s login name.","An ID that identifies the broadcaster that’s running the …","An ID that identifies the broadcaster that’s running the …","The broadcaster’s display name.","The broadcaster’s display name.","The broadcaster user ID for the channel you want to get …","The requested broadcaster ID.","The broadcaster user ID for the channel you want to …","The requested broadcaster ID.","The broadcaster user ID for the channel you want to …","The requested broadcaster ID.","The broadcaster user ID for the channel you want to …","The requested broadcaster ID.","The broadcaster user ID for the channel you want to …","The requested broadcaster ID.","The broadcaster user ID for the channel you want to …","The requested broadcaster ID.","The ID of the broadcaster that you want to receive …","The ID of the broadcaster that you want to receive …","The ID of the broadcaster that you want to receive …","The ID of the broadcaster that you want to receive …","The broadcaster user ID for the channel you want to get …","The requested broadcaster ID.","The broadcaster user ID for the channel you want to get …","The requested broadcaster ID.","The broadcaster user ID for the channel you want to get …","The requested broadcaster ID.","The ID of the broadcaster to get notified about.","An ID that uniquely identifies the broadcaster.","The ID of the broadcaster to get notified about.","An ID that uniquely identifies the broadcaster.","The ID of the broadcaster to get notified about.","An ID that uniquely identifies the broadcaster.","The broadcaster user ID for the channel you want hype …","The requested broadcaster ID.","The broadcaster user ID for the channel you want hype …","The requested broadcaster ID.","The broadcaster user ID for the channel you want hype …","The requested broadcaster ID.","The broadcaster user ID of the channel for which “poll …","The requested broadcaster ID.","The broadcaster user ID of the channel for which “poll …","The requested broadcaster ID.","The broadcaster user ID of the channel for which “poll …","The requested broadcaster ID.","The broadcaster user ID of the channel for which …","The requested broadcaster ID.","The broadcaster user ID of the channel for which …","The requested broadcaster ID.","The broadcaster user ID of the channel for which …","The requested broadcaster ID.","The broadcaster user ID of the channel for which …","The requested broadcaster ID.","The ID of the broadcaster that you want to receive …","An ID that identifies the broadcaster whose Shield Mode …","The ID of the broadcaster that you want to receive …","An ID that identifies the broadcaster whose Shield Mode …","The ID of the broadcaster that you want to receive …","An ID that identifies the broadcaster that sent the …","The ID of the broadcaster that you want to receive …","An ID that identifies the broadcaster that received the …","The broadcaster user ID for the channel you want to get …","The requested broadcaster ID.","The broadcaster user ID for the channel you want to get …","The broadcaster user ID.","The broadcaster user ID for the channel you want to get …","The broadcaster user ID.","The broadcaster user ID for the channel you want to get …","The broadcaster user ID.","The broadcaster user ID for the channel you want to get …","The requested broadcaster ID.","The broadcaster user ID for the channel you want to get …","The broadcaster’s user ID.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The broadcaster’s user handle.","The broadcaster’s user handle.","The broadcaster’s user handle.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The broadcaster’s login name.","The broadcaster’s login name.","The broadcaster’s login name.","The broadcaster’s login name.","The requested broadcaster login.","The broadcaster login.","The broadcaster login.","The broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","The broadcaster’s display name.","The broadcaster’s display name.","The broadcaster’s display name.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","The broadcaster’s display name.","The broadcaster’s display name.","The broadcaster’s display name.","The broadcaster’s display name.","The requested broadcaster display name.","The broadcaster display name.","The broadcaster display name.","The broadcaster display name.","The requested broadcaster display name.","The broadcaster’s user display name.","An ID that identifies the charity campaign.","The channel’s category ID.","The category name.","Custom channel points rewards on specific channel has been …","A viewer has redeemed a custom channel points reward or a …","The Channel Points voting settings for the poll.","The Channel Points voting settings for the poll.","The Channel Points voting settings for the poll.","Poll on a specific channel has been begun, ended or …","A description of the charity.","A description of the charity.","A description of the charity.","A description of the charity.","A URL to an image of the charity’s logo. The image’s …","A URL to an image of the charity’s logo. The image’s …","A URL to an image of the charity’s logo. The image’s …","A URL to an image of the charity’s logo. The image’s …","The charity’s name.","The charity’s name.","The charity’s name.","The charity’s name.","A URL to the charity’s website.","A URL to the charity’s website.","A URL to the charity’s website.","A URL to the charity’s website.","A user cheers on the specified channel.","An array of choices for the poll.","An array of choices for the poll. Includes vote counts.","An array of choices for the poll. Includes vote counts.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The timestamp at which the hype train cooldown ends so …","The UTC timestamp (in RFC3339 format) of when the …","Timestamp of the cooldown expiration. null if the reward …","Timestamp of the cooldown expiration. null if the reward …","Timestamp of the cooldown expiration. null if the reward …","The reward cost.","The reward cost.","The reward cost.","The total number of months the user has been subscribed to …","The number of subscriptions gifted by this user in the …","An object that contains the current amount of donations …","An object that contains the current amount of donations …","An object that contains the current amount of donations …","The current value.","The current value.","The current value.","","Set of default images of 1x, 2x and 4x sizes for the …","Set of default images of 1x, 2x and 4x sizes for the …","Set of default images of 1x, 2x and 4x sizes for the …","A description of the goal, if specified. The description …","A description of the goal, if specified. The description …","A description of the goal, if specified. The description …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The month duration of the subscription.","The UTC timestamp in RFC 3339 format, which indicates when …","The timestamp at which the hype train ended.","The time the poll ended.","The time the Channel Points Prediction ended.","The UTC timestamp (in RFC3339 format) of when the …","Will be null if permanent ban. If it is a timeout, this …","The time the poll will end.","The time the poll will end.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The time at which the hype train expires. The expiration …","The time at which the hype train expires. The expiration …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A specified channel receives a follow.","RFC3339 timestamp of when the follow occurred.","RFC3339 timestamp of when the follow occurred.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The broadcaster user ID that created the channel raid you …","The broadcaster ID that created the raid.","An ID that identifies the broadcaster that sent the …","The broadcaster login that created the raid.","The broadcaster’s login name.","The broadcaster display name that created the raid.","The broadcaster’s display name.","Whether a cooldown is enabled and what the cooldown is in …","Whether a cooldown is enabled and what the cooldown is in …","Whether a cooldown is enabled and what the cooldown is in …","A broadcaster has started, progressed or ended a goal.","The number of points required to reach the next level.","The number of points required to reach the next level.","A hype train has started, progressed or ended.","The reward identifier.","The reward identifier.","The reward identifier.","The redemption identifier.","The redemption identifier.","An ID that identifies the donation. The ID is unique …","An ID that identifies the charity campaign.","An ID that identifies the charity campaign.","An ID that identifies the charity campaign.","An ID that uniquely identifies this goal.","An ID that uniquely identifies this goal.","An ID that uniquely identifies this goal.","The Hype Train ID.","The Hype Train ID.","The Hype Train ID.","ID of the poll.","ID of the poll.","ID of the poll.","Channel Points Prediction ID.","Channel Points Prediction ID.","Channel Points Prediction ID.","Channel Points Prediction ID.","Set of custom images of 1x, 2x and 4x sizes for the …","Set of custom images of 1x, 2x and 4x sizes for the …","Set of custom images of 1x, 2x and 4x sizes for the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicates whether the broadcaster achieved their goal.","Whether the user cheered anonymously or not.","Whether the subscription gift was anonymous.","Is the reward currently enabled. If false, the reward …","Is the reward currently enabled. If false, the reward …","Is the reward currently enabled. If false, the reward …","Whether the subscription is a gift.","Whether the subscription was a gift.","Is the reward currently in stock. If false, viewers …","Is the reward currently in stock. If false, viewers …","Is the reward currently in stock. If false, viewers …","A boolean identifying whether the channel is flagged as …","Is the reward currently paused. If true, viewers can’t …","Is the reward currently paused. If true, viewers can’t …","Is the reward currently paused. If true, viewers can’t …","Indicates whether the ban is permanent (true) or a timeout …","Does the viewer need to enter information when redeeming …","Does the viewer need to enter information when redeeming …","Does the viewer need to enter information when redeeming …","The channel’s broadcast language.","The most recent contribution.","The most recent contribution.","Current level of hype train event.","Current level of hype train event.","The time the Channel Points Prediction will automatically …","The time the Channel Points Prediction will automatically …","The time the Channel Points Prediction will automatically …","Whether a maximum per stream is enabled and what the …","Whether a maximum per stream is enabled and what the …","Whether a maximum per stream is enabled and what the …","Whether a maximum per user per stream is enabled and what …","Whether a maximum per user per stream is enabled and what …","Whether a maximum per user per stream is enabled and what …","The message sent with the cheer.","An object that contains the resubscription message and …","The user ID of the issuer of the ban.","The ID of the moderator of the channel you want to get …","The ID of the broadcaster or one of the broadcaster’s …","An ID that identifies the moderator that updated the …","The ID of the broadcaster or one of the broadcaster’s …","An ID that identifies the moderator that updated the …","The ID of the broadcaster that gave the Shoutout or one of …","An ID that identifies the moderator that sent the …","The ID of the broadcaster that received the Shoutout or …","The user ID of the issuer of the unban.","The user login of the issuer of the ban.","The moderator’s login name.","The moderator’s login name.","The moderator’s login name.","The user login of the issuer of the unban.","The user name of the issuer of the ban.","The moderator’s display name.","The moderator’s display name.","The moderator’s display name.","The user name of the issuer of the unban.","An array of outcomes for the Channel Points Prediction.","An array of outcomes for the Channel Points Prediction. …","An array of outcomes for the Channel Points Prediction. …","An array of outcomes for the Channel Points Prediction. …","Poll on a specific channel has been begun, ended or …","Prediction on the specified channel begins, progresses, …","The number of points contributed to the hype train at the …","The number of points contributed to the hype train at the …","The reward description.","The reward description.","The reward description.","A a broadcaster raids another broadcaster’s channel.","The reason behind the ban.","RFC3339 timestamp of when the reward was redeemed.","RFC3339 timestamp of when the reward was redeemed.","The number of redemptions redeemed during the current live …","The number of redemptions redeemed during the current live …","The number of redemptions redeemed during the current live …","Basic information about the reward that was redeemed, at …","Basic information about the reward that was redeemed, at …","Optional. Specify a reward id to only receive …","Optional. Specify a reward id to only receive …","Optional. Specify a reward id to only receive …","Optional. Specify a reward id to only receive …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Shield mode on the specified channel begins or ends.","Should redemptions be set to fulfilled status immediately …","Should redemptions be set to fulfilled status immediately …","Should redemptions be set to fulfilled status immediately …","Subscription for when a Shoutout has happened","The UTC timestamp (in RFC3339 format) of when the …","The UTC timestamp in RFC 3339 format, which indicates when …","The UTC timestamp in RFC 3339 format, which indicates when …","The UTC timestamp in RFC 3339 format, which indicates when …","The timestamp at which the hype train started.","The timestamp at which the hype train started.","The timestamp at which the hype train started.","The time the poll started.","The time the poll started.","The time the poll started.","The time the Channel Points Prediction started.","The time the Channel Points Prediction started.","The time the Channel Points Prediction started.","The time the Channel Points Prediction started.","The UTC timestamp (in RFC3339 format) of when the …","The UTC timestamp (in RFC3339 format) of when the …","The UTC timestamp (in RFC3339 format) of when the …","Defaults to unfulfilled. Possible values are unknown, …","Will be fulfilled or canceled. Possible values are …","The status of the poll.","The status of the Channel Points Prediction. Valid values …","The UTC timestamp (in RFC3339 format) of when the …","The number of consecutive months the user’s current …","A specified channel receives a subscriber. This does not …","Subscription on a specified channel has changed","An object that contains the campaign’s target …","An object that contains the campaign’s target …","An object that contains the campaign’s target …","The goal’s target value. For example, if the broadcaster …","The goal’s target value.","The goal’s target value. For example, if the broadcaster …","The UTC timestamp (in RFC3339 format) of when the …","The tier of the subscription. Valid values are 1000, 2000, …","The tier of the subscription that ended. Valid values are …","The tier of subscriptions in the subscription gift.","The tier of the user’s subscription.","The reward title.","The reward title.","The reward title.","Question displayed for the poll.","Question displayed for the poll.","Question displayed for the poll.","Title for the Channel Points Prediction.","Title for the Channel Points Prediction.","Title for the Channel Points Prediction.","Title for the Channel Points Prediction.","The channel’s stream title.","The broadcaster user ID that received the channel raid you …","The broadcaster ID that received the raid.","An ID that identifies the broadcaster that received the …","The broadcaster login that received the raid.","The broadcaster’s login name.","The broadcaster display name that received the raid.","The broadcaster’s display name.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The contributors with the most points contributed.","The contributors with the most points contributed.","The contributors with the most points contributed.","Total points contributed to the hype train.","Total points contributed to the hype train.","Total points contributed to the hype train.","The number of subscriptions in the subscription gift.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type of goal.","The type of goal.","The type of goal.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A viewer is unbanned from the specified channel.","Channel has updated the category, title, mature flag, or …","The user ID for the user who was banned on the specified …","User ID of the user that redeemed the reward.","User ID of the user that redeemed the reward.","An ID that identifies the user that donated to the …","The user ID for the user who cheered on the specified …","The user ID for the user now following the specified …","The user ID for the user now following the specified …","The user ID for the user who subscribed to the specified …","The user ID for the user whose subscription ended.","The user ID of the user who sent the subscription gift. …","The user ID of the user who sent a resubscription chat …","The user id for the user who was unbanned on the specified …","The user input provided. Empty string if not provided.","The user input provided. Empty string if not provided.","The user login for the user who was banned on the …","Login of the user that redeemed the reward.","Login of the user that redeemed the reward.","The user’s login name.","The user login for the user who cheered on the specified …","The user login for the user now following the specified …","The user login for the user now following the specified …","The user login for the user who subscribed to the …","The user login for the user whose subscription ended.","The user login of the user who sent the gift. Set to null …","The user login of the user who sent a resubscription chat …","The user login for the user who was unbanned on the …","The requested broadcaster display name.","Display name of the user that redeemed the reward.","Display name of the user that redeemed the reward.","The user’s display name.","The user display name for the user who cheered on the …","The user display name for the user now following the …","The user display name for the user now following the …","The user display name for the user who subscribed to the …","The user display name for the user whose subscription …","The user display name of the user who sent the gift. Set …","The user display name of the user who a resubscription …","The user display name for the user who was unbanned on the …","The number of users that were watching the broadcaster’s …","The number of users that were watching the …","The number of viewers in the raid.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ID of the winning outcome.","<code>channel.ban</code>: a viewer is banned from the specified channel.","<code>channel.ban</code> response payload.","The UTC date and time (in RFC3339 format) of when the user …","The broadcaster user ID for the channel you want to get …","The broadcaster user ID for the channel you want to get …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building <code>ChannelBanV1</code>. On the …","Will be null if permanent ban. If it is a timeout, this …","Indicates whether the ban is permanent (true) or a timeout …","The user ID of the issuer of the ban.","The user login of the issuer of the ban.","The user name of the issuer of the ban.","The reason behind the ban.","The user ID for the user who was banned on the specified …","The user login for the user who was banned on the …","The requested broadcaster display name.","<code>channel.channel_points_custom_reward.add</code>: a custom channel …","<code>channel.channel_points_custom_reward.add</code> response payload.","<code>channel.channel_points_custom_reward.remove</code>: a custom …","<code>channel.channel_points_custom_reward.remove</code> response …","<code>channel.channel_points_custom_reward.update</code>: a custom …","<code>channel.channel_points_custom_reward.update</code> response …","A custom channel points reward has been created for the …","Custom background color for the reward. Format: Hex with # …","Custom background color for the reward. Format: Hex with # …","Custom background color for the reward. Format: Hex with # …","The broadcaster user ID for the channel you want to …","The requested broadcaster ID.","The broadcaster user ID for the channel you want to …","The requested broadcaster ID.","The broadcaster user ID for the channel you want to …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","Timestamp of the cooldown expiration. null if the reward …","Timestamp of the cooldown expiration. null if the reward …","Timestamp of the cooldown expiration. null if the reward …","The reward cost.","The reward cost.","The reward cost.","Set of default images of 1x, 2x and 4x sizes for the …","Set of default images of 1x, 2x and 4x sizes for the …","Set of default images of 1x, 2x and 4x sizes for the …","Whether a cooldown is enabled and what the cooldown is in …","Whether a cooldown is enabled and what the cooldown is in …","Whether a cooldown is enabled and what the cooldown is in …","The reward identifier.","The reward identifier.","The reward identifier.","Set of custom images of 1x, 2x and 4x sizes for the …","Set of custom images of 1x, 2x and 4x sizes for the …","Set of custom images of 1x, 2x and 4x sizes for the …","Is the reward currently enabled. If false, the reward …","Is the reward currently enabled. If false, the reward …","Is the reward currently enabled. If false, the reward …","Is the reward currently in stock. If false, viewers …","Is the reward currently in stock. If false, viewers …","Is the reward currently in stock. If false, viewers …","Is the reward currently paused. If true, viewers can’t …","Is the reward currently paused. If true, viewers can’t …","Is the reward currently paused. If true, viewers can’t …","Does the viewer need to enter information when redeeming …","Does the viewer need to enter information when redeeming …","Does the viewer need to enter information when redeeming …","Whether a maximum per stream is enabled and what the …","Whether a maximum per stream is enabled and what the …","Whether a maximum per stream is enabled and what the …","Whether a maximum per user per stream is enabled and what …","Whether a maximum per user per stream is enabled and what …","Whether a maximum per user per stream is enabled and what …","The reward description.","The reward description.","The reward description.","The number of redemptions redeemed during the current live …","The number of redemptions redeemed during the current live …","The number of redemptions redeemed during the current live …","A custom channel points reward has been removed from the …","Optional. Specify a reward id to only receive …","Optional. Specify a reward id to only receive …","Should redemptions be set to fulfilled status immediately …","Should redemptions be set to fulfilled status immediately …","Should redemptions be set to fulfilled status immediately …","The reward title.","The reward title.","The reward title.","A custom channel points reward has been updated for the …","<code>channel.channel_points_custom_reward.add</code>: a custom channel …","<code>channel.channel_points_custom_reward.add</code> response payload.","Custom background color for the reward. Format: Hex with # …","The broadcaster user ID for the channel you want to …","The broadcaster user ID for the channel you want to …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building …","Timestamp of the cooldown expiration. null if the reward …","The reward cost.","Set of default images of 1x, 2x and 4x sizes for the …","Whether a cooldown is enabled and what the cooldown is in …","The reward identifier.","Set of custom images of 1x, 2x and 4x sizes for the …","Is the reward currently enabled. If false, the reward …","Is the reward currently in stock. If false, viewers …","Is the reward currently paused. If true, viewers can’t …","Does the viewer need to enter information when redeeming …","Whether a maximum per stream is enabled and what the …","Whether a maximum per user per stream is enabled and what …","The reward description.","The number of redemptions redeemed during the current live …","Should redemptions be set to fulfilled status immediately …","The reward title.","<code>channel.channel_points_custom_reward.remove</code>: a custom …","<code>channel.channel_points_custom_reward.remove</code> response …","Custom background color for the reward. Format: Hex with # …","The broadcaster user ID for the channel you want to …","The broadcaster user ID for the channel you want to …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building …","Timestamp of the cooldown expiration. null if the reward …","The reward cost.","Set of default images of 1x, 2x and 4x sizes for the …","Whether a cooldown is enabled and what the cooldown is in …","The reward identifier.","Set of custom images of 1x, 2x and 4x sizes for the …","Is the reward currently enabled. If false, the reward …","Is the reward currently in stock. If false, viewers …","Is the reward currently paused. If true, viewers can’t …","Does the viewer need to enter information when redeeming …","Whether a maximum per stream is enabled and what the …","Whether a maximum per user per stream is enabled and what …","The reward description.","The number of redemptions redeemed during the current live …","Specify a reward id to only receive notifications for a …","Optional. Specify a reward id to only receive …","Should redemptions be set to fulfilled status immediately …","The reward title.","<code>channel.channel_points_custom_reward.update</code>: a custom …","<code>channel.channel_points_custom_reward.update</code> response …","Custom background color for the reward. Format: Hex with # …","The broadcaster user ID for the channel you want to …","The broadcaster user ID for the channel you want to …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building …","Timestamp of the cooldown expiration. null if the reward …","The reward cost.","Set of default images of 1x, 2x and 4x sizes for the …","Whether a cooldown is enabled and what the cooldown is in …","The reward identifier.","Set of custom images of 1x, 2x and 4x sizes for the …","Is the reward currently enabled. If false, the reward …","Is the reward currently in stock. If false, viewers …","Is the reward currently paused. If true, viewers can’t …","Does the viewer need to enter information when redeeming …","Whether a maximum per stream is enabled and what the …","Whether a maximum per user per stream is enabled and what …","The reward description.","The number of redemptions redeemed during the current live …","Specify a reward id to only receive notifications for a …","Optional. Specify a reward id to only receive …","Should redemptions be set to fulfilled status immediately …","The reward title.","Cancelled reward - the reward has been cancelled before …","<code>channel.channel_points_custom_reward_redemption.add</code>: a …","<code>channel.channel_points_custom_reward_redemption.add</code> …","<code>channel.channel_points_custom_reward_redemption.update</code>: a …","<code>channel.channel_points_custom_reward_redemption.update</code> …","Fulfilled reward - the user has claimed it and the reward …","Custom reward redemption statuses: UNFULFILLED, FULFILLED …","Basic information about the reward that was redeemed, at …","Unfulfilled reward - the user has claimed it but it is …","Unknown reward status","A viewer has redeemed a custom channel points reward on …","","","","","The broadcaster user ID for the channel you want to …","The requested broadcaster ID.","The broadcaster user ID for the channel you want to …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster display name.","The requested broadcaster display name.","","","","","The reward cost.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","The redemption identifier.","The redemption identifier.","The reward identifier.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The reward description.","RFC3339 timestamp of when the reward was redeemed.","RFC3339 timestamp of when the reward was redeemed.","Basic information about the reward that was redeemed, at …","Basic information about the reward that was redeemed, at …","Optional. Specify a reward id to only receive …","Optional. Specify a reward id to only receive …","","","Defaults to unfulfilled. Possible values are unknown, …","Will be fulfilled or canceled. Possible values are …","The reward name.","","","","","","","","","A redemption of a channel points custom reward has been …","User ID of the user that redeemed the reward.","User ID of the user that redeemed the reward.","The user input provided. Empty string if not provided.","The user input provided. Empty string if not provided.","Login of the user that redeemed the reward.","Login of the user that redeemed the reward.","Display name of the user that redeemed the reward.","Display name of the user that redeemed the reward.","","","<code>channel.channel_points_custom_reward_redemption.add</code>: a …","<code>channel.channel_points_custom_reward_redemption.add</code> …","The broadcaster user ID for the channel you want to …","The broadcaster user ID for the channel you want to …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building …","The redemption identifier.","RFC3339 timestamp of when the reward was redeemed.","Basic information about the reward that was redeemed, at …","Specify a reward id to only receive notifications for a …","Optional. Specify a reward id to only receive …","Defaults to unfulfilled. Possible values are unknown, …","User ID of the user that redeemed the reward.","The user input provided. Empty string if not provided.","Login of the user that redeemed the reward.","Display name of the user that redeemed the reward.","<code>channel.channel_points_custom_reward_redemption.update</code>: a …","<code>channel.channel_points_custom_reward_redemption.update</code> …","The broadcaster user ID for the channel you want to …","The broadcaster user ID for the channel you want to …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building …","The redemption identifier.","RFC3339 timestamp of when the reward was redeemed.","Basic information about the reward that was redeemed, at …","Specify a reward id to only receive notifications for a …","Optional. Specify a reward id to only receive …","Will be fulfilled or canceled. Possible values are …","User ID of the user that redeemed the reward.","The user input provided. Empty string if not provided.","Login of the user that redeemed the reward.","Display name of the user that redeemed the reward.","<code>channel.charity_campaign.donate</code>: a user donates to the …","<code>channel.charity_campaign.donate</code> response payload.","<code>channel.charity_campaign.progress</code>: progress is made …","<code>channel.charity_campaign.progress</code> response payload.","<code>channel.charity_campaign.start</code>: a broadcaster starts a …","<code>channel.charity_campaign.start</code> response payload.","<code>channel.charity_campaign.stop</code>: a broadcaster stops a …","<code>channel.charity_campaign.stop</code> response payload.","An object that contains the amount of money that the user …","An ID that identifies the broadcaster that’s running the …","An ID that identifies the broadcaster that’s running the …","An ID that identifies the broadcaster that’s running the …","An ID that identifies the broadcaster that ran the …","An ID that identifies the charity campaign.","An ID that identifies the charity campaign.","The broadcaster’s login name.","The broadcaster’s login name.","An ID that identifies the broadcaster that’s running the …","An ID that identifies the broadcaster that’s running the …","The broadcaster’s display name.","The broadcaster’s display name.","The ID of the broadcaster that you want to receive …","The ID of the broadcaster that you want to receive …","The ID of the broadcaster that you want to receive …","The ID of the broadcaster that you want to receive …","An ID that identifies the charity campaign.","A description of the charity.","A description of the charity.","A description of the charity.","A description of the charity.","A URL to an image of the charity’s logo. The image’s …","A URL to an image of the charity’s logo. The image’s …","A URL to an image of the charity’s logo. The image’s …","A URL to an image of the charity’s logo. The image’s …","The charity’s name.","The charity’s name.","The charity’s name.","The charity’s name.","A URL to the charity’s website.","A URL to the charity’s website.","A URL to the charity’s website.","A URL to the charity’s website.","An object that contains the current amount of donations …","An object that contains the current amount of donations …","An object that contains the current amount of donations …","Sends an event notification when a user donates to the …","An ID that identifies the donation. The ID is unique …","An ID that identifies the charity campaign.","An ID that identifies the charity campaign.","An ID that identifies the charity campaign.","Sends an event notification when progress is made towards …","Sends an event notification when a broadcaster starts a …","The UTC timestamp (in RFC3339 format) of when the …","Sends an event notification when a broadcaster stops a …","The UTC timestamp (in RFC3339 format) of when the …","An object that contains the campaign’s target …","An object that contains the campaign’s target …","An object that contains the campaign’s target …","An ID that identifies the user that donated to the …","The user’s login name.","The user’s display name.","<code>channel.charity_campaign.donate</code>: a user donates to the …","<code>channel.charity_campaign.donate</code> response payload.","An object that contains the amount of money that the user …","An ID that identifies the broadcaster that’s running the …","An ID that identifies the charity campaign.","An ID that identifies the broadcaster that’s running the …","The ID of the broadcaster to get notified about.","The ID of the broadcaster that you want to receive …","Create a builder for building …","An ID that identifies the charity campaign.","A description of the charity.","A URL to an image of the charity’s logo. The image’s …","The charity’s name.","A URL to the charity’s website.","An ID that identifies the donation. The ID is unique …","An ID that identifies the user that donated to the …","The user’s login name.","The user’s display name.","<code>channel.charity_campaign.progress</code>: progress is made …","<code>channel.charity_campaign.progress</code> response payload.","An ID that identifies the broadcaster that’s running the …","An ID that identifies the charity campaign.","An ID that identifies the broadcaster that’s running the …","The ID of the broadcaster to get notified about.","The ID of the broadcaster that you want to receive …","Create a builder for building …","A description of the charity.","A URL to an image of the charity’s logo. The image’s …","The charity’s name.","A URL to the charity’s website.","An object that contains the current amount of donations …","An ID that identifies the charity campaign.","An object that contains the campaign’s target …","<code>channel.charity_campaign.start</code>: a broadcaster starts a …","<code>channel.charity_campaign.start</code> response payload.","An ID that identifies the broadcaster that’s running the …","The broadcaster’s login name.","The broadcaster’s display name.","The ID of the broadcaster to get notified about.","The ID of the broadcaster that you want to receive …","Create a builder for building <code>ChannelCharityCampaignStartV1</code>…","A description of the charity.","A URL to an image of the charity’s logo. The image’s …","The charity’s name.","A URL to the charity’s website.","An object that contains the current amount of donations …","An ID that identifies the charity campaign.","The UTC timestamp (in RFC3339 format) of when the …","An object that contains the campaign’s target …","<code>channel.charity_campaign.stop</code>: a broadcaster stops a …","<code>channel.charity_campaign.stop</code> response payload.","An ID that identifies the broadcaster that ran the …","The broadcaster’s login name.","The broadcaster’s display name.","The ID of the broadcaster to get notified about.","The ID of the broadcaster that you want to receive …","Create a builder for building <code>ChannelCharityCampaignStopV1</code>.","A description of the charity.","A URL to an image of the charity’s logo. The image’s …","The charity’s name.","A URL to the charity’s website.","An object that contains the current amount of donations …","An ID that identifies the charity campaign.","The UTC timestamp (in RFC3339 format) of when the …","An object that contains the campaign’s target …","<code>channel.cheer</code>: a user cheers on the specified channel.","<code>channel.cheer</code> response payload.","The number of bits cheered.","The broadcaster user ID for the channel you want to get …","The broadcaster user ID for the channel you want to get …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building <code>ChannelCheerV1</code>. On the …","Whether the user cheered anonymously or not.","The message sent with the cheer.","The user ID for the user who cheered on the specified …","The user login for the user who cheered on the specified …","The user display name for the user who cheered on the …","<code>channel.follow</code> v1: a specified channel receives a follow.","<code>channel.follow</code> response payload.","<code>channel.follow</code> v2: a specified channel receives a follow.","<code>channel.follow</code> response payload.","The broadcaster user ID for the channel you want to get …","The broadcaster user ID for the channel you want to get …","The requested broadcaster ID.","The broadcaster user ID for the channel you want to get …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster display name.","The requested broadcaster display name.","Create a builder for building <code>ChannelFollowV1</code>. On the …","Create a builder for building <code>ChannelFollowV2</code>. On the …","RFC3339 timestamp of when the follow occurred.","RFC3339 timestamp of when the follow occurred.","The ID of the moderator of the channel you want to get …","Create a new ChannelFollowV2 subscription","The user ID for the user now following the specified …","The user ID for the user now following the specified …","The user login for the user now following the specified …","The user login for the user now following the specified …","The user display name for the user now following the …","The user display name for the user now following the …","<code>channel.goal.begin</code>: a specified broadcaster begins a goal.","<code>channel.goal.begin</code> response payload.","<code>channel.goal.end</code>: a specified broadcaster ends a goal.","<code>channel.goal.end</code> response payload.","<code>channel.goal.progress</code>: progress is made towards the …","<code>channel.goal.progress</code> response payload.","A specified broadcaster begins a goal.","The ID of the broadcaster to get notified about.","An ID that uniquely identifies the broadcaster.","The ID of the broadcaster to get notified about.","An ID that uniquely identifies the broadcaster.","The ID of the broadcaster to get notified about.","An ID that uniquely identifies the broadcaster.","The broadcaster’s user handle.","The broadcaster’s user handle.","The broadcaster’s user handle.","The broadcaster’s display name.","The broadcaster’s display name.","The broadcaster’s display name.","The current value.","The current value.","The current value.","A description of the goal, if specified. The description …","A description of the goal, if specified. The description …","A description of the goal, if specified. The description …","A specified broadcaster ends a goal.","The UTC timestamp in RFC 3339 format, which indicates when …","An ID that uniquely identifies this goal.","An ID that uniquely identifies this goal.","An ID that uniquely identifies this goal.","Indicates whether the broadcaster achieved their goal.","Progress is made towards the specified broadcaster’s …","The UTC timestamp in RFC 3339 format, which indicates when …","The UTC timestamp in RFC 3339 format, which indicates when …","The UTC timestamp in RFC 3339 format, which indicates when …","The goal’s target value. For example, if the broadcaster …","The goal’s target value.","The goal’s target value. For example, if the broadcaster …","The type of goal.","The type of goal.","The type of goal.","<code>channel.goal.begin</code>: a specified broadcaster begins a goal.","<code>channel.goal.begin</code> response payload.","The ID of the broadcaster to get notified about.","The ID of the broadcaster to get notified about.","An ID that uniquely identifies the broadcaster.","The broadcaster’s user handle.","The broadcaster’s display name.","Create a builder for building <code>ChannelGoalBeginV1</code>. On the …","The current value.","A description of the goal, if specified. The description …","An ID that uniquely identifies this goal.","The UTC timestamp in RFC 3339 format, which indicates when …","The goal’s target value. For example, if the broadcaster …","The type of goal.","<code>channel.goal.end</code>: a specified broadcaster ends a goal.","<code>channel.goal.end</code> response payload.","The ID of the broadcaster to get notified about.","The ID of the broadcaster to get notified about.","An ID that uniquely identifies the broadcaster.","The broadcaster’s user handle.","The broadcaster’s display name.","Create a builder for building <code>ChannelGoalEndV1</code>. On the …","The current value.","A description of the goal, if specified. The description …","The UTC timestamp in RFC 3339 format, which indicates when …","An ID that uniquely identifies this goal.","Indicates whether the broadcaster achieved their goal.","The UTC timestamp in RFC 3339 format, which indicates when …","The goal’s target value.","The type of goal.","<code>channel.goal.progress</code>: progress is made towards the …","<code>channel.goal.progress</code> response payload.","The ID of the broadcaster to get notified about.","The ID of the broadcaster to get notified about.","An ID that uniquely identifies the broadcaster.","The broadcaster’s user handle.","The broadcaster’s display name.","Create a builder for building <code>ChannelGoalProgressV1</code>. On …","The current value.","A description of the goal, if specified. The description …","An ID that uniquely identifies this goal.","The UTC timestamp in RFC 3339 format, which indicates when …","The goal’s target value. For example, if the broadcaster …","The type of goal.","Bits","<code>channel.hype_train.begin</code>: a hype train begins on the …","<code>channel.hype_train.begin</code> response payload.","<code>channel.hype_train.end</code>: a hype train ends on the specified …","<code>channel.hype_train.end</code> response payload.","<code>channel.hype_train.progress</code>: a hype train makes progress …","<code>channel.hype_train.progress</code> response payload.","A contribution to hype train","Type of contribution","Channel Subscriptions. Either gifted or not.","A hype train begins on the specified channel.","","","","","The broadcaster user ID for the channel you want hype …","The requested broadcaster ID.","The broadcaster user ID for the channel you want hype …","The requested broadcaster ID.","The broadcaster user ID for the channel you want hype …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","","","","","The timestamp at which the hype train cooldown ends so …","","","A hype train ends on the specified channel.","The timestamp at which the hype train ended.","","","","","The time at which the hype train expires. The expiration …","The time at which the hype train expires. The expiration …","","","Returns the argument unchanged.","Returns the argument unchanged.","The number of points required to reach the next level.","The number of points required to reach the next level.","The Hype Train ID.","The Hype Train ID.","The Hype Train ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The most recent contribution.","The most recent contribution.","Current level of hype train event.","Current level of hype train event.","A hype train makes progress on the specified channel.","The number of points contributed to the hype train at the …","The number of points contributed to the hype train at the …","","","The timestamp at which the hype train started.","The timestamp at which the hype train started.","The timestamp at which the hype train started.","","","The contributors with the most points contributed.","The contributors with the most points contributed.","The contributors with the most points contributed.","Total points contributed to the hype train.","Total points contributed to the hype train.","Total points contributed to the hype train.","The total contributed.","","","","","Type of contribution. Valid values include bits, …","","","The ID of the user.","The login of the user.","The display name of the user.","","","<code>channel.hype_train.begin</code>: a hype train begins on the …","<code>channel.hype_train.begin</code> response payload.","The broadcaster user ID for the channel you want hype …","The broadcaster user ID for the channel you want hype …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building <code>ChannelHypeTrainBeginV1</code>. On …","The time at which the hype train expires. The expiration …","The number of points required to reach the next level.","The Hype Train ID.","The most recent contribution.","The number of points contributed to the hype train at the …","The timestamp at which the hype train started.","The contributors with the most points contributed.","Total points contributed to the hype train.","<code>channel.hype_train.end</code>: a hype train ends on the specified …","<code>channel.hype_train.end</code> response payload.","The broadcaster user ID for the channel you want hype …","The broadcaster user ID for the channel you want hype …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building <code>ChannelHypeTrainEndV1</code>. On …","The timestamp at which the hype train cooldown ends so …","The timestamp at which the hype train ended.","The Hype Train ID.","Current level of hype train event.","The timestamp at which the hype train started.","The contributors with the most points contributed.","Total points contributed to the hype train.","<code>channel.hype_train.progress</code>: a hype train makes progress …","<code>channel.hype_train.progress</code> response payload.","The broadcaster user ID for the channel you want hype …","The broadcaster user ID for the channel you want hype …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building <code>ChannelHypeTrainProgressV1</code>. …","The time at which the hype train expires. The expiration …","The number of points required to reach the next level.","The Hype Train ID.","The most recent contribution.","Current level of hype train event.","The number of points contributed to the hype train at the …","The timestamp at which the hype train started.","The contributors with the most points contributed.","Total points contributed to the hype train.","Bits voting settings for a poll","Channel Points voting settings","<code>channel.poll.begin</code>: a poll begins on the specified channel.","<code>channel.poll.begin</code> response payload.","<code>channel.poll.end</code>: a poll ends on the specified channel.","<code>channel.poll.end</code> response payload.","<code>channel.poll.progress</code>: an user responds to a poll on the …","<code>channel.poll.progress</code> response payload.","Number of Bits required to vote once with Bits.","Number of Channel Points required to vote once with …","A poll begins on the specified channel.","The Bits voting settings for the poll.","The Bits voting settings for the poll.","The Bits voting settings for the poll.","","","","","The broadcaster user ID of the channel for which “poll …","The requested broadcaster ID.","The broadcaster user ID of the channel for which “poll …","The requested broadcaster ID.","The broadcaster user ID of the channel for which “poll …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","The Channel Points voting settings for the poll.","The Channel Points voting settings for the poll.","The Channel Points voting settings for the poll.","An array of choices for the poll.","An array of choices for the poll. Includes vote counts.","An array of choices for the poll. Includes vote counts.","","","","","","","A poll ends on the specified channel.","The time the poll ended.","The time the poll will end.","The time the poll will end.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","ID of the poll.","ID of the poll.","ID of the poll.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicates if Bits can be used for voting.","Indicates if Channel Points can be used for voting.","","","A user responds to a poll on the specified channel","","","The time the poll started.","The time the poll started.","The time the poll started.","The status of the poll.","Question displayed for the poll.","Question displayed for the poll.","Question displayed for the poll.","","","","","","","","","","","<code>channel.poll.begin</code>: a poll begins on the specified channel.","<code>channel.poll.begin</code> response payload.","The Bits voting settings for the poll.","The broadcaster user ID of the channel for which “poll …","The broadcaster user ID of the channel for which “poll …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building <code>ChannelPollBeginV1</code>. On the …","The Channel Points voting settings for the poll.","An array of choices for the poll.","The time the poll will end.","ID of the poll.","The time the poll started.","Question displayed for the poll.","<code>channel.poll.end</code>: a poll ends on the specified channel.","<code>channel.poll.end</code> response payload.","The Bits voting settings for the poll.","The broadcaster user ID of the channel for which “poll …","The broadcaster user ID of the channel for which “poll …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building <code>ChannelPollEndV1</code>. On the …","The Channel Points voting settings for the poll.","An array of choices for the poll. Includes vote counts.","The time the poll ended.","ID of the poll.","The time the poll started.","The status of the poll.","Question displayed for the poll.","<code>channel.poll.progress</code>: an user responds to a poll on the …","<code>channel.poll.progress</code> response payload.","The Bits voting settings for the poll.","The broadcaster user ID of the channel for which “poll …","The broadcaster user ID of the channel for which “poll …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building <code>ChannelPollProgressV1</code>. On …","The Channel Points voting settings for the poll.","An array of choices for the poll. Includes vote counts.","The time the poll will end.","ID of the poll.","The time the poll started.","Question displayed for the poll.","<code>channel.prediction.begin</code>: a Prediction begins on the …","<code>channel.prediction.begin</code> response payload.","<code>channel.prediction.end</code>: a Prediction ends on the specified …","<code>channel.prediction.end</code> response payload.","<code>channel.prediction.lock</code>: an user responds to a prediction …","<code>channel.prediction.lock</code> response payload.","<code>channel.prediction.progress</code>: an user responds to a …","<code>channel.prediction.progress</code> response payload.","A Prediction begins on the specified channel","The broadcaster user ID of the channel for which …","The requested broadcaster ID.","The broadcaster user ID of the channel for which …","The requested broadcaster ID.","The broadcaster user ID of the channel for which …","The requested broadcaster ID.","The broadcaster user ID of the channel for which …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster login.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","The requested broadcaster display name.","A Prediction ends on the specified channel.","The time the Channel Points Prediction ended.","Channel Points Prediction ID.","Channel Points Prediction ID.","Channel Points Prediction ID.","Channel Points Prediction ID.","A user responds to a prediction on the specified channel","The time the Channel Points Prediction will automatically …","The time the Channel Points Prediction will automatically …","The time the Channel Points Prediction will automatically …","An array of outcomes for the Channel Points Prediction.","An array of outcomes for the Channel Points Prediction. …","An array of outcomes for the Channel Points Prediction. …","An array of outcomes for the Channel Points Prediction. …","A user responds to a prediction on the specified channel","The time the Channel Points Prediction started.","The time the Channel Points Prediction started.","The time the Channel Points Prediction started.","The time the Channel Points Prediction started.","The status of the Channel Points Prediction. Valid values …","Title for the Channel Points Prediction.","Title for the Channel Points Prediction.","Title for the Channel Points Prediction.","Title for the Channel Points Prediction.","ID of the winning outcome.","<code>channel.prediction.begin</code>: a Prediction begins on the …","<code>channel.prediction.begin</code> response payload.","The broadcaster user ID of the channel for which …","The broadcaster user ID of the channel for which …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building <code>ChannelPredictionBeginV1</code>. On …","Channel Points Prediction ID.","The time the Channel Points Prediction will automatically …","An array of outcomes for the Channel Points Prediction.","The time the Channel Points Prediction started.","Title for the Channel Points Prediction.","<code>channel.prediction.end</code>: a Prediction ends on the specified …","<code>channel.prediction.end</code> response payload.","The broadcaster user ID of the channel for which …","The broadcaster user ID of the channel for which …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building <code>ChannelPredictionEndV1</code>. On …","The time the Channel Points Prediction ended.","Channel Points Prediction ID.","An array of outcomes for the Channel Points Prediction. …","The time the Channel Points Prediction started.","The status of the Channel Points Prediction. Valid values …","Title for the Channel Points Prediction.","ID of the winning outcome.","<code>channel.prediction.lock</code>: an user responds to a prediction …","<code>channel.prediction.lock</code> response payload.","The broadcaster user ID of the channel for which …","The broadcaster user ID of the channel for which …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building <code>ChannelPredictionLockV1</code>. On …","Channel Points Prediction ID.","The time the Channel Points Prediction will automatically …","An array of outcomes for the Channel Points Prediction. …","The time the Channel Points Prediction started.","Title for the Channel Points Prediction.","<code>channel.prediction.progress</code>: an user responds to a …","<code>channel.prediction.progress</code> response payload.","The broadcaster user ID of the channel for which …","The broadcaster user ID of the channel for which …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building <code>ChannelPredictionProgressV1</code>. …","Channel Points Prediction ID.","The time the Channel Points Prediction will automatically …","An array of outcomes for the Channel Points Prediction. …","The time the Channel Points Prediction started.","Title for the Channel Points Prediction.","<code>channel.raid</code>: a a broadcaster raids another …","<code>channel.raid</code> response payload.","Create a builder for building <code>ChannelRaidV1</code>. On the …","The broadcaster user ID that created the channel raid you …","The broadcaster user ID that created the channel raid you …","The broadcaster ID that created the raid.","The broadcaster login that created the raid.","The broadcaster display name that created the raid.","The broadcaster user ID that received the channel raid you …","The broadcaster user ID that received the channel raid you …","The broadcaster ID that received the raid.","The broadcaster login that received the raid.","The broadcaster display name that received the raid.","The number of viewers in the raid.","<code>channel.shield_mode.begin</code>: an user responds to a …","<code>channel.shield_mode.begin</code> response payload.","<code>channel.shield_mode.end</code>: an user responds to a prediction …","<code>channel.shield_mode.end</code> response payload.","A channel activates Shield Mode","The ID of the broadcaster that you want to receive …","An ID that identifies the broadcaster whose Shield Mode …","The ID of the broadcaster that you want to receive …","An ID that identifies the broadcaster whose Shield Mode …","The broadcaster’s login name.","The broadcaster’s login name.","The broadcaster’s display name.","The broadcaster’s display name.","A channel deactivates Shield Mode","The UTC timestamp (in RFC3339 format) of when the …","The ID of the broadcaster or one of the broadcaster’s …","An ID that identifies the moderator that updated the …","The ID of the broadcaster or one of the broadcaster’s …","An ID that identifies the moderator that updated the …","The moderator’s login name.","The moderator’s login name.","The moderator’s display name.","The moderator’s display name.","The UTC timestamp (in RFC3339 format) of when the …","<code>channel.shield_mode.begin</code>: an user responds to a …","<code>channel.shield_mode.begin</code> response payload.","The ID of the broadcaster that you want to receive …","An ID that identifies the broadcaster whose Shield Mode …","The broadcaster’s login name.","The broadcaster’s display name.","Create a builder for building <code>ChannelShieldModeBeginV1</code>. On …","The ID of the broadcaster or one of the broadcaster’s …","An ID that identifies the moderator that updated the …","The moderator’s login name.","The moderator’s display name.","Get shield mode begin events for this channel as moderator","The UTC timestamp (in RFC3339 format) of when the …","<code>channel.shield_mode.end</code>: an user responds to a prediction …","<code>channel.shield_mode.end</code> response payload.","The ID of the broadcaster that you want to receive …","An ID that identifies the broadcaster whose Shield Mode …","The broadcaster’s login name.","The broadcaster’s display name.","Create a builder for building <code>ChannelShieldModeEndV1</code>. On …","The UTC timestamp (in RFC3339 format) of when the …","The ID of the broadcaster or one of the broadcaster’s …","An ID that identifies the moderator that updated the …","The moderator’s login name.","The moderator’s display name.","Get shield mode end events for this channel as moderator","<code>channel.shoutout.create</code>: a Prediction begins on the …","<code>channel.shoutout.create</code> response payload.","<code>channel.shoutout.receive</code>: a Prediction begins on the …","<code>channel.shoutout.receive</code> response payload.","The ID of the broadcaster that you want to receive …","An ID that identifies the broadcaster that sent the …","The ID of the broadcaster that you want to receive …","An ID that identifies the broadcaster that received the …","The broadcaster’s login name.","The broadcaster’s login name.","The broadcaster’s display name.","The broadcaster’s display name.","The UTC timestamp (in RFC3339 format) of when the …","A specified broadcaster sends a Shoutout.","An ID that identifies the broadcaster that sent the …","The broadcaster’s login name.","The broadcaster’s display name.","The ID of the broadcaster that gave the Shoutout or one of …","An ID that identifies the moderator that sent the …","The ID of the broadcaster that received the Shoutout or …","The moderator’s login name.","The moderator’s display name.","A specified broadcaster receives a Shoutout.","The UTC timestamp (in RFC3339 format) of when the …","The UTC timestamp (in RFC3339 format) of when the …","The UTC timestamp (in RFC3339 format) of when the …","An ID that identifies the broadcaster that received the …","The broadcaster’s login name.","The broadcaster’s display name.","The number of users that were watching the broadcaster’s …","The number of users that were watching the …","<code>channel.shoutout.create</code>: a Prediction begins on the …","<code>channel.shoutout.create</code> response payload.","The ID of the broadcaster that you want to receive …","An ID that identifies the broadcaster that sent the …","The broadcaster’s login name.","The broadcaster’s display name.","Create a builder for building <code>ChannelShoutoutCreateV1</code>. On …","The UTC timestamp (in RFC3339 format) of when the …","The ID of the broadcaster that gave the Shoutout or one of …","An ID that identifies the moderator that sent the …","The moderator’s login name.","The moderator’s display name.","Create a new <code>ChannelShoutoutCreateV1</code>","The UTC timestamp (in RFC3339 format) of when the …","The UTC timestamp (in RFC3339 format) of when the …","An ID that identifies the broadcaster that received the …","The broadcaster’s login name.","The broadcaster’s display name.","The number of users that were watching the broadcaster’s …","<code>channel.shoutout.receive</code>: a Prediction begins on the …","<code>channel.shoutout.receive</code> response payload.","The ID of the broadcaster that you want to receive …","An ID that identifies the broadcaster that received the …","The broadcaster’s login name.","The broadcaster’s display name.","Create a builder for building <code>ChannelShoutoutReceiveV1</code>. On …","An ID that identifies the broadcaster that sent the …","The broadcaster’s login name.","The broadcaster’s display name.","The ID of the broadcaster that received the Shoutout or …","Create a new <code>ChannelShoutoutReceiveV1</code>","The UTC timestamp (in RFC3339 format) of when the …","The number of users that were watching the …","<code>channel.subscribe</code>: a specified channel receives a …","<code>channel.subscribe</code> response payload.","The broadcaster user ID for the channel you want to get …","The broadcaster user ID for the channel you want to get …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building <code>ChannelSubscribeV1</code>. On the …","Whether the subscription is a gift.","The tier of the subscription. Valid values are 1000, 2000, …","The user ID for the user who subscribed to the specified …","The user login for the user who subscribed to the …","The user display name for the user who subscribed to the …","<code>channel.subscription.end</code>: a subscription to the specified …","<code>channel.subscription.end</code> response payload.","<code>channel.subscription.gift</code>: a subscription to the specified …","<code>channel.subscription.gift</code> response payload.","<code>channel.subscription.message</code>: a subscription to the …","<code>channel.subscription.message</code> response payload.","The broadcaster user ID for the channel you want to get …","The broadcaster user ID.","The broadcaster user ID for the channel you want to get …","The broadcaster user ID.","The broadcaster user ID for the channel you want to get …","The broadcaster user ID.","The broadcaster login.","The broadcaster login.","The broadcaster login.","The broadcaster display name.","The broadcaster display name.","The broadcaster display name.","The total number of months the user has been subscribed to …","The number of subscriptions gifted by this user in the …","The month duration of the subscription.","A subscription to the specified channel expires.","A user gives one or more gifted subscriptions in a channel.","Whether the subscription gift was anonymous.","Whether the subscription was a gift.","A user sends a resubscription chat message in a specific …","An object that contains the resubscription message and …","The number of consecutive months the user’s current …","The tier of the subscription that ended. Valid values are …","The tier of subscriptions in the subscription gift.","The tier of the user’s subscription.","The number of subscriptions in the subscription gift.","The user ID for the user whose subscription ended.","The user ID of the user who sent the subscription gift. …","The user ID of the user who sent a resubscription chat …","The user login for the user whose subscription ended.","The user login of the user who sent the gift. Set to null …","The user login of the user who sent a resubscription chat …","The user display name for the user whose subscription …","The user display name of the user who sent the gift. Set …","The user display name of the user who a resubscription …","<code>channel.subscription.end</code>: a subscription to the specified …","<code>channel.subscription.end</code> response payload.","The broadcaster user ID for the channel you want to get …","The broadcaster user ID for the channel you want to get …","The broadcaster user ID.","The broadcaster login.","The broadcaster display name.","Create a builder for building <code>ChannelSubscriptionEndV1</code>. On …","Whether the subscription was a gift.","The tier of the subscription that ended. Valid values are …","The user ID for the user whose subscription ended.","The user login for the user whose subscription ended.","The user display name for the user whose subscription …","<code>channel.subscription.gift</code>: a subscription to the specified …","<code>channel.subscription.gift</code> response payload.","The broadcaster user ID for the channel you want to get …","The broadcaster user ID for the channel you want to get …","The broadcaster user ID.","The broadcaster login.","The broadcaster display name.","Create a builder for building <code>ChannelSubscriptionGiftV1</code>. …","The number of subscriptions gifted by this user in the …","Whether the subscription gift was anonymous.","The tier of subscriptions in the subscription gift.","The number of subscriptions in the subscription gift.","The user ID of the user who sent the subscription gift. …","The user login of the user who sent the gift. Set to null …","The user display name of the user who sent the gift. Set …","<code>channel.subscription.message</code>: a subscription to the …","<code>channel.subscription.message</code> response payload.","A message attached to a <code>ChannelSubscriptionMessageV1Payload</code>","","","The broadcaster user ID for the channel you want to get …","The broadcaster user ID for the channel you want to get …","The broadcaster user ID.","The broadcaster login.","The broadcaster display name.","Create a builder for building <code>ChannelSubscriptionMessageV1</code>.","","","The total number of months the user has been subscribed to …","","The month duration of the subscription.","An array that includes the emote ID and start and end …","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","An object that contains the resubscription message and …","","The number of consecutive months the user’s current …","The text of the resubscription chat message.","The tier of the user’s subscription.","","","","","The user ID of the user who sent a resubscription chat …","The user login of the user who sent a resubscription chat …","The user display name of the user who a resubscription …","","<code>channel.unban</code>: a viewer is unbanned from the specified …","<code>channel.unban</code> response payload.","The broadcaster user ID for the channel you want to get …","The broadcaster user ID for the channel you want to get …","The requested broadcaster ID.","The requested broadcaster login.","The requested broadcaster display name.","Create a builder for building <code>ChannelUnbanV1</code>. On the …","The user ID of the issuer of the unban.","The user login of the issuer of the unban.","The user name of the issuer of the unban.","The user id for the user who was unbanned on the specified …","The user login for the user who was unbanned on the …","The user display name for the user who was unbanned on the …","<code>channel.update</code> subscription type sends notifications when …","<code>channel.update</code> response payload.","The broadcaster user ID for the channel you want to get …","The broadcaster user ID for the channel you want to get …","The broadcaster’s user ID.","The requested broadcaster login.","The broadcaster’s user display name.","Create a builder for building <code>ChannelUpdateV1</code>. On the …","The channel’s category ID.","The category name.","A boolean identifying whether the channel is flagged as …","The channel’s broadcast language.","The channel’s stream title.","<code>channel.ban</code>: a viewer is banned from the specified channel.","Channel Ban V1 Event","<code>channel.charity_campaign.donate</code>: a user donates to the …","Channel Charity Campaign Donate V1 Event","<code>channel.charity_campaign.progress</code>: progress is made …","Channel Charity Campaign Progress V1 Event","<code>channel.charity_campaign.start</code>: a broadcaster starts a …","Channel Charity Campaign Start V1 Event","<code>channel.charity_campaign.stop</code>: a broadcaster stops a …","Channel Charity Campaign Stop V1 Event","<code>channel.cheer</code>: a user cheers on the specified channel.","Channel Cheer V1 Event","<code>channel.follow</code>: a specified channel receives a follow.","Channel Follow V1 Event","Channel Follow V2 Event","<code>channel.goal.begin</code>: a goal begins on the specified channel.","Channel Goal Begin V1 Event","<code>channel.goal.end</code>: a goal ends on the specified channel.","Channel Goal End V1 Event","<code>channel.goal.progress</code>: a goal makes progress on the …","Channel Goal Progress V1 Event","<code>channel.hype_train.begin</code>: a hype train begins on the …","Channel Hype Train Begin V1 Event","<code>channel.hype_train.end</code>: a hype train ends on the specified …","Channel Hype Train End V1 Event","<code>channel.hype_train.progress</code>: a hype train makes progress …","Channel Hype Train Progress V1 Event","<code>channel.channel_points_custom_reward.add</code>: a custom channel …","Channel Points Custom Reward Add V1 Event","<code>channel.channel_points_custom_reward_redemption.add</code>: a …","Channel Points Custom Reward Redemption Add V1 Event","<code>channel.channel_points_custom_reward_redemption.update</code>: a …","Channel Points Custom Reward Redemption Update V1 Event","<code>channel.channel_points_custom_reward.remove</code>: a custom …","Channel Points Custom Reward Remove V1 Event","<code>channel.channel_points_custom_reward.update</code>: a custom …","Channel Points Custom Reward Update V1 Event","<code>channel.poll.begin</code>: a poll begins on the specified channel.","Channel Poll Begin V1 Event","<code>channel.poll.end</code>: a poll ends on the specified channel.","Channel Poll End V1 Event","<code>channel.poll.progress</code>: a user responds to a poll on the …","Channel Poll Progress V1 Event","<code>channel.prediction.begin</code>: a Prediction begins on the …","Channel Prediction Begin V1 Event","<code>channel.prediction.end</code>: a Prediction ends on the specified …","Channel Prediction End V1 Event","<code>channel.prediction.lock</code>: a Prediction is locked on the …","Channel Prediction Lock V1 Event","<code>channel.prediction.progress</code>: a user participates in a …","Channel Prediction Progress V1 Event","<code>channel.raid</code>: a broadcaster raids another broadcaster’s …","Channel Raid V1 Event","<code>channel.shield_mode.begin</code>: a channel activates shield mode","Channel ShieldMode Begin V1 Event","<code>channel.shield_mode.end</code>: a channel deactivates shield mode","Channel ShieldMode End V1 Event","<code>channel.shoutout.create</code>: a specified broadcaster sends a …","Channel Shoutout Create V1 Event","<code>channel.shoutout.receive</code>: a specified broadcaster receives …","Channel Shoutout Receive V1 Event","<code>channel.subscribe</code>: a specified channel receives a …","Channel Subscribe V1 Event","<code>channel.subscription.end</code>: a subscription to the specified …","Channel Subscription End V1 Event","<code>channel.subscription.gift</code>: a user gives one or more gifted …","Channel Subscription Gift V1 Event","<code>channel.subscription.message</code>: a user sends a …","Channel Subscription Message V1 Event","<code>channel.unban</code>: a viewer is unbanned from the specified …","Channel Unban V1 Event","<code>channel.update</code>: subscription type sends notifications when …","Channel Update V1 Event","A notification with an event payload. Enumerates all …","Event Types","Error when parsing an event-type string.","<code>stream.offline</code>: the specified broadcaster stops a stream.","StreamOffline V1 Event","<code>stream.online</code>: the specified broadcaster starts a stream.","StreamOnline V1 Event","<code>user.authorization.grant</code>: a user’s authorization has …","User Authorization Grant V1 Event","<code>user.authorization.revoke</code>: a user has revoked …","User Authorization Revoke V1 Event","<code>user.update</code>: user updates their account.","User Update V1 Event","","","","","","","Returns the argument unchanged.","If this event is a <code>VerificationRequest</code>, return the …","Calls <code>U::from(self)</code>.","Returns <code>true</code> if the message in the <code>Payload</code> is <code>Notification</code>.","Returns <code>true</code> if the message in the <code>Payload</code> is <code>Revocation</code>.","Returns <code>true</code> if the message in the <code>Payload</code> is …","Parse string slice as an <code>Event</code>. Consider using …","Parse a http payload as an <code>Event</code>","Parse a websocket frame as an <code>EventsubWebsocketData</code>","","Make a <code>EventSubSubscription</code> from this notification.","","Get the event string of this event.","","","","","Verify that this event is authentic using <code>HMAC-SHA256</code>.","","Types for Eventsub websocket","","Metadata for a websocket event","Defines the message that the EventSub WebSocket server …","","Defines the message that the EventSub WebSocket server …","Defines a message that the EventSub WebSocket server sends …","","Defines a message that the EventSub WebSocket server sends …","Defines the message that the EventSub WebSocket server …","","Defines the message that the EventSub WebSocket server …","Defines the message that the EventSub WebSocket server …","Defines the message that the EventSub WebSocket server …","","Defines the message that the EventSub WebSocket server …","Session information sent with the welcome","Defines the first message that the EventSub WebSocket …","","Defines the first message that the EventSub WebSocket …","Defines the first message that the EventSub WebSocket …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The UTC date and time that the connection was created.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","An ID that uniquely identifies this WebSocket connection. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The maximum number of seconds that you should expect …","Get message id","Get message id","An ID that uniquely identifies the message. Twitch sends …","An ID that uniquely identifies the message. Twitch sends …","An ID that uniquely identifies the message. Twitch sends …","An ID that uniquely identifies the message. Twitch sends …","An ID that uniquely identifies the message. Twitch sends …","Get message timestamp","Get message timestamp","The UTC date and time that the message was sent.","The UTC date and time that the message was sent.","The UTC date and time that the message was sent.","The UTC date and time that the message was sent.","The UTC date and time that the message was sent.","Get metadata for the event","The URL to reconnect to if you get a Reconnect message. Is …","","","","","","","","","","","Session information","Session data","The connection’s status, which is set to connected.","The type of event sent in the message.","The type of event sent in the message.","The version number of the subscription type’s …","The version number of the subscription type’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","<code>stream.offline</code>: the specified broadcaster stops a stream.","<code>stream.offline</code> response payload.","<code>stream.online</code>: the specified broadcaster starts a stream","<code>stream.online</code> response payload.","","","","","","","","","The broadcaster user ID you want to get stream offline …","The broadcaster’s user id.","The broadcaster user ID you want to get stream online …","The broadcaster’s user id.","The broadcaster’s user login.","The broadcaster’s user login.","The broadcaster’s user display name.","The broadcaster’s user display name.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The id of the stream.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The specified broadcaster stops a stream.","The specified broadcaster starts a stream","","","","","The timestamp at which the stream went online at.","","","","","","","","","","","","","The stream type. Valid values are: live, playlist, …","","","","","","","","","<code>stream.offline</code>: the specified broadcaster stops a stream.","<code>stream.offline</code> response payload.","The broadcaster user ID you want to get stream offline …","The broadcaster user ID you want to get stream offline …","The broadcaster’s user id.","The broadcaster’s user login.","The broadcaster’s user display name.","Create a builder for building <code>StreamOfflineV1</code>. On the …","<code>stream.online</code>: the specified broadcaster starts a stream","<code>stream.online</code> response payload.","The broadcaster user ID you want to get stream online …","The broadcaster user ID you want to get stream online …","The broadcaster’s user id.","The broadcaster’s user login.","The broadcaster’s user display name.","Create a builder for building <code>StreamOnlineV1</code>. On the …","The id of the stream.","The timestamp at which the stream went online at.","The stream type. Valid values are: live, playlist, …","<code>user.authorization.grant</code>: a user’s authorization has …","<code>user.authorization.grant</code> response payload.","<code>user.authorization.revoke</code>: a user has revoked …","<code>user.authorization.revoke</code> response payload.","<code>user.update</code>: user updates their account.","<code>user.update</code> response payload.","Authorization from a user has been granted or revoked to a …","","","","","","","","","","","","","Your application’s client id. The provided client_id …","The client_id of the application that was granted user …","Your application’s client id. The provided client_id …","The client_id of the application with revoked user access.","","","","","","","","","","","","","The user’s description.","","","","","","","The user’s email. Only included if you have the …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specified user updates their account.","The user id for the user who has granted authorization for …","The user id for the user who has revoked authorization for …","The user ID for the user you want update notifications for.","The user’s user id.","The user login for the user who has granted authorization …","The user login for the user who has revoked authorization …","The user’s user login.","The user display name for the user who has granted …","The user name for the user who has revoked authorization …","The user’s user display name.","","","","","","","<code>user.authorization.grant</code>: a user’s authorization has …","<code>user.authorization.grant</code> response payload.","<code>user.authorization.revoke</code>: a user has revoked …","<code>user.authorization.revoke</code> response payload.","Your application’s client id. The provided client_id …","The client_id of the application that was granted user …","Your application’s client id. The provided client_id …","The client_id of the application with revoked user access.","A user’s authorization has been granted to your client …","A user has revoked authorization for your client id.","The user id for the user who has granted authorization for …","The user id for the user who has revoked authorization for …","The user login for the user who has granted authorization …","The user login for the user who has revoked authorization …","The user display name for the user who has granted …","The user name for the user who has revoked authorization …","<code>user.authorization.grant</code>: a user’s authorization has …","<code>user.authorization.grant</code> response payload.","Create a builder for building <code>UserAuthorizationGrantV1</code>. On …","Your application’s client id. The provided client_id …","The client_id of the application that was granted user …","Your application’s client id. The provided client_id …","The user id for the user who has granted authorization for …","The user login for the user who has granted authorization …","The user display name for the user who has granted …","<code>user.authorization.revoke</code>: a user has revoked …","<code>user.authorization.revoke</code> response payload.","Create a builder for building <code>UserAuthorizationRevokeV1</code>. …","Your application’s client id. The provided client_id …","The client_id of the application with revoked user access.","Your application’s client id. The provided client_id …","The user id for the user who has revoked authorization for …","The user login for the user who has revoked authorization …","The user name for the user who has revoked authorization …","<code>user.update</code>: user updates their account.","<code>user.update</code> response payload.","Create a builder for building <code>UserUpdateV1</code>. On the …","The user’s description.","The user’s email. Only included if you have the …","The user ID for the user you want update notifications for.","The user ID for the user you want update notifications for.","The user’s user id.","The user’s user login.","The user’s user display name.","Represents a donation “amount”","","","","","The ISO-4217 three-letter currency code that identifies …","The number of decimal places used by the currency. For …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","The monetary amount.","","Body parameters","Body parameters","Body parameters","Errors that can happen when creating a body","Errors for <code>HelixClient::req_get</code> and similar functions.","Could not create request","Could not create request","A cursor is a pointer to the current “page” in the …","A cursor is a pointer to the current “page” in the …","Custom error","{0}","{0}","deserialization failed when processing request response …","deserialization failed when processing request response …","deserialization failed when processing request response …","deserialization failed when processing request response …","An empty body.","helix returned error {status:?} - {error}: {message:?} …","helix returned error {status:?} - {error}: {message:?} …","helix returned error {status:?} - {error}: {message:?} …","helix returned error {status:?} - {error}: {message:?} …","helix returned error {status:?} - {error}: {message:?} …","field serializer only supports strings, sequences, …","Client for Helix or the New Twitch API","Create a body. Used for specializing request bodies","Could not parse DELETE response","Got error from DELETE response","Could not parse GET response","Got error from GET response","Could not parse PATCH response","Got error from PATCH response","Could not parse POST response","Got error from POST response","Could not parse PUT response","Got error from PUT response","http crate returned an error","Request failed from reqwests side","invalid or unexpected response from twitch.","invalid or unexpected response from twitch.","invalid or unexpected response from twitch.","invalid or unexpected response from twitch.","invalid or unexpected response from twitch.","Errors that can happen when creating <code>http::Uri</code> for <code>Request</code>","could not assemble URI for request","uri is invalid","could not serialize as json","No pagination found","Optional scopes needed by this endpoint","The path to the endpoint relative to the helix root. eg. …","A request that can be paginated.","pair serializer only supports strings, integers, floats, …","could not serialize request to query","could not serialize to query","A request is a Twitch endpoint, see New Twitch API …","Helix endpoint DELETEs information","Request failed from reqwests side","Helix endpoint GETs information","Helix endpoint PATCHs information","Helix endpoint POSTs information","Helix endpoint PUTs information","Response retrieved from endpoint. Data is the type in …","Response type. twitch’s response will  deserialize to …","Scopes needed by this endpoint","","Errors from the query serializer","serialization of body failed","serializer only supports structs and maps on top-level","URI could not be parsed","could not assemble URI for request","could not parse response as utf8 when calling <code>GET {2}</code>","could not parse response as utf8 when calling <code>PUT {2}</code>","could not parse response as utf8 when calling <code>POST {2}</code>","could not parse response as utf8 when calling <code>POST {2}</code>","could not parse response as utf8 when calling <code>DELETE {2}</code>","value serializer only supports primitive types","Get a borrowed <code>Cow&lt;&#39;_, CursorRef&gt;</code>","","","","Provides access to the underlying value as a string slice.","Helix endpoints regarding bits","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helix endpoints regarding channels","Helix endpoints regarding charities","Helix endpoints regarding chat","Client for Helix endpoints","Helix endpoints regarding clips","","","","","","","Create a <code>http::Request</code> from this <code>Request</code> in your client","Create a <code>http::Request</code> from this <code>Request</code> in your client","Create a <code>http::Request</code> from this <code>Request</code> in your client","Create a <code>http::Request</code> from this <code>Request</code> in your client","Create a <code>http::Request</code> from this <code>Request</code> in your client","Twitch’s response field for <code>data</code>.","","","","","","","","","","","","","","","Helix endpoints regarding EventSub","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Constructs a new Cursor from a static reference","Transparently reinterprets the static string slice as a …","","Transparently reinterprets the string slice as a …","Helix endpoints regarding games","Returns bare URI for the request, NOT including query …","Returns full URI for the request, including query …","Helix endpoints regarding creator goals","","","Helix endpoints regarding hype trains","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>Cursor</code> into a <code>Box&lt;CursorRef&gt;</code>","Converts a <code>Box&lt;CursorRef&gt;</code> into a <code>Cursor</code> without copying or …","Make a paginate-able request into a stream","Helix endpoints regarding moderation","Constructs a new Cursor","Fields which are not part of the data response, but are …","A cursor value, to be used in a subsequent request to …","Parse a response string into the response.","Parse a response string into the response.","Parse a response string into the response.","Parse a response string into the response.","Parse a response string into the response.","Parse response.","Parse response.","Parse response.","Parse response.","Parse response.","","","Helix endpoints regarding channel points/redeems","The current number of subscriber points earned by this …","Helix endpoints regarding channel polls","Helix endpoints regarding channel predictions","","","","","","","","","","Defines layout of the url parameters.","Helix endpoints regarding channel raids","Requests for driving the API","The request that was sent, used for pagination.","Responses contains the return values of a request.","Helix endpoints regarding stream schedules","Helix endpoints regarding search","","","Should returns the current pagination cursor.","","","","","","","","","","Helix endpoints regarding streams","Helix endpoints regarding subscriptions","Helix endpoints regarding tags","Unwraps the underlying <code>String</code> value","Helix endpoints regarding subscriptions","","","","","","","","","","","","","","","Response would return this many results if fully …","","","","","","","","","","","","","","","","","","","","","","","","","Create the body","","","","","","","","","","","","","","","Helix endpoints regarding users","Helix endpoints regarding videos","","","","","","","","","","","","","Helix endpoints regarding whispers","Body sent to DELETE response","Error message related to status code","Error message from Twitch","Reason for error","Response text","Status code of error, usually 400-499","Status Code","URI to the endpoint","Uri to endpoint","Error message related to status code","Error message from Twitch","Reason for error","Response text","Status code of error, usually 400-499","Status Code","URI to the endpoint","Uri to endpoint","Body sent to POST response","Error message related to status code","Error message from Twitch","Reason for error","Response text","Status code of error, usually 400-499","Status Code","URI to the endpoint","Uri to endpoint","Body sent to POST response","Error message related to status code","Error message from Twitch","Reason for error","Response text","Status code of error, usually 400-499","Status Code","URI to the endpoint","Uri to endpoint","Body sent to PUT response","Error message related to status code","Error message from Twitch","Reason for error","Response text","Status code of error, usually 400-499","Status Code","URI to the endpoint","Uri to endpoint","Location where this was triggered","Location where this was triggered","Location where this was triggered","Location where this was triggered","Return Values for Get Bits Leaderboard","Return Values for Get Cheermotes","Query Parameters for Get Bits Leaderboard","Query Parameters for Get Cheermotes","ID for the broadcaster who might own specialized …","Number of results to be returned. Maximum: 100. Default: …","Period over which the returned data is aggregated.","Gets a ranked list of Bits leaderboard information for an …","Retrieves the list of available Cheermotes, animated …","Indicates whether or not this emote provides a charity …","The data when this Cheermote was last updated.","Leaderboard","Order of the emotes as shown in the bits card, in …","Time period over which data is aggregated (PST time zone). …","Prefix for cheermote","Timestamp for the period over which the returned data is …","An array of Cheermotes with their metadata.","Total number of results (users) returned. This is count or …","Shows whether the emote is <code>global_first_party</code>,  …","ID of the user whose results are returned; i.e., the …","Return Values for Get Bits Leaderboard","Period over which the returned data is aggregated.","Query Parameters for Get Bits Leaderboard","Information about user in leaderboard","","","","","","","","","Create a builder for building <code>GetBitsLeaderboardRequest</code>. …","","","","","","","","","Number of results to be returned. Maximum: 100. Default: …","Number of results to be returned. Maximum: 100. Default: …","Period over which the returned data is aggregated.","","","","","","End of the date range for the returned data.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Leaderboard","Returns an new <code>GetBitsLeaderboardRequest</code>","","Get loaderboard for this period. Valid values: <code>&quot;day&quot;</code>, …","Time period over which data is aggregated (PST time zone). …","Leaderboard rank of the user.","Leaderboard score (number of Bits) of the user","","","","","Get leaderboard starting at this timestamp","Timestamp for the period over which the returned data is …","Start of the date range for the returned data.","","","","","Total number of results (users) returned. This is count or …","","","","","","","","","","","","","Get leaderboard where this user is included (if they are …","ID of the user whose results are returned; i.e., the …","ID of the user (viewer) in the leaderboard entry.","User login name.","Display name corresponding to user_id.","","","","","Custom channel cheermote","Return Values for Get Cheermotes","URLs to the same image, animated or static.","Images in sizes","Images for different themes","Types of cheermotes","Display only","Query Parameters for Get Cheermotes","Global cheermote","Global third party cheermote","Level of cheermote image","Sponsored cheermote","Information about tier of emote","Animated GIFs","","","","","","","","","","","","","","","","","Get Cheermotes in a specific broadcasters channel.","ID for the broadcaster who might own specialized …","Create a builder for building <code>GetCheermotesRequest</code>. On the …","Indicates whether or not emote information is accessible …","","","","","","","","","","","","","","","","","Hex code for the color associated with the bits of that …","Dark mode","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","ID of the emote tier. Possible tiers are: …","Structure containing both animated and static image sets, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicates whether or not this emote provides a charity …","The data when this Cheermote was last updated.","Light mode","Minimum number of bits needed to be used to hit the given …","Get available Cheermotes.","Order of the emotes as shown in the bits card, in …","Prefix for cheermote","","","","","","","","Indicates whether or not we hide the emote from the bits …","Static PNGs","An array of Cheermotes with their metadata.","","","","","","","","","","","","","","","","","","","","","","","","","Shows whether the emote is <code>global_first_party</code>,  …","","","","","","","","","URL to image in size 42 × 42","URL to image in size 28 × 28","URL to image in size 56 × 56","URL to image in size 84 × 84","URL to image in size 112 × 112","","","","","","","","","Query Parameters for Add Channel Vip","Return Values for Add Channel Vip","Return Values for Get Channel Information","Return Values for Get Channel Editors","Return Values for Get Followed Channels","Return Values for Get Channel Followers","Query Parameters for Get Channel Editors","Query Parameters for Get Channel Followers","Query Parameters for Get Channel Information","Query Parameters for Get Followed Channels","Query Parameters for Get VIPs","Return Values for Modify Channel Information","Body Parameters for Modify Channel Information","Query Parameters for Modify Channel Information","Query Parameters for Remove Channel VIP","Return Values for Remove Channel VIP","Return Values for Start Commercial","Body Parameters for Start Commercial","Query Parameters for Start Commercial","Successfully added the VIP.","204 - Channel/Stream updated successfully","Successfully removed the VIP.","Return Values for Get VIPs","Adds a VIP to the broadcaster’s chat room. …","Cursor for forward pagination: tells the server where to …","Cursor for forward pagination: tells the server where to …","The cursor used to get the next page of results. The …","The ID of the broadcaster that’s granting VIP status to …","Broadcaster’s user ID associated with the channel.","Broadcaster’s user ID associated with the channel.","ID of the channel","Twitch User ID of this channel owner","FollowedBroadcaster’s user ID associated with the …","An ID that uniquely identifies the broadcaster that this …","The ID of the broadcaster whose list of VIPs you want to …","ID of the channel","The ID of the broadcaster that’s removing VIP status …","ID of the channel requesting a commercial","Language of the channel","Language of the channel","Twitch User login of this channel owner","The broadcaster’s login name.","Twitch user display name of this channel owner","The broadcaster’s display name.","Date and time the editor was given editor permissions.","Stream delay in seconds","The number of seconds you want your broadcast buffered …","Description of the stream","Maximum number of objects to return. Maximum: 100. …","Maximum number of objects to return. Maximum: 100. …","The maximum number of items to return per page in the …","The UTC timestamp when the user started following the …","The UTC timestamp when the user started following the …","Current game ID being played on the channel","Current game ID being played on the channel. Use “0” …","Name of the game being played on the channel","Gets a list of users who have editor permissions for a …","Gets a list of users that follow the specified …","Gets channel information for users. <code>get-channel-information</code>","Gets a list of broadcasters that the specified user …","Gets a list of the channel’s VIPs. <code>get-vips</code>","Desired length of the commercial in seconds. Valid options …","Length of the triggered commercial","Provides contextual information on why the request failed","Modify channel information for users. …","Removes a VIP from the broadcaster’s chat room. …","Seconds until the next commercial can be served on this …","Starts a commercial on a specified channel. …","The tags applied to the channel.","A list of channel-defined tags to apply to the channel. To …","Title of the stream","Title of the stream. Value must not be an empty string.","The ID of the user to add as a VIP in the broadcaster’s …","User ID of the editor.","A user’s ID. Use this parameter to see whether the user …","An ID that uniquely identifies the user that’s following …","A user’s ID. Use this parameter to see whether the user …","Filters the list for specific VIPs. To specify more than …","An ID that uniquely identifies the VIP user.","The ID of the user to remove as a VIP from the …","The user’s login name.","The user’s login name.","Display name of the editor.","The user’s display name.","The user’s display name.","Query Parameters for Add Channel Vip","Return Values for Add Channel Vip","Successfully added the VIP.","","","","","The ID of the broadcaster that’s granting VIP status to …","Create a builder for building <code>AddChannelVipRequest</code>. On the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Add a channel VIP","","","","","","","","","","","","The ID of the user to add as a VIP in the broadcaster’s …","","","Return Values for Get Channel Editors","Query Parameters for Get Channel Editors","","","","","Get specified broadcasters channel editors","Broadcaster’s user ID associated with the channel.","Create a builder for building <code>GetChannelEditorsRequest</code>. On …","","","","","Date and time the editor was given editor permissions.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","User ID of the editor.","Display name of the editor.","","","Return Values for Get Channel Followers","Query Parameters for Get Channel Followers","Cursor for forward pagination: tells the server where to …","","","","","Get specified broadcasters channel editors","Broadcaster’s user ID associated with the channel.","Create a builder for building <code>GetChannelFollowersRequest</code>. …","","","","","","","","","","","Set amount of results returned per page.","Maximum number of objects to return. Maximum: 100. …","","","The UTC timestamp when the user started following the …","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Check if this user id is following the broadcaster","A user’s ID. Use this parameter to see whether the user …","An ID that uniquely identifies the user that’s following …","The user’s login name.","The user’s display name.","","","Return Values for Get Channel Information","Query Parameters for Get Channel Information","","","","","ID of the channel","Twitch User ID of this channel owner","Get channel information for a specific broadcaster.","Language of the channel","Twitch User login of this channel owner","Twitch user display name of this channel owner","Create a builder for building <code>GetChannelInformationRequest</code>.","","","","","Stream delay in seconds","Description of the stream","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Current game ID being played on the channel","Name of the game being played on the channel","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The tags applied to the channel.","Title of the stream","","","","","","","","","","","Return Values for Get Followed Channels","Query Parameters for Get Followed Channels","Cursor for forward pagination: tells the server where to …","","","","","Check if the user is following this broadcaster","FollowedBroadcaster’s user ID associated with the …","An ID that uniquely identifies the broadcaster that this …","The broadcaster’s login name.","The broadcaster’s display name.","Create a builder for building <code>GetFollowedChannels</code>. On the …","","","","","","","","","","","Set amount of results returned per page.","Maximum number of objects to return. Maximum: 100. …","","","The UTC timestamp when the user started following the …","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Get specified broadcasters channel editors","A user’s ID. Use this parameter to see whether the user …","","","Query Parameters for Get VIPs","Return Values for Get VIPs","The cursor used to get the next page of results. The …","","","","","Get channel VIPs in channel","The ID of the broadcaster whose list of VIPs you want to …","Create a builder for building <code>GetVipsRequest</code>. On the …","","","","","","","","","","","Set amount of results returned per page.","The maximum number of items to return per page in the …","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Filters the list for specific VIPs. To specify more than …","An ID that uniquely identifies the VIP user.","Filter response with these IDs","The user’s login name.","The user’s display name.","","","Return Values for Modify Channel Information","Body Parameters for Modify Channel Information","Query Parameters for Modify Channel Information","204 - Channel/Stream updated successfully","","","","","","","Modify specified broadcasters channel","ID of the channel","Language of the channel","Language of the channel","Create a builder for building …","Create a builder for building <code>ModifyChannelInformationBody</code>.","","","","","","","","The number of seconds you want your broadcast buffered …","The number of seconds you want your broadcast buffered …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Current game ID being played on the channel. Use “0” …","Current game ID being played on the channel. Use “0” …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Data to set on the stream.","","","","","A list of channel-defined tags to apply to the channel. To …","A list of channel-defined tags to apply to the channel. To …","Title of the stream. Value must not be an empty string.","Title of the stream. Value must not be an empty string.","","","","","","","","","","","","","","","","","Query Parameters for Remove Channel VIP","Return Values for Remove Channel VIP","Successfully removed the VIP.","","","","","The ID of the broadcaster that’s removing VIP status …","Create a builder for building <code>RemoveChannelVipRequest</code>. On …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Remove channel VIP","","","","","","","","","","","","The ID of the user to remove as a VIP from the …","","","Return Values for Start Commercial","Body Parameters for Start Commercial","Query Parameters for Start Commercial","","","","","","","ID of the channel requesting a commercial","Create a builder for building <code>StartCommercialBody</code>. On the …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Desired length of the commercial in seconds. Valid options …","Length of the triggered commercial","Provides contextual information on why the request failed","Create a new <code>StartCommercialRequest</code>","Start a commercial in this broadcasters channel","Seconds until the next commercial can be served on this …","","","","","","","","","","","","","","","","","","","","Return Values for Get Charity Campaign","Return Values for Get Charity Campaign Donations","Query Parameters for Get Charity Campaign Donations","Query Parameters for Get Charity Campaign","The cursor used to get the next page of results. The …","An object that contains the amount of money that the user …","The ID of the broadcaster that’s actively running a …","An ID that uniquely identifies the broadcaster that’s …","The ID of the broadcaster that’s currently running a …","The broadcaster’s login name.","The broadcaster’s display name.","An ID that identifies the charity campaign that the …","A description of the charity.","A URL to an image of the charity’s logo. The image’s …","The charity’s name.","A URL to the charity","The current amount of donations that the campaign has …","The maximum number of items to return per page in the …","Gets information about the charity campaign that a …","Gets the list of donations that users have made to the …","An ID that uniquely identifies the charity campaign.","An ID that identifies the donation. The ID is unique …","An object that contains the amount of money that the …","An ID that identifies a user that donated money to the …","The user’s login name.","The user’s display name.","Return Values for Get Charity Campaign","Query Parameters for Get Charity Campaign","","","","","Gets information about the charity campaign that a …","The ID of the broadcaster that’s actively running a …","An ID that uniquely identifies the broadcaster that’s …","The broadcaster’s login name.","The broadcaster’s display name.","Create a builder for building <code>GetCharityCampaignRequest</code>. …","A description of the charity.","A URL to an image of the charity’s logo. The image’s …","The charity’s name.","A URL to the charity","","","","","The current amount of donations that the campaign has …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","An ID that uniquely identifies the charity campaign.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","An object that contains the amount of money that the …","","","","","","","","","","","Return Values for Get Charity Campaign Donations","Query Parameters for Get Charity Campaign Donations","The cursor used to get the next page of results. The …","An object that contains the amount of money that the user …","","","","","Gets information about the charity campaign that a …","The ID of the broadcaster that’s currently running a …","Create a builder for building …","An ID that identifies the charity campaign that the …","","","","","","","","","","","Set amount of results returned per page.","The maximum number of items to return per page in the …","","","Returns the argument unchanged.","Returns the argument unchanged.","An ID that identifies the donation. The ID is unique …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","An ID that identifies a user that donated money to the …","The user’s login name.","The user’s display name.","","","Valid colors for announcements","An error for an invalid AnnouncementColor","A set of badges","The color blue","A chat emote","A chat Badge","Chat settings","Return Values for Get Chatters","Query Parameters for Get Channel Chat Badges","Query Parameters for Get Channel Emotes","Query Parameters for Get Chat Settings","Query Parameters for Get Chatters","Query Parameters for Get Channel Emotes","Query Parameters for Get Global Chat Badges","Query Parameters for Get Channel Emotes","Query Parameters for Get Chatters","A chat emote","The color green","The color orange","The primary color for the broadcaster","The color purple","Query Parameters for Send A Shoutout","Return Values for Send A Shoutout","Body Parameters for Send Chat Announcement","Query Parameters for Send Chat Announcement","Return Values for Send Chat Announcement","Shoutout successful","Successfully sent the announcement.","Successfully updated the user’s chat color.","Body Parameters for Update Chat Settings","Query Parameters for Update Chat Settings","Query Parameters for Update Chat Settings","Return Values for Update Chat Settings","Return Values for Get Chatters","The cursor used to get the next page of results. The …","","","","","","","","","","","","","","","The broadcaster whose chat badges are being requested. …","The broadcaster whose emotes are being requested.","The ID of the broadcaster whose chat settings you want to …","The ID of the broadcaster whose list of chatters you want …","The ID of the broadcaster that owns the chat room to send …","The ID of the broadcaster whose chat settings you want to …","The ID of the broadcaster specified in the request.","","","","","","","","","","","","","","","The Hex color code that the user uses in chat for their …","The color used to highlight the announcement. Possible …","The color to use for the user’s name in chat.","","","","","","","","A Boolean value that determines whether chat messages must …","A Boolean value that determines whether chat messages must …","The broadcaster whose emotes are being requested. Minimum: …","ID of the emote set the emote belongs to.","The type of emote.","","","","","","","","","","","","","The maximum number of items to return per page in the …","","","","","","","","","A Boolean value that determines whether the broadcaster …","A Boolean value that determines whether the broadcaster …","The length of time, in minutes, that the followers must …","The length of time, in minutes, that the followers must …","The formats that the emote is available in.","The formats that the emote is available in.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The ID of the broadcaster that’s sending the Shoutout.","Gets a list of custom chat badges that can be used in chat …","Gets all custom emotes for a specific Twitch channel …","Gets the broadcaster’s chat settings. <code>get-chat-settings</code>","Gets the list of users that are connected to the specified …","Gets all Twitch emotes for one or more specific emote sets.","Gets a list of chat badges that can be used in chat for …","Gets all global emotes. Global emotes are Twitch-specific …","Gets the color used for the user’s name in chat. …","ID of the chat badge version.","ID of the emote.","ID of the emote.","URL to png of size 28x28","URL to png of size 56x56","URL to png of size 112x112","Object of image URLs for the emote.","Object of image URLs for the emote.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The announcement to make in the broadcaster’s chat room. …","Required only to access the <code>non_moderator_chat_delay</code> or …","The ID of the moderator or the specified broadcaster …","The ID of the broadcaster or a user that is one of the …","The ID of a user who has permission to moderate the …","The ID of a user that has permission to moderate the …","The ID of the moderator specified in the request for chat …","Name of the emote a viewer types into Twitch chat for the …","Name of the emote a viewer types into Twitch chat for the …","A Boolean value that determines whether the broadcaster …","A Boolean value that determines whether the broadcaster …","The amount of time, in seconds, that messages are delayed …","The amount of time, in seconds, that messages are delayed …","","The sizes that the emote is available in.","The sizes that the emote is available in.","Sends a Shoutout to the specified broadcaster. …","Sends an announcement to the broadcaster’s chat room. …","","","","","","","ID for the chat badge set.","A Boolean value that determines whether the broadcaster …","A Boolean value that determines whether the broadcaster …","The amount of time, in seconds, that users need to wait …","The amount of time, in seconds, that users need to wait …","A Boolean value that determines whether only users that …","A Boolean value that determines whether only users that …","The background themes that the emote is available in.","The background themes that the emote is available in.","If the emote_type is “subscriptions”, this indicates …","The ID of the broadcaster that’s receiving the Shoutout.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A Boolean value that determines whether the broadcaster …","A Boolean value that determines whether the broadcaster …","Updates the broadcaster’s chat settings. …","Updates the color used for the user’s name in chat.","Create an emote builder for this emote.","The ID of a user that’s connected to the broadcaster’s …","The ID of the user whose color you want to get.","The ID of the user.","The ID of the user whose chat color you want to update.","The user’s login name.","The user’s login name.","The user’s display name.","The user’s display name.","Contains chat badge objects for the set.","","","","","","","","Query Parameters for Get Channel Chat Badges","Return Values for Get Channel Chat Badges","","","Get chat badges for the specified broadcaster.","The broadcaster whose chat badges are being requested. …","Create a builder for building <code>GetChannelChatBadgesRequest</code>. …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Query Parameters for Get Channel Emotes","Return Values for Get Channel Emotes","","","Get emotes in a specific broadcasters channel.","The broadcaster whose emotes are being requested.","Create a builder for building <code>GetChannelEmotesRequest</code>. On …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Query Parameters for Get Chat Settings","","","Get chat settings for broadcasters channel","The ID of the broadcaster whose chat settings you want to …","Create a builder for building <code>GetChatSettingsRequest</code>. On …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The ID of a user that has permission to moderate the …","Required only to access the <code>non_moderator_chat_delay</code> or …","","","","","","","","Return Values for Get Chatters","Query Parameters for Get Chatters","The cursor used to get the next page of results. The …","","","","","The ID of the broadcaster whose list of chatters you want …","Create a builder for building <code>GetChattersRequest</code>. On the …","","","","","","","","","","","Set amount of results returned per page.","The maximum number of items to return per page in the …","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The ID of the moderator or the specified broadcaster …","Get chatters in broadcasters channel","","","","","","","","","","","","The ID of a user that’s connected to the broadcaster’s …","The user’s login name.","The user’s display name.","","","Return Values for Get Channel Emotes","Query Parameters for Get Channel Emotes","","","","","Create a builder for building <code>GetEmoteSetsRequest</code>. On the …","","","","","","","The broadcaster whose emotes are being requested. Minimum: …","ID of the emote set the emote belongs to.","Get emotes in these sets","The type of emote.","","","","","","","The formats that the emote is available in.","Returns the argument unchanged.","Returns the argument unchanged.","Emote ID.","Object of image URLs for the emote.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Name of the emote a viewer types into Twitch chat for the …","User ID of the broadcaster who owns the emote.","The sizes that the emote is available in.","","","The background themes that the emote is available in.","","","","","","","","","Create an emote builder for this emote.","","","Query Parameters for Get Global Chat Badges","Return Values for Get Global Chat Badges","","","Create a builder for building <code>GetGlobalChatBadgesRequest</code>. …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Get global chat badges","","","","","","","Return Values for Get Channel Emotes","Query Parameters for Get Channel Emotes","","","Create a builder for building <code>GetGlobalEmotesRequest</code>. On …","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Get global emotes","","","","","","","Query Parameters for Get Chatters","Return Values for Get Chatters","","","","","Create a builder for building <code>GetUserChatColorRequest</code>. On …","","","","","The Hex color code that the user uses in chat for their …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","The ID of the user whose color you want to get.","The ID of the user.","Get chat colors of specified users","The user’s login name.","The user’s display name.","","","Query Parameters for Send A Shoutout","Return Values for Send A Shoutout","Shoutout successful","","","","","Create a builder for building <code>SendAShoutoutRequest</code>. On the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","The ID of the broadcaster that’s sending the Shoutout.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The ID of the broadcaster or a user that is one of the …","Create a new <code>SendAShoutoutRequest</code>","","","The ID of the broadcaster that’s receiving the Shoutout.","","","","","","","","","","","Body Parameters for Send Chat Announcement","Query Parameters for Send Chat Announcement","Return Values for Send Chat Announcement","Successfully sent the announcement.","","","","","","","The ID of the broadcaster that owns the chat room to send …","Create a builder for building <code>SendChatAnnouncementRequest</code>. …","Create a builder for building <code>SendChatAnnouncementBody</code>. On …","","","","","","","The color used to highlight the announcement. Possible …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The announcement to make in the broadcaster’s chat room. …","The ID of a user who has permission to moderate the …","Send announcement in channel as this moderator","Create a new announcement with specified color","","","","","","","","","","","","","","","","","","","","","Body Parameters for Update Chat Settings","Query Parameters for Update Chat Settings","Return Values for Update Chat Settings","","","","","The ID of the broadcaster whose chat settings you want to …","Create a builder for building <code>UpdateChatSettingsRequest</code>. …","Create a builder for building <code>UpdateChatSettingsBody</code>. On …","","","","","","","","A Boolean value that determines whether chat messages must …","","","","","","A Boolean value that determines whether the broadcaster …","The length of time, in minutes, that the followers must …","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The ID of a user that has permission to moderate the …","Update the chat settings for the specified broadcaster as …","A Boolean value that determines whether the broadcaster …","The amount of time, in seconds, that messages are delayed …","","","","A Boolean value that determines whether the broadcaster …","The amount of time, in seconds, that users need to wait …","A Boolean value that determines whether only users that …","","","","","","","","","","A Boolean value that determines whether the broadcaster …","","","Successfully updated the user’s chat color.","Query Parameters for Update Chat Settings","Return Values for Update Chat Settings","","","","","Create a builder for building <code>UpdateUserChatColorRequest</code>. …","","","","","The color to use for the user’s name in chat.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Update the users chat color","","","","","","","","","","","","The ID of the user whose chat color you want to update.","","","Client for Helix or the New Twitch API","Retrieve a clone of the <code>HttpClient</code> inside this <code>HelixClient</code>","Retrieve a reference of the <code>HttpClient</code> inside this …","Create a new <code>HelixClient</code> with a default <code>HttpClient</code>","Request on a valid <code>RequestDelete</code> endpoint","Request on a valid <code>RequestGet</code> endpoint","Request on a valid <code>RequestPatch</code> endpoint","Request on a valid <code>RequestPost</code> endpoint","Request on a valid <code>RequestPut</code> endpoint","Create a new client with an existing client","Return Values for Get Clips","Query Parameters for Create Clip","Return Value for Create Clip","Query Parameters for Get Clips","Cursor for forward pagination: tells the server where to …","Cursor for backward pagination: tells the server where to …","ID of the broadcaster for whom clips are returned. The …","User ID of the stream from which the clip was created.","The ID of the broadcaster whose stream you want to create …","Display name corresponding to broadcaster_id.","Create Clip using Broadcaster ID (one only) <code>create-clip</code>","Date when the clip was created.","ID of the user who created the clip.","Display name corresponding to creator_id.","Duration of the Clip in seconds (up to 0.1 precision).","A URL that you can use to edit the clip’s title, …","URL to embed the clip.","Ending date/time for returned clips, in RFC3339 format. …","Maximum number of objects to return. Maximum: 100. …","ID of the game for which clips are returned. The number of …","ID of the game assigned to the stream when the clip was …","Gets clip information by clip ID (one or more), …","A Boolean value that determines whether the API captures …","ID of the clip being queried. Limit: 100.","ID of the clip being queried.","ID of the created clip.","Language of the stream from which the clip was created.","Starting date/time for returned clips, in RFC3339 format. …","URL of the clip thumbnail.","Title of the clip.","URL where the clip can be viewed.","ID of the video from which the clip was created.","Number of times the clip has been viewed.","The zero-based offset, in seconds, to where the clip …","Query Parameters for Create Clip","Return Value for Create Clip","","","","","Create a new <code>CreateClipRequest</code> with the given …","The ID of the broadcaster whose stream you want to create …","Create a builder for building <code>CreateClipRequest</code>. On the …","","","","","","","A URL that you can use to edit the clip’s title, …","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Sets the has_delay parameter","A Boolean value that determines whether the API captures …","ID of the created clip.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Return Values for Get Clips","Query Parameters for Get Clips","Cursor for forward pagination: tells the server where to …","Cursor for backward pagination: tells the server where to …","","","","","Broadcaster for whom clips are returned.","ID of the broadcaster for whom clips are returned. The …","User ID of the stream from which the clip was created.","Display name corresponding to broadcaster_id.","Create a builder for building <code>GetClipsRequest</code>. On the …","IDs of clips being queried","","","","","Date when the clip was created.","ID of the user who created the clip.","Display name corresponding to creator_id.","","","Duration of the Clip in seconds (up to 0.1 precision).","URL to embed the clip.","An empty request","Ending date/time for the returned clips","Ending date/time for returned clips, in RFC3339 format. …","","","","Set amount of results returned per page.","Maximum number of objects to return. Maximum: 100. …","","","Returns the argument unchanged.","Returns the argument unchanged.","Game for which clips are returned.","ID of the game for which clips are returned. The number of …","ID of the game assigned to the stream when the clip was …","ID of the clip being queried. Limit: 100.","ID of the clip being queried.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Language of the stream from which the clip was created.","","","","Ending date/time for the returned clips","Starting date/time for returned clips, in RFC3339 format. …","URL of the clip thumbnail.","Title of the clip.","","","","","","","","","URL where the clip can be viewed.","ID of the video from which the clip was created.","Number of times the clip has been viewed.","The zero-based offset, in seconds, to where the clip …","","","Return Values for Create EventSub Subscription","Body Parameters for Create EventSub Subscription","Query Parameters for Create EventSub Subscription","Return Values for Delete EventSub Subscriptions","Query Parameters for Delete EventSub Subscriptions","Return Values for Get EventSub Subscriptions","Query Parameters for Get EventSub Subscriptions","204 - Subscription deleted","Cursor for forward pagination","JSON object specifying custom parameters for the …","How much the subscription counts against your limit.","Creates an EventSub subscription.","RFC3339 timestamp indicating when the subscription was …","Delete an EventSub subscription.","Maximum number of objects to return. Maximum: 100. …","Get a list of your EventSub subscriptions.","ID of the subscription created.","The subscription ID for the subscription you want to …","The maximum total cost allowed for all of the …","The maximum total cost allowed for all of the …","Status of the subscription.","Include this parameter to filter subscriptions by their …","Subscription that will be created","Array containing subscriptions.","Total number of subscriptions for the client ID that made …","Total number of subscriptions for the client ID that made …","Total cost of all the subscriptions for the client ID that …","Total cost of all the subscriptions for the client ID that …","The notification delivery specific information","JSON object indicating the notification delivery specific …","The category of the subscription that was created.","Filter subscriptions by subscription type (e.g., …","Filter subscriptions by user ID.","The version of the subscription type that was created.","Return Values for Create EventSub Subscription","Body Parameters for Create EventSub Subscription","Query Parameters for Create EventSub Subscription","","","","","","","Create a builder for building …","Create a builder for building …","","","","","","","JSON object specifying custom parameters for the …","How much the subscription counts against your limit.","RFC3339 timestamp indicating when the subscription was …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","ID of the subscription created.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The maximum total cost allowed for all of the …","Create a new eventsub subscription","Create a new <code>CreateEventSubSubscriptionBody</code>","","","","Status of the subscription.","Subscription that will be created","","","","Total number of subscriptions for the client ID that made …","Total cost of all the subscriptions for the client ID that …","The notification delivery specific information","JSON object indicating the notification delivery specific …","","","","","","","","The category of the subscription that was created.","","","","The version of the subscription type that was created.","","","","Return Values for Delete EventSub Subscriptions","Query Parameters for Delete EventSub Subscriptions","204 - Subscription deleted","","","","","Create a builder for building …","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Delete this eventsub subscription.","The subscription ID for the subscription you want to …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Return Values for Get EventSub Subscriptions","Query Parameters for Get EventSub Subscriptions","Cursor for forward pagination","","","","","Create a builder for building …","","","","","","","","","","","Get eventsub subscriptions by this type","Maximum number of objects to return. Maximum: 100. …","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The maximum total cost allowed for all of the …","","","","","Get eventsub subscriptions by this status","Include this parameter to filter subscriptions by their …","Array containing subscriptions.","","","Total number of subscriptions for the client ID that made …","Total cost of all the subscriptions for the client ID that …","","","","","Filter subscriptions by subscription type (e.g., …","","","Filter subscriptions by user ID.","","","A game or category as defined by Twitch","Query Parameters for Get Games","Query Parameters for Get Top Games","Cursor for forward pagination: tells the server where to …","Cursor for backward pagination: tells the server where to …","Template URL for the game’s box art.","Maximum number of objects to return. Maximum: 100. …","Gets game information by game ID or name. <code>get-games</code>","Gets games sorted by number of current viewers on Twitch, …","Game or category ID.","Game ID. At most 100 id values can be specified.","The ID that IGDB uses to identify this game.","Game name.","Game name. The name must be an exact match. For instance, …","Return Values for Get Games","Query Parameters for Get Games","","","Create a builder for building <code>GetGamesRequest</code>. On the …","","","","","","","Returns the argument unchanged.","Game ID. At most 100 id values can be specified.","Get games with specific exact id match.","Calls <code>U::from(self)</code>.","Game name. The name must be an exact match. For instance, …","Get games with specific exact name match.","","","","","","","Return Values for Get Top Games","Query Parameters for Get Top Games","Cursor for forward pagination: tells the server where to …","Cursor for backward pagination: tells the server where to …","","","Create a builder for building <code>GetTopGamesRequest</code>. On the …","","","","","","","Set amount of results returned per page.","Maximum number of objects to return. Maximum: 100. …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Return Values for Get Creator Goals","Query Parameters for Get Creator Goals","Must match the User ID in the Bearer token.","An ID that uniquely identifies the broadcaster.","The broadcaster’s user handle.","The broadcaster’s display name.","The UTC timestamp in RFC 3339 format, which indicates when …","The current value.","Cursor for forward pagination: tells the server where to …","A description of the goal, if specified. The description …","Maximum number of objects to return. Maximum: 100. …","Gets the broadcaster’s list of active goals. Use this to …","Retreive a single event by event ID","An ID that uniquely identifies this goal.","The goal’s target value. For example, if the broadcaster …","The type of goal.","Return Values for Get Creator Goals","Query Parameters for Get Creator Goals","","","","","Gets the broadcaster’s list of active goals.","Must match the User ID in the Bearer token.","An ID that uniquely identifies the broadcaster.","The broadcaster’s user handle.","The broadcaster’s display name.","Create a builder for building <code>GetCreatorGoalsRequest</code>. On …","","","","","The UTC timestamp in RFC 3339 format, which indicates when …","The current value.","Cursor for forward pagination: tells the server where to …","A description of the goal, if specified. The description …","","","","","","","Set amount of results returned per page.","Maximum number of objects to return. Maximum: 100. …","","","Returns the argument unchanged.","Returns the argument unchanged.","Retreive a single event by event ID","An ID that uniquely identifies this goal.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","The goal’s target value. For example, if the broadcaster …","","","","","","","The type of goal.","","","","","Bits","A contribution to a hype train","Type of contribution to a hype train","Query Parameters for Get Hype Train Events","Covers other contribution methods not listed.","Channel Subscriptions. Either gifted or not.","","","","","Must match the User ID in the Bearer token.","","","","","Cursor for forward pagination: tells the server where to …","","","","","","","Maximum number of objects to return. Maximum: 100. …","","","Returns the argument unchanged.","Returns the argument unchanged.","Gets the information of the most recent Hype Train of the …","Retreive a single event by event ID","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","The total contributed.","","","","","Type of contribution. Valid values include bits, …","","","The ID of the user.","","","Query Parameters for Get Hype Train Events","Return Values for Get Hype Train Events","Event data for","Type of Hype Train event","Progression","","","","","","","","","Get hypetrain evens","Must match the User ID in the Bearer token.","The requested broadcaster ID.","Create a builder for building <code>GetHypeTrainEventsRequest</code>. …","","","","","","","","","RFC3339 formatted timestamp of when another hype train can …","Cursor for forward pagination: tells the server where to …","","","","","","","","","","","","","Returns <code>broadcaster_id</code>, <code>broadcaster_name</code>, <code>user_id</code>, …","RFC3339 formatted timestamp for events.","Displays hypetrain.{event_name}, currently only …","The time at which the hype train expires. The expiration …","Maximum number of objects to return. Maximum: 100. …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The number of points required to reach the next level.","Retreive a single event by event ID","Event ID","The distinct ID of this Hype Train","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The most recent contribution.","Current level of hype train event.","","","","","","The timestamp at which the hype train started.","","","","","The contributors with the most points contributed.","Total points contributed to the hype train.","","","","","","","","","","","","","Returns the version of the endpoint.","","","","","Body Parameters for Add Blocked Term","Query Parameters for Add Blocked Term","Query Parameters for Add Channel Moderator","Return Values for Add Channel Moderator","Allow the message","Action to take for a message.","Return Values for Ban User","Body Parameters for Ban User","Query Parameters for Ban User","Return Values for Get Banned Users","A blocked term in automod","Return Values for Check AutoMod Status","Body Parameters for Check AutoMod Status","Query Parameters for Check AutoMod Status","Query Parameters for Delete Chat Messages","Return Values for Delete Chat Messages","Deny the message","Query Parameters for Get Banned Users","Query Parameters for Get Moderators","Query Parameters for Get Shield Mode Status","Information about a shield mode","Return Values for Manage Held AutoMod Messages","Body Parameters for Manage Held AutoMod Messages","Query Parameters for Manage Held AutoMod Messages","Return Values for Get Moderators","Return Values for Remove Blocked Terms","Query Parameters for Remove Blocked Terms","Query Parameters for Remove Channel Moderator","Return Values for Remove Channel Moderator","Return Values for Get Shield Mode Status","Successfully added the moderator.","Successfully removed the specified messages.","Successfully approved or denied the message","204 - Term removed successfully.","Successfully removed the moderator.","Unban was successful","Query Parameters for Unban User","Return Values for Unban User","The action to take for the message. Must be “ALLOW” or …","Adds a word or phrase to the broadcaster’s list of …","Adds a moderator to the broadcaster’s moderation room. …","Cursor for forward pagination: tells the server where to …","Cursor for forward pagination: tells the server where to …","Bans a user from participating in a broadcaster’s chat …","Cursor for backward pagination: tells the server where to …","","","The ID of the broadcaster that owns the list of blocked …","The ID of the broadcaster that owns the chat room.","The ID of the broadcaster whose chat room the user is …","The broadcaster whose chat room the user was banned from …","Must match the User ID in the Bearer token.","The ID of the broadcaster that owns the chat room to …","Must match the User ID in the Bearer token.","Must match the User ID in the Bearer token.","The ID of the broadcaster whose Shield Mode activation …","The ID of the broadcaster that owns the list of blocked …","The ID of the broadcaster that owns the chat room.","The ID of the broadcaster whose chat room the user is …","The broadcaster that owns the list of blocked terms.","Determines whether a string message meets the channel’s …","","","The UTC date and time (in RFC3999 format) when the ban was …","The UTC date and time (in RFC3339 format) of when the term …","Removes a single chat message or all chat messages from …","","Duration of the (optional) timeout in seconds.","The UTC date and time (in RFC3339 format) that the timeout …","","","RFC3339 formatted timestamp for timeouts; empty string for …","The UTC date and time (in RFC3339 format) of when the …","Number of values to be returned per page. Limit: 100. …","Number of values to be returned per page. Limit: 100. …","","Returns the argument unchanged.","Returns all banned and timed-out users in a channel. …","Gets the broadcaster’s list of non-private, blocked …","Returns all moderators in a channel. <code>get-moderators</code>","Gets the broadcaster’s Shield Mode activation status. …","The ID of the blocked term you want to delete.","An ID that uniquely identifies this blocked term.","Calls <code>U::from(self)</code>.","A Boolean value that determines whether Shield Mode is …","Indicates if this message meets AutoMod requirements.","The UTC timestamp (in RFC3339 format) of when Shield Mode …","Information about the last activated shield mode","Allow or deny a message that was held for review by …","The ID of the message to remove.","The ID of a user that has permission to moderate the …","The ID of the user to add as a moderator in the …","The ID of a user that has permission to moderate the …","The moderator that banned or put the user in the timeout.","The ID of a user that has permission to moderate the …","User ID of the moderator who initiated the ban.","The ID of the broadcaster or a user that is one of the …","An ID that identifies the moderator that last activated …","The ID of a user that has permission to moderate the …","The ID of the user to remove as a moderator from the …","The ID of a user that has permission to moderate the …","The moderator that blocked the word or phrase from being …","Login of the moderator who initiated the ban.","The moderator’s login name.","Display name of the moderator who initiated the ban.","The moderator’s display name.","Developer-generated identifier for mapping messages to …","The msg_id passed in the body of the POST message. Maps …","ID of the message to be allowed or denied. These message …","Message text.","The reason the user is being banned or put in a timeout. …","The reason for the ban if provided by the moderator.","Removes the word or phrase that the broadcaster is …","Removes a moderator from the broadcaster’s chat room. …","","The word or phrase to block from being used in the …","The blocked word or phrase.","","","","","Removes the ban or timeout that was placed on the …","Activates or deactivates the broadcaster’s Shield Mode.","The UTC date and time (in RFC3339 format) of when the term …","The ID of the user to ban or put in a timeout.","The user that was banned or was put in a timeout.","User ID of the sender.","Filters the results and only returns a status object for …","User ID of a user who has been banned.","Filters the results and only returns a status object for …","User ID of a moderator in the channel.","The moderator who is approving or rejecting the held …","The ID of the user to remove the ban or timeout from.","Login of a user who has been banned.","Login of a moderator in the channel.","Display name of a user who has been banned.","Display name of a moderator in the channel.","","Body Parameters for Add Blocked Term","Query Parameters for Add Blocked Term","Return Values for Add Blocked Term","","","","","The ID of the broadcaster that owns the list of blocked …","Create a builder for building <code>AddBlockedTermRequest</code>. On …","Create a builder for building <code>AddBlockedTermBody</code>. On the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The ID of a user that has permission to moderate the …","Where to add blocked term","Create a new <code>AddBlockedTermBody</code>","","","The word or phrase to block from being used in the …","","","","","","","","","","","","Query Parameters for Add Channel Moderator","Return Values for Add Channel Moderator","Successfully added the moderator.","","","","","The ID of the broadcaster that owns the chat room.","Create a builder for building <code>AddChannelModeratorRequest</code>. …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The ID of the user to add as a moderator in the …","Add moderator on channel","","","","","","","","","","","","","","Return Values for Ban User","Body Parameters for Ban User","Query Parameters for Ban User","","","","","","","The ID of the broadcaster whose chat room the user is …","The broadcaster whose chat room the user was banned from …","Create a builder for building <code>BanUserRequest</code>. On the …","Create a builder for building <code>BanUserBody</code>. On the builder, …","","","","","","","The UTC date and time (in RFC3999 format) when the ban was …","","","","Duration of the (optional) timeout in seconds.","The UTC date and time (in RFC3339 format) that the timeout …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The ID of a user that has permission to moderate the …","The moderator that banned or put the user in the timeout.","Ban a user on this channel","Create a new <code>BanUserBody</code>","","The reason the user is being banned or put in a timeout. …","","","","","","","","","","","","","","","","","The ID of the user to ban or put in a timeout.","The user that was banned or was put in a timeout.","","","","Return Values for Check AutoMod Status","Body Parameters for Check AutoMod Status","Query Parameters for Check AutoMod Status","","","","","","","Check automod status in this broadcasters channel.","Must match the User ID in the Bearer token.","Create a builder for building <code>CheckAutoModStatusRequest</code>. …","Create a builder for building <code>CheckAutoModStatusBody</code>. On …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicates if this message meets AutoMod requirements.","Developer-generated identifier for mapping messages to …","The msg_id passed in the body of the POST message. Maps …","Message text.","Create a new <code>CheckAutoModStatusBody</code>","","","","","","","","","","","","","","","","User ID of the sender.","","","","Query Parameters for Delete Chat Messages","Return Values for Delete Chat Messages","Successfully removed the specified messages.","","","","","The ID of the broadcaster that owns the chat room to …","Create a builder for building <code>DeleteChatMessagesRequest</code>. …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A specific message to remove","The ID of the message to remove.","The ID of a user that has permission to moderate the …","Remove chat message(s)","","","","","","","","","","","","","","Return Values for Get Banned Users","Query Parameters for Get Banned Users","Cursor for forward pagination: tells the server where to …","Cursor for backward pagination: tells the server where to …","","","","","Get banned users in a broadcasters channel.","Must match the User ID in the Bearer token.","Create a builder for building <code>GetBannedUsersRequest</code>. On …","","","","","","","","","","","RFC3339 formatted timestamp for timeouts; empty string for …","Set amount of results returned per page.","Number of values to be returned per page. Limit: 100. …","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","User ID of the moderator who initiated the ban.","Login of the moderator who initiated the ban.","Display name of the moderator who initiated the ban.","The reason for the ban if provided by the moderator.","","","","","","","","","","","","Filters the results and only returns a status object for …","User ID of a user who has been banned.","Login of a user who has been banned.","Display name of a user who has been banned.","Check if supplied users are banned.","","","Query Parameters for Get Blocked Terms","Return Values for Get Blocked Terms","The cursor used to get the next page of results. The …","","","The ID of the broadcaster whose blocked terms you’re …","Create a builder for building <code>GetBlockedTermsRequest</code>. On …","","","","","","Set amount of results returned per page.","The maximum number of blocked terms to return per page in …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","The ID of a user that has permission to moderate the …","Get blocked terms in a broadcasters channel as specified …","","","","","","","","Query Parameters for Get Moderators","Return Values for Get Moderators","Cursor for forward pagination: tells the server where to …","","","","","Get moderators in a broadcasters channel.","Must match the User ID in the Bearer token.","Create a builder for building <code>GetModeratorsRequest</code>. On the …","","","","","","","","","","","Set amount of results returned per page.","Number of values to be returned per page. Limit: 100. …","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Filters the results and only returns a status object for …","User ID of a moderator in the channel.","Filter the results for specific users.","Login of a moderator in the channel.","Display name of a moderator in the channel.","","","Query Parameters for Get Shield Mode Status","Information about a shield mode","Return Values for Get Shield Mode Status","","","","","","","The ID of the broadcaster whose Shield Mode activation …","Create a builder for building <code>GetShieldModeStatusRequest</code>. …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A Boolean value that determines whether Shield Mode is …","The UTC timestamp (in RFC3339 format) of when Shield Mode …","Information about the last activated shield mode","The ID of the broadcaster or a user that is one of the …","An ID that identifies the moderator that last activated …","The moderator’s login name.","The moderator’s display name.","Get shield mode status in a broadcasters channel as …","","","","","","","","","","","","","","","","","","","","Allow the message","Action to take for a message.","Deny the message","Return Values for Manage Held AutoMod Messages","Body Parameters for Manage Held AutoMod Messages","Query Parameters for Manage Held AutoMod Messages","Successfully approved or denied the message","The action to take for the message. Must be “ALLOW” or …","","","","","","","","","Create a builder for building …","Create a builder for building <code>ManageHeldAutoModMessagesBody</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","ID of the message to be allowed or denied. These message …","Create a new <code>ManageHeldAutoModMessagesRequest</code>","Create a new <code>ManageHeldAutoModMessagesBody</code>","","","","","","","","","","","","","","","","","","","","","","","The moderator who is approving or rejecting the held …","","","","","Return Values for Remove Blocked Terms","Query Parameters for Remove Blocked Terms","204 - Term removed successfully.","","","","","The ID of the broadcaster that owns the list of blocked …","Create a builder for building <code>RemoveBlockedTermRequest</code>. On …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","The ID of the blocked term you want to delete.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The ID of a user that has permission to moderate the …","Remove blocked term","","","","","","","","","","","","","","Query Parameters for Remove Channel Moderator","Return Values for Remove Channel Moderator","Successfully removed the moderator.","","","","","The ID of the broadcaster that owns the chat room.","Create a builder for building <code>RemoveChannelModeratorRequest</code>…","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The ID of the user to remove as a moderator from the …","Remove moderator","","","","","","","","","","","","","","Unban was successful","Query Parameters for Unban User","Return Values for Unban User","","","","","The ID of the broadcaster whose chat room the user is …","Create a builder for building <code>UnbanUserRequest</code>. On the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The ID of a user that has permission to moderate the …","Remove the ban or timeout that was placed on the specified …","","","","","","","","","","","","The ID of the user to remove the ban or timeout from.","","","Return Values for Get Shield Mode Status","Body Parameters for Update Shield Mode Status","Query Parameters for Update Shield Mode Status","","","","","The ID of the broadcaster whose Shield Mode you want to …","Create a builder for building <code>UpdateShieldModeStatusRequest</code>…","Create a builder for building <code>UpdateShieldModeStatusBody</code>. …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Set status of shield mode","A Boolean value that determines whether Shield Mode is …","A Boolean value that determines whether to activate Shield …","Information about the last activated shield mode","The ID of the broadcaster or a user that is one of the …","Set the shield mode status on specified channel as the …","","","","","","","","","","","","","","","Cancelled reward - the reward has been cancelled before …","Body Parameters for Create Custom Rewards","Query Parameters for Create Custom Rewards","Return Values for Create Custom Rewards","Return Values for Get Custom Reward","Return Values for Get Custom Reward Redemption","Custom reward redemption statuses: UNFULFILLED, FULFILLED …","Return Values for Delete CustomReward","Query Parameters for Delete CustomReward","Fulfilled reward - the user has claimed it and the reward …","Query Parameters for Get Custom Reward Redemption","Query Parameters for Get Custom Reward","Reward deleted","200 - OK","Unfulfilled reward - the user has claimed it but it is …","Body Parameters for Update Custom Rewards","Query Parameters for Update Custom Rewards","Body Parameters for Update Redemption Status","FIXME: Returns an object. Return Values for Update …","Query Parameters for Update Redemption Status","Cursor for forward pagination: tells the server where to …","Custom background color for the reward. Format: Hex with # …","Custom background color for the reward. Format: Hex with # …","Custom background color for the reward. Format: Hex with # …","","","Provided broadcaster_id must match the user_id in the auth …","Provided broadcaster_id must match the user_id in the auth …","Provided broadcaster_id must match the user_id in the auth …","ID of the channel the reward is for","Provided broadcaster_id must match the user_id in the auth …","The id of the broadcaster that the reward belongs to.","Provided broadcaster_id must match the user_id in the auth …","Provided broadcaster_id must match the user_id in the auth …","Login of the channel the reward is for","Broadcaster’s user login name.","Display name of the channel the reward is for","The display name of the broadcaster that the reward …","","","Timestamp of the cooldown expiration. Null if the reward …","The cost of the reward","The cost of the reward","The cost of the reward","Adds a specified user to the followers of a specified …","Set of default images of 1x, 2x and 4x sizes for the …","Deletes a Custom Reward on a channel. <code>delete-custom-reward</code>","","","","Number of results to be returned when getting the …","","Returns the argument unchanged.","Returns a list of Custom Reward objects for the Custom …","Returns Custom Reward Redemption objects for a Custom …","The cooldown in seconds if enabled","The cooldown in seconds if enabled","Whether a cooldown is enabled and what the cooldown is. { …","ID of the Custom Reward to delete, must match a Custom …","When used, this parameter filters the results and only …","ID of the reward","A list of IDs to filter the redemptions by.","The ID of the redemption.","ID of the Custom Reward to update, must match a Custom …","ID of the Custom Reward Redemption to update, must match a …","Set of custom images of 1x, 2x and 4x sizes for the reward …","Calls <code>U::from(self)</code>.","Is the reward currently enabled, if false the reward …","Is the reward currently enabled, if false the reward …","Is the reward currently enabled, if false the reward …","Whether a cooldown is enabled. Defaults to false.","Whether a cooldown is enabled. Defaults to false.","Is the reward currently in stock, if false viewers can’t …","Whether a maximum per stream is enabled. Defaults to false.","Whether a maximum per stream is enabled","Whether a maximum per user per stream is enabled. Defaults …","Whether a maximum per user per stream is enabled. Defaults …","Is the reward currently paused, if true viewers can’t …","Is the reward currently paused, if true viewers can’t …","Does the user need to enter information when redeeming the …","Does the user need to enter information when redeeming the …","Does the user need to enter information when redeeming the …","The maximum number per stream if enabled","The maximum number per stream if enabled","Whether a maximum per stream is enabled and what the …","The maximum number per user per stream if enabled","The maximum number per user per stream if enabled","Whether a maximum per user per stream is enabled and what …","When set to true, only returns custom rewards that the …","The prompt for the viewer when they are redeeming the …","The prompt for the viewer when they are redeeming the …","The prompt for the viewer when they are redeeming the …","RFC3339 timestamp of when the reward was redeemed.","The number of redemptions redeemed during the current live …","Basic information about the Custom Reward that was …","When ID is not provided, this parameter returns paginated …","ID of the Custom Reward the redemptions to be updated are …","","Should redemptions be set to FULFILLED status immediately …","Should redemptions be set to FULFILLED status immediately …","Should redemptions be set to FULFILLED status immediately …","The order to sort redemptions by.","When id is not provided, this param is required and …","One of UNFULFILLED, FULFILLED or CANCELED","The new status to set redemptions to. Can be either …","The title of the reward","The title of the reward","The title of the reward","","","","","Updates a Custom Reward created on a channel.","Updates the status of Custom Reward Redemption objects on …","The ID of the user that redeemed the reward","The user input provided. Empty string if not provided.","The login of the user who redeemed the reward.","The display name of the user that redeemed the reward.","","Body Parameters for Create Custom Rewards","Query Parameters for Create Custom Rewards","Return Values for Create Custom Rewards","Custom background color for the reward. Format: Hex with # …","","","","","Channel to create reward on","Provided broadcaster_id must match the user_id in the auth …","Create a builder for building <code>CreateCustomRewardRequest</code>. …","Create a builder for building <code>CreateCustomRewardBody</code>. On …","","","","","The cost of the reward","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","The cooldown in seconds if enabled","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is the reward currently enabled, if false the reward …","Whether a cooldown is enabled. Defaults to false.","Whether a maximum per stream is enabled. Defaults to false.","Whether a maximum per user per stream is enabled. Defaults …","Does the user need to enter information when redeeming the …","The maximum number per stream if enabled","The maximum number per user per stream if enabled","Reward to create with title.","","The prompt for the viewer when they are redeeming the …","","","Should redemptions be set to FULFILLED status immediately …","The title of the reward","","","","","","","","","","","","Return Values for Delete CustomReward","Query Parameters for Delete CustomReward","Reward deleted","","","","","Provided broadcaster_id must match the user_id in the auth …","Create a builder for building <code>DeleteCustomRewardRequest</code>. …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","ID of the Custom Reward to delete, must match a Custom …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Reward to delete","","","","","","","","","","","","","","Return Values for Get Custom Reward","Query Parameters for Get Custom Reward","Custom background color for the reward. Format: Hex with # …","","","","","Rewards on this broadcasters channel","Provided broadcaster_id must match the user_id in the auth …","ID of the channel the reward is for","Login of the channel the reward is for","Display name of the channel the reward is for","Create a builder for building <code>GetCustomRewardRequest</code>. On …","","","","","Timestamp of the cooldown expiration. Null if the reward …","The cost of the reward","Set of default images of 1x, 2x and 4x sizes for the …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Whether a cooldown is enabled and what the cooldown is. { …","When used, this parameter filters the results and only …","ID of the reward","Get rewards with these ids","Set of custom images of 1x, 2x and 4x sizes for the reward …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is the reward currently enabled, if false the reward …","Is the reward currently in stock, if false viewers can’t …","Is the reward currently paused, if true viewers can’t …","Does the user need to enter information when redeeming the …","Whether a maximum per stream is enabled and what the …","Whether a maximum per user per stream is enabled and what …","Only return rewards that this application/client id can …","When set to true, only returns custom rewards that the …","The prompt for the viewer when they are redeeming the …","The number of redemptions redeemed during the current live …","","","Should redemptions be set to FULFILLED status immediately …","The title of the reward","","","","","","","","","","","Return Values for Get Custom Reward Redemption","Query Parameters for Get Custom Reward Redemption","The order to sort redemptions by.","Sort by newest","Sort by oldest","Information about the reward involved","Cursor for forward pagination: tells the server where to …","","","","","","","","","Reward to fetch","Provided broadcaster_id must match the user_id in the auth …","The id of the broadcaster that the reward belongs to.","Broadcaster’s user login name.","The display name of the broadcaster that the reward …","Create a builder for building …","","","","","","","","","The cost of the reward in channel points.","","","","","","","","","","","","","Number of results to be returned when getting the …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","A list of IDs to filter the redemptions by.","The ID of the redemption.","The ID of the custom reward.","Get redemptions with these ids","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The prompt to the user, if any, for the reward.","RFC3339 timestamp of when the reward was redeemed.","Basic information about the Custom Reward that was …","Specific reward to query","When ID is not provided, this parameter returns paginated …","","","","","","The order to sort redemptions by.","The order to sort redemptions by.","Status of rewards to return","When id is not provided, this param is required and …","One of UNFULFILLED, FULFILLED or CANCELED","The title of the custom reward.","","","","","","","","","","","","","","","","","The ID of the user that redeemed the reward","The user input provided. Empty string if not provided.","The login of the user who redeemed the reward.","The display name of the user that redeemed the reward.","","","","","Reward updated","Return Values for Update CustomReward","Body Parameters for Update Custom Rewards","Query Parameters for Update Custom Rewards","Custom background color for the reward. Format: Hex with # …","","","","","","","Provided broadcaster_id must match the user_id in the auth …","Create a builder for building <code>UpdateCustomRewardRequest</code>. …","Create a builder for building <code>UpdateCustomRewardBody</code>. On …","","","","","","","The cost of the reward","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The cooldown in seconds if enabled","ID of the Custom Reward to update, must match a Custom …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Is the reward currently enabled, if false the reward …","Whether a cooldown is enabled. Defaults to false.","Whether a maximum per stream is enabled","Whether a maximum per user per stream is enabled. Defaults …","Is the reward currently paused, if true viewers can’t …","Does the user need to enter information when redeeming the …","The maximum number per stream if enabled","The maximum number per user per stream if enabled","Update a Custom Reward created on the broadcaster’s …","","The prompt for the viewer when they are redeeming the …","","","","Should redemptions be set to FULFILLED status immediately …","The title of the reward","","","","","","","","","","","","","","","","","Return Values for Get Custom Reward Redemption","200 - OK","Body Parameters for Update Redemption Status","FIXME: Returns an object. Return Values for Update …","Query Parameters for Update Redemption Status","","","","","","","The id of the broadcaster that the reward belongs to.","Provided broadcaster_id must match the user_id in the auth …","Broadcaster’s user login name.","The display name of the broadcaster that the reward …","Create a builder for building <code>UpdateRedemptionStatusRequest</code>…","Create a builder for building <code>UpdateRedemptionStatusBody</code>. …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","The ID of the redemption.","ID of the Custom Reward Redemption to update, must match a …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Update the status of Custom Reward Redemption object on a …","","RFC3339 timestamp of when the reward was redeemed.","Basic information about the Custom Reward that was …","ID of the Custom Reward the redemptions to be updated are …","","","","The new status to set","One of UNFULFILLED, FULFILLED or CANCELED","The new status to set redemptions to. Can be either …","","","","","","","","","","","","","","The ID of the user that redeemed the reward","The user input provided. Empty string if not provided.","The login of the user who redeemed the reward.","The display name of the user that redeemed the reward.","","","","Body Parameters for Create Poll","Query Parameters for Create Poll","Body Parameters for End Poll","Query Parameters for End Poll","Query Parameters for Get polls","Choice settings for a poll","Return Values for Get polls","Cursor for forward pagination","Number of Bits required to vote once with Bits. Minimum: …","Number of Bits required to vote once with Bits.","Indicates if Bits can be used for voting. Default: false","Indicates if Bits can be used for voting.","The broadcaster running polls. Provided broadcaster_id …","The broadcaster running polls. Provided broadcaster_id …","The broadcaster running polls. Provided broadcaster_id …","ID of the broadcaster.","Login of the broadcaster.","Name of the broadcaster.","Number of Channel Points required to vote once with …","Number of Channel Points required to vote once with …","Indicates if Channel Points can be used for voting. …","Indicates if Channel Points can be used for voting.","Array of the poll choices. Minimum: 2 choices. Maximum: 5 …","Array of the poll choices.","Create a poll for a specific Twitch channel. <code>create-poll</code>","Total duration for the poll (in seconds). Minimum: 15. …","Total duration for the poll (in seconds).","End a poll that is currently active.","UTC timestamp for the poll’s end time. Set to null if …","Maximum number of objects to return. Maximum: 20. Default: …","Get information about all polls or specific polls for a …","ID of the poll.","ID of a poll. Filters results to one or more specific …","ID of the poll.","UTC timestamp for the poll’s start time.","The poll status to be set.","Poll status. Valid values are:","Question displayed for the poll. Maximum: 60 characters.","Text displayed for the choice. Maximum: 25 characters.","Question displayed for the poll.","Body Parameters for Create Poll","Query Parameters for Create Poll","Return Values for Create Poll","Choice settings for a poll","Number of Bits required to vote once with Bits. Minimum: …","Indicates if Bits can be used for voting. Default: false","","","","","","","The broadcaster running polls. Provided broadcaster_id …","Create a builder for building <code>CreatePollRequest</code>. On the …","Create a builder for building <code>CreatePollBody</code>. On the …","Create a builder for building <code>NewPollChoice</code>. On the …","Channel points per vote","Number of Channel Points required to vote once with …","Set if Channel Points voting is enabled","Indicates if Channel Points can be used for voting. …","Array of the poll choices. Minimum: 2 choices. Maximum: 5 …","","","","","","","","","","","Total duration for the poll (in seconds). Minimum: 15. …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>CreatePollRequest</code>","Poll settings","Create a new <code>NewPollChoice</code>","","","","","Question displayed for the poll. Maximum: 60 characters.","Text displayed for the choice. Maximum: 25 characters.","","","","","","","","","","","","","","","","","Poll is currently in progress.","Poll is no longer visible on the channel.","Unauthenticated: Missing/invalid Token","Poll has reached its ended_at time.","Return Values for Update CustomReward","Body Parameters for End Poll","Query Parameters for End Poll","Something went wrong determining the state.","Bad Request: Query/Body Parameter missing or invalid","Poll is no longer visible to any user on Twitch.","Status of a poll","Poll ended successfully.","Poll has been manually terminated before its ended_at time.","","","","","","","The broadcaster running polls. Provided broadcaster_id …","Create a builder for building <code>EndPollRequest</code>. On the …","Create a builder for building <code>EndPollBody</code>. On the builder, …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","ID of the poll.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Make a new <code>EndPollRequest</code>","End a poll that is currently active.","","","","The poll status to be set.","","","","","","","","","","","","","","","","","Poll is currently in progress.","Poll is no longer visible on the channel.","Poll has reached its ended_at time.","Query Parameters for Get polls","Something went wrong determining the state.","Poll is no longer visible to any user on Twitch.","Return Values for Get polls","Poll choice","Status of a poll","Poll has been manually terminated before its ended_at time.","Cursor for forward pagination","Number of Bits required to vote once with Bits.","Number of votes received via Bits.","Indicates if Bits can be used for voting.","","","","","","","","","The broadcaster running polls.","The broadcaster running polls. Provided broadcaster_id …","ID of the broadcaster.","Login of the broadcaster.","Name of the broadcaster.","Create a builder for building <code>GetPollsRequest</code>. On the …","Number of Channel Points required to vote once with …","Number of votes received via Channel Points.","Indicates if Channel Points can be used for voting.","Array of the poll choices.","","","","","","","","","","","","","Total duration for the poll (in seconds).","UTC timestamp for the poll’s end time. Set to null if …","","","","","","","","","Maximum number of objects to return. Maximum: 20. Default: …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","ID for the choice.","ID of a poll. Filters results to one or more specific …","ID of the poll.","IDs of the polls to query.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","UTC timestamp for the poll’s start time.","Poll status. Valid values are:","Text displayed for the choice.","Question displayed for the poll.","","","","","","","","","","","","","","","","","Total number of votes received for the choice across all …","","","","","Query Parameters for Get predictions","Return Values for Get predictions","Cursor for forward pagination","The broadcaster running Predictions. Provided …","ID of the broadcaster.","Login of the broadcaster.","Name of the broadcaster.","Create a Channel Points Prediction for a specific Twitch …","UTC timestamp for the Prediction’s start time.","End a prediction that is currently active.","UTC timestamp for when the Prediction ended. If the status …","Maximum number of objects to return. Maximum: 20. Default: …","Get information about all predictions or specific …","ID of a Prediction. Filters results to one or more …","ID of the Prediction.","UTC timestamp for when the Prediction was locked. If the …","Array of possible outcomes for the Prediction.","Total duration for the Prediction (in seconds).","Status of the Prediction.","Title for the Prediction.","ID of the winning outcome. If the status is ACTIVE, this …","Body Parameters for Create Prediction","Query Parameters for Create Prediction","Return Values for Create Prediction","Choice settings for a poll","","","","","","","The broadcaster running Predictions. Provided …","Create a builder for building <code>CreatePredictionRequest</code>. On …","Create a builder for building <code>CreatePredictionBody</code>. On the …","Create a builder for building <code>NewPredictionOutcome</code>. On the …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>CreatePredictionRequest</code>","Create a Channel Points Prediction for a specific Twitch …","Create a new <code>NewPredictionOutcome</code>","Array of outcome objects with titles for the Prediction. …","","Total duration for the Prediction (in seconds). Minimum: …","","","","Title for the Prediction. Maximum: 45 characters.","Text displayed for the choice. Maximum: 25 characters.","","","","","","","","","","","","","","","","","Unauthenticated: Missing/invalid Token","Return Values for Update CustomReward","Body Parameters for End Prediction","Query Parameters for End Prediction","Bad Request: Query/Body Parameter missing or invalid","Prediction ended successfully.","","","","","","","The broadcaster running predictions. Provided …","Create a builder for building <code>EndPredictionRequest</code>. On the …","Create a builder for building <code>EndPredictionBody</code>. On the …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","ID of the prediction.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Make a new <code>EndPredictionRequest</code>","End given prediction that is currently active.","","","","The Prediction status to be set. Valid values:","","","","","","","","","","","","","","","","","ID of the winning outcome for the Prediction","ID of the winning outcome for the Prediction. This …","The Prediction is active and viewers can make predictions.","The Prediction has been canceled and the Channel Points …","Query Parameters for Get predictions","The Prediction has been locked and viewers can no longer …","Return Values for Get predictions","Outcome for the Prediction","A prediction choice ID","Status of the Prediction","A winning outcome has been chosen and the Channel Points …","Cursor for forward pagination","","","","","","","","","","","","","","","Get information about predictions for this broadcasters …","The broadcaster running Predictions. Provided …","ID of the broadcaster.","Login of the broadcaster.","Name of the broadcaster.","Create a builder for building <code>GetPredictionsRequest</code>. On …","Number of Channel Points used for the outcome.","","","","","","","","","","","","Color for the outcome. Valid values: BLUE, PINK","UTC timestamp for the Prediction’s start time.","","","","","","","UTC timestamp for when the Prediction ended. If the status …","","","","","","","","","","","","","Maximum number of objects to return. Maximum: 20. Default: …","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a newPredictionOutcomeIdfrom a static reference","","","ID for the outcome.","ID of a Prediction. Filters results to one or more …","ID of the Prediction.","IDs of a Predictions.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>PredictionOutcomeId</code> into a …","","","UTC timestamp for when the Prediction was locked. If the …","Constructs a new PredictionOutcomeId","Array of possible outcomes for the Prediction.","","Total duration for the Prediction (in seconds).","","","","","","Status of the Prediction.","Unwraps the underlying <code>String</code> value","Text displayed for outcome.","Title for the Prediction.","","","","","","","Array of users who were the top predictors. null if none. …","","","","","","","","","","","","","","","","Number of unique users that chose the outcome.","","","","","","ID of the winning outcome. If the status is ACTIVE, this …","Query Parameters for Cancel A Raid","Return Values for Cancel A Raid","Query Parameters for Start A Raid","Return Values for Start A Raid","204 - The pending raid was successfully canceled.","The ID of the broadcaster that sent the raiding party.","Cancel a pending raid. <code>cancel-a-raid</code>","Raid another channel by sending the broadcaster’s …","Query Parameters for Cancel A Raid","Return Values for Cancel A Raid","204 - The pending raid was successfully canceled.","","","","","Cancel a pending raid on this broadcasters channel","The ID of the broadcaster that sent the raiding party.","Create a builder for building <code>CancelARaidRequest</code>. On the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Query Parameters for Start A Raid","Return Values for Start A Raid","","","","","Create a builder for building <code>StartARaidRequest</code>. On the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>StartARaidRequest</code>","","","","","","","","","","","","","Body parameters","Body parameters","Body parameters","Optional scopes needed by this endpoint","The path to the endpoint relative to the helix root. eg. …","A request is a Twitch endpoint, see New Twitch API …","Helix endpoint DELETEs information","Helix endpoint GETs information","Helix endpoint PATCHs information","Helix endpoint POSTs information","Helix endpoint PUTs information","Response type. twitch’s response will  deserialize to …","Scopes needed by this endpoint","Create a <code>http::Request</code> from this <code>Request</code> in your client","Create a <code>http::Request</code> from this <code>Request</code> in your client","Create a <code>http::Request</code> from this <code>Request</code> in your client","Create a <code>http::Request</code> from this <code>Request</code> in your client","Create a <code>http::Request</code> from this <code>Request</code> in your client","Errors that can occur during request processing.","Returns bare URI for the request, NOT including query …","Returns full URI for the request, including query …","Parse a response string into the response.","Parse a response string into the response.","Parse a response string into the response.","Parse a response string into the response.","Parse a response string into the response.","Parse response.","Parse response.","Parse response.","Parse response.","Parse response.","Defines layout of the url parameters.","Errors for <code>HelixClient::req_get</code> and similar functions.","Could not create request","Could not create request","Custom error","{0}","{0}","deserialization failed when processing request response …","deserialization failed when processing request response …","deserialization failed when processing request response …","deserialization failed when processing request response …","helix returned error {status:?} - {error}: {message:?} …","helix returned error {status:?} - {error}: {message:?} …","helix returned error {status:?} - {error}: {message:?} …","helix returned error {status:?} - {error}: {message:?} …","helix returned error {status:?} - {error}: {message:?} …","field serializer only supports strings, sequences, …","Could not parse DELETE response","Got error from DELETE response","Could not parse GET response","Got error from GET response","Could not parse PATCH response","Got error from PATCH response","Could not parse POST response","Got error from POST response","Could not parse PUT response","Got error from PUT response","http crate returned an error","Request failed from reqwests side","invalid or unexpected response from twitch.","invalid or unexpected response from twitch.","invalid or unexpected response from twitch.","invalid or unexpected response from twitch.","invalid or unexpected response from twitch.","Errors that can happen when creating <code>http::Uri</code> for <code>Request</code>","could not assemble URI for request","No pagination found","pair serializer only supports strings, integers, floats, …","could not serialize request to query","Request failed from reqwests side","Errors from the query serializer","serialization of body failed","serializer only supports structs and maps on top-level","URI could not be parsed","could not assemble URI for request","could not parse response as utf8 when calling <code>GET {2}</code>","could not parse response as utf8 when calling <code>PUT {2}</code>","could not parse response as utf8 when calling <code>POST {2}</code>","could not parse response as utf8 when calling <code>POST {2}</code>","could not parse response as utf8 when calling <code>DELETE {2}</code>","value serializer only supports primitive types","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Body sent to DELETE response","Error message related to status code","Error message from Twitch","Reason for error","Response text","Status code of error, usually 400-499","Status Code","URI to the endpoint","Uri to endpoint","Error message related to status code","Error message from Twitch","Reason for error","Response text","Status code of error, usually 400-499","Status Code","URI to the endpoint","Uri to endpoint","Body sent to POST response","Error message related to status code","Error message from Twitch","Reason for error","Response text","Status code of error, usually 400-499","Status Code","URI to the endpoint","Uri to endpoint","Body sent to POST response","Error message related to status code","Error message from Twitch","Reason for error","Response text","Status code of error, usually 400-499","Status Code","URI to the endpoint","Uri to endpoint","Body sent to PUT response","Error message related to status code","Error message from Twitch","Reason for error","Response text","Status code of error, usually 400-499","Status Code","URI to the endpoint","Uri to endpoint","Location where this was triggered","Location where this was triggered","Location where this was triggered","Location where this was triggered","Response retrieved from endpoint. Data is the type in …","Twitch’s response field for <code>data</code>.","Get first result of this response.","Get the next page in the responses.","Get a field from the response that is not part of <code>data</code>.","Fields which are not part of the data response, but are …","A cursor value, to be used in a subsequent request to …","The request that was sent, used for pagination.","Response would return this many results if fully …","The category for a scheduled broadcast.","Body Parameters for Create Channel Stream Schedule Segment","Query Parameters for Create Channel Stream Schedule Segment","Return Values for Delete Channel Stream Schedule Segment","Query Parameters for Delete Channel Stream Schedule Segment","Query Parameters for Get Channel Stream Schedule","Scheduled broadcasts for a specific channel given by Get …","Scheduled broadcast for a stream schedule.","204 - User successfully deleted from list of channel …","Stream schedule settings updated successfully.","Return Values for Update Channel Stream Schedule","Query Parameters for Update Channel Stream Schedule","Information on Vacation Mode","Cursor for forward pagination: tells the server where to …","","","","","","","","","User ID of the broadcaster who owns the channel streaming …","User ID of the broadcaster who owns the channel streaming …","User ID of the broadcaster who owns the channel streaming …","User ID of the broadcaster who owns the channel streaming …","User ID of the broadcaster.","Login of the broadcaster.","Display name of the broadcaster.","Used with recurring scheduled broadcasts. Specifies the …","The category for the scheduled broadcast. Set to null if …","Game/Category ID for the scheduled broadcast.","","","","","","","","","Create a single scheduled broadcast or a recurring …","Delete a single scheduled broadcast or a recurring …","","","","","Duration of the scheduled broadcast in minutes from the …","Scheduled end time for the scheduled broadcast in RFC3339 …","End time for vacation specified in RFC3339 format.","","","","","","","","","Maximum number of stream segments to return. Maximum: 25. …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets all scheduled broadcasts or specific scheduled …","The ID of the streaming segment to delete.","The ID of the stream segment to return. Maximum: 100.","The ID for the scheduled broadcast.","Game/category ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicates if the scheduled broadcast is recurring weekly.","Indicates if the scheduled broadcast is recurring weekly.","Indicates if Vacation Mode is enabled. Set to true to add …","Game/category name.","Scheduled broadcasts for this stream schedule.","Start time for the scheduled broadcast specified in …","A timestamp in RFC3339 format to start returning stream …","Scheduled start time for the scheduled broadcast in …","Start time for vacation specified in RFC3339 format.","The timezone of the application creating the scheduled …","The timezone for when the vacation is being scheduled …","Title for the scheduled broadcast. Maximum: 140 characters.","Title for the scheduled broadcast.","","","","","","","","","","","","","","","","","Update the settings for a channel’s stream schedule. …","Update a single scheduled broadcast or a recurring …","A timezone offset for the requester specified in minutes. …","If Vacation Mode is enabled, this includes start and end …","End time for vacation specified in RFC3339 format. …","Start time for vacation specified in RFC3339 format. …","","","","","Body Parameters for Create Channel Stream Schedule Segment","Query Parameters for Create Channel Stream Schedule Segment","Return Values for Create Channel Stream Schedule Segment","","","","","Create a single scheduled broadcast or a recurring …","User ID of the broadcaster who owns the channel streaming …","Create a builder for building …","Create a builder for building …","Game/Category ID for the scheduled broadcast.","","","","","","","Duration of the scheduled broadcast in minutes from the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicates if the scheduled broadcast is recurring weekly.","Create a single scheduled broadcast or a recurring …","","","Start time for the scheduled broadcast specified in …","The timezone of the application creating the scheduled …","Title for the scheduled broadcast. Maximum: 140 characters.","","","","","","","","","","","","Return Values for Delete Channel Stream Schedule Segment","Query Parameters for Delete Channel Stream Schedule Segment","204 - User successfully deleted from list of channel …","","","","","User ID of the broadcaster who owns the channel streaming …","Create a builder for building …","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","The ID of the streaming segment to delete.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Delete a single scheduled broadcast or a recurring …","","","","","","","","","","","","","","Query Parameters for Get Channel Stream Schedule","Return Values for Get Channel Stream Schedule","Cursor for forward pagination: tells the server where to …","","","Get a broadcasters schedule","User ID of the broadcaster who owns the channel streaming …","Create a builder for building …","","","","","","Set amount of results returned per page.","Maximum number of stream segments to return. Maximum: 25. …","","Returns the argument unchanged.","Set the id for the request.","The ID of the stream segment to return. Maximum: 100.","Calls <code>U::from(self)</code>.","","","Set the start_time for the request.","A timestamp in RFC3339 format to start returning stream …","","","","","Set the utc_offset for the request.","A timezone offset for the requester specified in minutes. …","","Stream schedule settings updated successfully.","Return Values for Update Channel Stream Schedule","Query Parameters for Update Channel Stream Schedule","","","","","Update the settings for a channel’s stream schedule.","User ID of the broadcaster who owns the channel streaming …","Create a builder for building …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicates if Vacation Mode is enabled. Set to true to add …","","","","The timezone for when the vacation is being scheduled …","","","","","","","","","End time for vacation specified in RFC3339 format. …","Start time for vacation specified in RFC3339 format. …","","","Body Parameters for Update Channel Stream Schedule Segment","Query Parameters for Update Channel Stream Schedule Segment","Return Values for Update Channel Stream Schedule Segment","","","","","User ID of the broadcaster who owns the channel streaming …","Create a builder for building …","Create a builder for building …","Game/Category ID for the scheduled broadcast.","","","","","","","","Duration of the scheduled broadcast in minutes from the …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","The ID of the streaming segment to update.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicated if the scheduled broadcast is canceled.","Update a single scheduled broadcast or a recurring …","","","","Start time for the scheduled broadcast specified in …","The timezone of the application creating the scheduled …","Title for the scheduled broadcast. Maximum: 140 characters.","","","","","","","","","","","","A game or category as defined by Twitch","Return Values for Search Channels","Query Parameters for Search Categories","Query Parameters for Search Channels","Cursor for forward pagination: tells the server where to …","Cursor for forward pagination: tells the server where to …","Cursor for backward pagination: tells the server where to …","","","Template URL for the game’s box art.","Channel language (Broadcaster Language field from the …","Login of the broadcaster.","","","","Display name corresponding to user_id","","","Number of values to be returned per page. Limit: 100. …","Maximum number of objects to return. Maximum: 100 Default: …","","Returns the argument unchanged.","ID of the game being played on the stream","Name of the game being played on the stream.","Game or category ID.","Channel ID","The ID that IGDB uses to identify this game.","Calls <code>U::from(self)</code>.","Live status","Filter results for live streams only. Default: false","Game name.","URI encoded search query","URL encoded search query","Returns a list of games or categories that match the query …","Returns a list of channels (users who have streamed within …","","UTC timestamp. (live only)","Shows tag IDs that apply to the stream (live only).See …","The tags applied to the channel.","Thumbnail URL of the stream. All image URLs have variable …","channel title","","","","","","Return Values for Search Categories","Query Parameters for Search Categories","Cursor for forward pagination: tells the server where to …","Cursor for backward pagination: tells the server where to …","","","Create a builder for building <code>SearchCategoriesRequest</code>. On …","","","","","","Set amount of results returned per page.","Number of values to be returned per page. Limit: 100. …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Search categories with the following query.","URI encoded search query","","","","","","","","Return Values for Search Channels","Query Parameters for Search Channels","Cursor for forward pagination: tells the server where to …","","","","","Channel language (Broadcaster Language field from the …","Login of the broadcaster.","Create a builder for building <code>SearchChannelsRequest</code>. On …","","","","","","","Display name corresponding to user_id","","","","","Set amount of results returned per page.","Maximum number of objects to return. Maximum: 100 Default: …","","","Returns the argument unchanged.","Returns the argument unchanged.","ID of the game being played on the stream","Name of the game being played on the stream.","Channel ID","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Live status","Get live streams only","Filter results for live streams only. Default: false","Search channels with the following query.","URL encoded search query","","","","UTC timestamp. (live only)","Shows tag IDs that apply to the stream (live only).See …","The tags applied to the channel.","Thumbnail URL of the stream. All image URLs have variable …","channel title","","","","","","","","","","","Query Parameters for Get Followed Streams","Query Parameters for Get Stream Tags","Query Parameters for Get Streams","Stream is live.","Stream not live","Return Values for Replace Stream Tags","Body Parameters for Replace Stream Tags","Query Parameters for Replace Stream Tags","Return Values for Get Streams","Gotten from <code>Stream.type_</code>","204 - Stream Tags replaced successfully","Return Values for Get Stream Tags","Cursor for forward pagination: tells the server where to …","Cursor for forward pagination: tells the server where to …","Cursor for backward pagination: tells the server where to …","Cursor for backward pagination: tells the server where to …","","","ID of the stream whose tags are going to be fetched","ID of the stream for which tags are to be replaced.","","","","","","Maximum number of objects to return. Maximum: 100. …","Maximum number of objects to return. Maximum: 100. …","","Returns the argument unchanged.","Returns streams broadcasting a specified game ID. You can …","ID of the game being played on the stream.","Name of the game being played.","Gets information about active streams belonging to …","Gets the list of tags for a specified stream (channel). …","Gets information about active streams. <code>get-streams</code>","Stream ID.","Calls <code>U::from(self)</code>.","Check if the stream is live or not","Indicates if the broadcaster has specified their channel …","Stream language. You can specify up to 100 languages.","Stream language.","Applies specified tags to a specified stream, overwriting …","","UTC timestamp.","Shows tag IDs that apply to the stream.","IDs of tags to be applied to the stream.","The tags applied to the stream.","Thumbnail URL of the stream. All image URLs have variable …","Stream title.","","","","Stream type: “live” or “” (in case of error).","","Returns streams broadcast by one or more specified user …","Returns streams broadcast by one or more specified user …","ID of the user who is streaming.","Returns streams broadcast by one or more specified user …","Login of the user who is streaming.","Display name corresponding to user_id.","Number of viewers watching the stream at the time of the …","","Query Parameters for Get Followed Streams","Return Values for Get Followed Streams","Cursor for forward pagination: tells the server where to …","Cursor for backward pagination: tells the server where to …","","","Create a builder for building <code>GetFollowedStreamsRequest</code>. …","","","","","","Set amount of results returned per page.","Maximum number of objects to return. Maximum: 100. …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Get a users followed streams.","Returns streams broadcast by one or more specified user …","","Query Parameters for Get Stream Tags","Return Values for Get Stream Tags","","","ID of the stream whose tags are going to be fetched","ID of the stream whose tags are going to be fetched","Create a builder for building <code>GetStreamTagsRequest</code>. On the …","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","Query Parameters for Get Streams","Return Values for Get Streams","Cursor for forward pagination: tells the server where to …","Cursor for backward pagination: tells the server where to …","","","","","Create a builder for building <code>GetStreamsRequest</code>. On the …","","","","","","","","","","","Set amount of results returned per page.","Maximum number of objects to return. Maximum: 100. …","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns streams broadcasting a specified game ID. You can …","ID of the game being played on the stream.","Name of the game being played.","Stream ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicates if the broadcaster has specified their channel …","Stream language. You can specify up to 100 languages.","Stream language.","","","","UTC timestamp.","Shows tag IDs that apply to the stream.","The tags applied to the stream.","Thumbnail URL of the stream. All image URLs have variable …","Stream title.","","","","","","","Stream type: “live” or “” (in case of error).","","","Returns streams broadcast by one or more specified user …","ID of the user who is streaming.","Return streams for specified user ids","Returns streams broadcast by one or more specified user …","Login of the user who is streaming.","Return streams for specified users by nickname","Display name corresponding to user_id.","Number of viewers watching the stream at the time of the …","","","Return Values for Replace Stream Tags","Body Parameters for Replace Stream Tags","Query Parameters for Replace Stream Tags","204 - Stream Tags replaced successfully","","","","","","","ID of the stream for which tags are to be replaced.","ID of the stream for which tags are to be replaced.","Create a builder for building <code>ReplaceStreamTagsRequest</code>. On …","Create a builder for building <code>ReplaceStreamTagsBody</code>. On …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","IDs of tags to be applied to the stream.","IDs of tags to be applied to the stream.","","","","","","","","","","","","","","","","","Return Values for Get Broadcaster Subscriptions","Return Values for Get Broadcaster Subscriptions Events","Query Parameters for Check User Subscription","Query Parameters for Get Broadcaster Subscriptions Events","Query Parameters for Get Broadcaster Subscriptions","Return Values for Check User Subscription","Cursor for forward pagination: tells the server where to …","Cursor for forward pagination: tells the server where to …","User ID of the broadcaster. Must match the User ID in the …","User ID of the broadcaster.","User ID of the broadcaster. Must match the User ID in the …","User ID of the broadcaster.","Must match the User ID in the Bearer token.","Login of the broadcaster.","Login of the broadcaster.","Display name of the broadcaster.","Display name of the broadcaster.","Checks if a specific user is subscribed to a specific …","Returns <code>broadcaster_id</code>, <code>broadcaster_name</code>, <code>user_id</code>, …","RFC3339 formatted timestamp for events.","<code>subscriptions.subscribe</code>, <code>subscriptions.unsubscribe</code> or …","Number of values to be returned per page. Limit: 100. …","Maximum number of objects to return. Maximum: 100. …","Get all of a broadcaster’s subscriptions. …","Returns a list of subscription events. …","User ID of the broadcaster.","Login of the gifter (if is_gift is true).","Login of the gifter.","Display name of the gifter (if is_gift is true).","Display name of the gifter.","Retreive a single event by event ID","Event ID","Indicates if the subscription is a gift.","Determines if the subscription is a gift subscription.","Name of the subscription.","Subscription tier. 1000 is tier 1, 2000 is tier 2, and …","Type of subscription (Tier 1, Tier 2, Tier 3). 1000 = Tier …","Unique identifier of account to get subscription status …","Unique identifier of account to get subscription status …","ID of the subscribed user.","Filters the results and only returns a status object for …","Login of the subscribed user.","Display name of the subscribed user.","Returns the version of the endpoint.","Query Parameters for Check User Subscription","Return Values for Check User Subscription","","","","","Checks subscribed users to this specific channel.","User ID of the broadcaster. Must match the User ID in the …","User ID of the broadcaster.","Login of the broadcaster.","Display name of the broadcaster.","Create a builder for building <code>CheckUserSubscriptionRequest</code>.","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Login of the gifter (if is_gift is true).","Display name of the gifter (if is_gift is true).","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Indicates if the subscription is a gift.","","","","Subscription tier. 1000 is tier 1, 2000 is tier 2, and …","","","","","","","","","Unique identifier of account to get subscription status …","Filter the results for specific users.","","","Return Values for Get Broadcaster Subscriptions","Errors when retrieving <code>points</code> in Get Broadcaster …","Deserialization error","Query Parameters for Get Broadcaster Subscriptions","<code>points</code> not found in the response","Cursor for forward pagination: tells the server where to …","","","","","","","Get a broadcasters subscribers","User ID of the broadcaster. Must match the User ID in the …","User ID of the broadcaster.","Login of the broadcaster.","Display name of the broadcaster.","Create a builder for building …","","","","","","","","","","","Set amount of results returned per page.","Number of values to be returned per page. Limit: 100. …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","User ID of the broadcaster.","Login of the gifter.","Display name of the gifter.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Determines if the subscription is a gift subscription.","Name of the subscription.","","","","","","check for specific users in broadcasters subscriptions","Type of subscription (Tier 1, Tier 2, Tier 3). 1000 = Tier …","","","","","","","","","","","","","Unique identifier of account to get subscription status …","ID of the subscribed user.","Login of the subscribed user.","Display name of the subscribed user.","","","","Return Values for Get Broadcaster Subscriptions Events","Event data for broadcaster events.","Type of event","Query Parameters for Get Broadcaster Subscriptions Events","User shared a subscription in channel","User has subscribed","User has unsubscribed","Cursor for forward pagination: tells the server where to …","","","","","","","","","Get events for this broadcaster","Must match the User ID in the Bearer token.","User ID of the broadcaster.","Display name of the broadcaster.","Create a builder for building …","","","","","","","","","","","","","","","","","","","","","Returns <code>broadcaster_id</code>, <code>broadcaster_name</code>, <code>user_id</code>, …","RFC3339 formatted timestamp for events.","<code>subscriptions.subscribe</code>, <code>subscriptions.unsubscribe</code> or …","Maximum number of objects to return. Maximum: 100. …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","ID of the subscribed user.","Display name of the gifter.","Retreive a single event by event ID","Event ID","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Determines if the subscription is a gift subscription.","Name of the subscription.","","","","","","Type of subscription (Tier 1, Tier 2, Tier 3). 1000 = Tier …","","","","","","","","","","","","","","","","","Filters the results and only returns a status object for …","ID of the subscribed user.","Filter the results for specific users.","Display name of the subscribed user.","Returns the version of the endpoint.","","","","","Tag is auto-generated or not.","Was not auto-generated","Query Parameters for Get All Stream Tags","Return Values for Get All Stream Tags","Language code, formatted as 2 letter language by ISO …","Language code, formatted as 2 letter language by ISO …","Was auto-generated","A stream tag as defined by Twitch.","Cursor for forward pagination: tells the server where to …","","","","Provides access to the underlying value as a string slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maximum number of objects to return. Maximum: 100. …","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a new TagLanguage from a static reference","Transparently reinterprets the static string slice as a …","","Transparently reinterprets the string slice as a …","Gets the list of all stream tags defined by Twitch, …","","","ID of the tag.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>TagLanguage</code> into a <code>Box&lt;TagLanguageRef&gt;</code>","Converts a <code>Box&lt;TagLanguageRef&gt;</code> into a <code>TagLanguage</code> without …","true if the tag is auto-generated; otherwise, false . An …","All localized descriptions of the tag.","All localized names of the tag.","Constructs a new TagLanguage","","","","","","","ID of a tag. Multiple IDs can be specified. If provided, …","Unwraps the underlying <code>String</code> value","","","","","","","","","","","","","","","","","","","","Query Parameters for Get All Stream Tags","Return Values for Get All Stream Tags","Cursor for forward pagination: tells the server where to …","","","Create a builder for building <code>GetAllStreamTagsRequest</code>. On …","","","","","","","Maximum number of objects to return. Maximum: 100. …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","ID of a tag. Multiple IDs can be specified. If provided, …","Filter the results for specific tag.","","","","","","Information about a team. Get team <code>members</code> with …","URL of the Team background <code>image</code>.","URL for the Team banner.","","","","","Date and time the Team was created.","","","","","Returns the argument unchanged.","Gets information for a specific Twitch Team. <code>get-teams</code>","Gets information for a specific Twitch Team. <code>get-teams</code>","Team ID.","Team description.","Calls <code>U::from(self)</code>.","","Team display name.","Team name.","Image URL for the Team logo.","","","","","Date and time the Team was last updated.","","Return Values for Get Channel Teams","Query Parameters for Get Channel Teams","","","","","Get the team of this specific broadcaster","Team ID.","User ID of the broadcaster.","Login of the broadcaster.","Display name of the broadcaster.","Create a builder for building <code>GetChannelTeamsRequest</code>. On …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Team information","","","","","","","","","","","Query Parameters for Get Teams","Return Values for Get Teams","","","","","Create a builder for building <code>GetTeamsRequest</code>. On the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get team with this <code>TeamId</code>","Team ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get team with this name","Team name.","","","Information about the team.","","","","","","","","","Users in the team.","","","Return Values for Block User","Query Parameters for Block User","Describes a follow relationship","Query Parameters for Get Users Block List","Query Parameters for Get Users Follows","Query Parameters for Get Users","204 - User blocked successfully.","204 - User unblocked successfully.","Return Values for Unblock User","Query Parameters for Unblock User","Return Values for Get Users","Return Values for Get Users Block List","Return Values for Get Users Follows","Cursor for forward pagination: tells the server where to …","Cursor for forward pagination: tells the server where to …","Blocks the specified user on behalf of the authenticated …","User ID for a Twitch user.","User’s broadcaster type: “partner”, “affiliate”, …","Date when the user was created.","User’s channel description.","Display name of the blocked user.","User’s display name.","User’s email address. Returned if the request includes …","Maximum number of objects to return. Maximum: 100. …","Maximum number of objects to return. Maximum: 100. …","The follow relationships returned by this endpoint on this …","Date and time when the from_id user followed the to_id …","User ID. The request returns information about users who …","ID of the user following the to_id user.","Login of the user following the to_id user.","Display name corresponding to from_id.","Gets a specified user’s block list. The list is sorted …","Gets information about one or more specified Twitch users. …","Gets information on follow relationships between two …","User ID. Multiple user IDs can be specified. Limit: 100.","User’s ID.","User login name. Multiple login names can be specified. …","User’s login name.","URL of the user’s offline image.","URL of the user’s profile image.","Reason for blocking the user. Valid values: “spam”, “…","Source context for blocking the user. Valid values: “chat…","User ID of the follower","User ID of the follower","User ID. The request returns information about users who …","ID of the user being followed by the from_id user.","Login of the user being followed by the from_id user.","Display name corresponding to to_id.","Total number of items returned in all pages.","User’s type: “staff”, “admin”, “global_mod”, …","Unblocks the specified user on behalf of the authenticated …","User ID of the blocked user.","Login of the blocked user.","Total number of views of the user’s channel.","Return Values for Block User","Query Parameters for Block User","Chat","Harassment","Other","Reason for blocking the user.","Source context for blocking the user.","Spam","204 - User blocked successfully.","Whisper","Block a user","","","","","","","","","Create a builder for building <code>BlockUserRequest</code>. On the …","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Set the reason for this block.","Reason for blocking the user. Valid values: “spam”, “…","","","","","Set the source_context for this block.","Source context for blocking the user. Valid values: “chat…","User ID of the follower","","","","","","","","","","","","","","","","","","","","","Query Parameters for Get Users Block List","Return Values for Get Users Block List","Cursor for forward pagination: tells the server where to …","","","","","Get a specified user’s block list","User ID for a Twitch user.","Create a builder for building <code>GetUserBlockListRequest</code>. On …","","","","","","","Display name of the blocked user.","","","","","Maximum number of objects to return. Maximum: 100. …","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","User ID of the blocked user.","Login of the blocked user.","","","Query Parameters for Get Users","Return Values for Get Users","","","","","User’s broadcaster type: “partner”, “affiliate”, …","Create a builder for building <code>GetUsersRequest</code>. On the …","","","","","Date when the user was created.","User’s channel description.","","","User’s display name.","User’s email address. Returned if the request includes …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","User ID. Multiple user IDs can be specified. Limit: 100.","User’s ID.","Get multiple user by their <code>UserId</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","User login name. Multiple login names can be specified. …","User’s login name.","Get multiple user by their <code>UserName</code>","Returns an empty <code>GetUsersRequest</code>","URL of the user’s offline image.","URL of the user’s profile image.","","","","","","","","","User’s type: “staff”, “admin”, “global_mod”, …","","","Total number of views of the user’s channel.","","","Describes a follow relationship","Query Parameters for Get Users Follows","Return Values for Get Users Follows","Cursor for forward pagination: tells the server where to …","","","","","","","Create a builder for building <code>GetUsersFollowsRequest</code>. On …","","","","","","","","","","Returns an empty <code>GetUsersFollowsRequest</code>","","","","","","","Maximum number of objects to return. Maximum: 100. …","","","","The follow relationships returned by this endpoint on this …","Date and time when the from_id user followed the to_id …","Get the followers of <code>to_id</code>","Get the broadcasters that <code>from_id</code> is following","Check if user follows a specific broadcaster","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","User ID. The request returns information about users who …","ID of the user following the to_id user.","Login of the user following the to_id user.","Display name corresponding to from_id.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","User ID. The request returns information about users who …","ID of the user being followed by the from_id user.","Login of the user being followed by the from_id user.","Display name corresponding to to_id.","","","","Total number of items returned in all pages.","","","","","","","","","","","","","204 - User unblocked successfully.","Return Values for Unblock User","Query Parameters for Unblock User","","","","","Create a builder for building <code>UnblockUserRequest</code>. On the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","User ID of the follower","","","","","","","","","Create a new unblock request","","","Filter by all. Effectively a no-op","All video types","An archived video","Filter by from this day only","Query Parameters for Get Videos","A highlight","Filter by this month","Sort order of the videos","Sort by time","Sort by trending","A uploaded video","Return Values for Get Videos","Period during which the video was created","Type of video.","Sort by views","Filter by this week","Cursor for forward pagination: tells the server where to …","Cursor for backward pagination: tells the server where to …","","","","","","","","","","","","","Date when the video was created.","Deletes one or more videos. Videos are past broadcasts, …","Description of the video.","","","","Length of the video.","","","","","","","Number of values to be returned when getting videos by …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","ID of the game the video is of.","Gets video information by video ID (one or more), user ID …","ID of the video being queried. Limit: 100. If this is …","ID of the video.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Language of the video being queried. Limit: 1.","Language of the video.","Muted segments in the video.","Period during which the video was created. Valid values: …","Date when the video was published.","","","","Sort order of the videos. Valid values: “time”, “…","ID of the stream that the video originated from if the …","Template URL for the thumbnail of the video.","Title of the video.","","","","","","","","","","Type of video. Valid values: “all”, “upload”, “…","Type of video. Valid values: “upload”, “archive”, …","","","","URL of the video.","ID of the user who owns the video.","ID of the user who owns the video.","Login of the user who owns the video.","Display name corresponding to user_id.","Number of times the video has been viewed.","Indicates whether the video is publicly viewable. Valid …","","","","Return Values for Delete Videos <code>delete-videos</code>","Query Parameters for Delete Videos","Video(s) deleted.","","","","","Create a builder for building <code>DeleteVideosRequest</code>. On the …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","ID of the video(s) to be deleted. Limit: 5.","ID of the videos to be deleted","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Query Parameters for Get Videos","muted segment in a video.","Return Values for Get Videos","Cursor for forward pagination: tells the server where to …","Cursor for backward pagination: tells the server where to …","","","","","","","Create a builder for building <code>GetVideosRequest</code>. On the …","","","","","","","Date when the video was created.","","Description of the video.","","","","Length of the video.","Duration of the muted segment.","","","","","","","Number of values to be returned when getting videos by …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","ID of the game the video is of.","ID of the game the video is of.","ID of the video being queried. Limit: 100. If this is …","ID of the video.","IDs of the videos being queried.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Language of the video being queried. Limit: 1.","Language of the video.","Muted segments in the video.","Offset in the video at which the muted segment begins.","Period during which the video was created. Valid values: …","Date when the video was published.","","","","","Sort order of the videos. Valid values: “time”, “…","ID of the stream that the video originated from if the …","Template URL for the thumbnail of the video.","Title of the video.","","","","","","","","","","Type of video. Valid values: “all”, “upload”, “…","Type of video. Valid values: “upload”, “archive”, …","","","","URL of the video.","ID of the user who owns the video.","ID of the user who owns the video.","ID of the user who owns the video.","Login of the user who owns the video.","Display name corresponding to user_id.","Number of times the video has been viewed.","Indicates whether the video is publicly viewable. Valid …","","","","Body Parameters for Send Whisper","Query Parameters for Send Whisper","Return Values for Send Whisper","Successfully sent the whisper message or the message was …","The ID of the user sending the whisper. This user must …","The whisper message to send. The message must not be empty.","Sends a whisper message to the specified user. <code>send-whisper</code>","The ID of the user to receive the whisper.","Body Parameters for Send Whisper","Query Parameters for Send Whisper","Return Values for Send Whisper","Successfully sent the whisper message or the message was …","","","","","","","Create a builder for building <code>SendWhisperRequest</code>. On the …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","The ID of the user sending the whisper. This user must …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The whisper message to send. The message must not be empty.","Create a new <code>SendWhisperRequest</code>","Create a new message","","","","","","","","The ID of the user to receive the whisper.","","","","","","","","","","","","","","AutoMod flags a message as potentially inappropriate, and …","Response from the automod_queue::AutoModQueue topic.","Anyone shares a bit badge in a specified channel.","Response from the …","Anyone cheers in a specified channel.","Response from the channel_bits::ChannelBitsEventsV2 topic.","A user redeems a cheer with shared rewards.","Response from the channel_cheer::ChannelCheerEventsPublicV1…","A user redeems an reward using channel points.","Response from the channel_points::ChannelPointsChannelV1 …","A user gifts subs.","Response from the channel_sub_gifts::ChannelSubGiftsV1 …","A subscription event happens in channel","Response from the …","A moderator performs an action in the channel.","Response from the moderation::ChatModeratorActions topic.","A user redeems an reward using channel points.","Response from the …","A user follows the channel","Response from the following::Following topic.","A user redeems an reward using channel points.","Response from the hypetrain::HypeTrainEventsV1 topic.","A user redeems an reward using channel points.","Response from the hypetrain::HypeTrainEventsV1Rewards …","Message received containing all applicable data","Response from a ping","A user raids the channel","Response from the raid::Raid topic.","Request for the client to reconnect","Response from twitchs PubSub server. Either a response …","Response from a subscription/unsubscription","Scopes needed by this topic","A logical partition of messages that clients may subscribe …","Message response from twitch PubSub.","All possible topics","Response from twitch PubSub","A user’s message held by AutoMod has been approved or …","A user’s message held by AutoMod has been approved or …","Statistics about stream","Response from the video_playback::VideoPlayback topic.","Statistics about stream","Response from the video_playback::VideoPlaybackById topic.","PubSub messages for when AutoMod flags a message as …","","","","","","","","","PubSub messages for bits","PubSub messages for bits","PubSub messages for cheer events","PubSub messages for channel points","PubSub messages for sub gifts","PubSub messages for subscriptions","","","","","","","","","PubSub messages for community points.","","","","","","","","","","","The error message associated with the request, or an empty …","","","","","","PubSub messages for follows","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","PubSub messages for hype-trains","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this into a <code>Topics</code>","Whether response indicates success or not","Create a listen command.","PubSub messages for moderator actions","The nonce that was passed in the request, if one was …","Parse string slice as a response.","PubSub messages for raids","","","","","","","","","","","","","","","","","","","","Create a unlisten command.","PubSub messages for user moderation notifications","PubSub messages for (live) stream playback information","","","","","Data corresponding to topic message","Message reply from topic subscription","Message reply from topic subscription","Message reply from topic subscription","Message reply from topic subscription","Message reply from topic subscription","Message reply from topic subscription","Message reply from topic subscription","Message reply from topic subscription","Message reply from topic subscription","Message reply from topic subscription","Message reply from topic subscription","Message reply from topic subscription","Message reply from topic subscription","Message reply from topic subscription","Message reply from topic subscription","Message reply from topic subscription","Topic message","Topic message","Topic message","Topic message","Topic message","Topic message","Topic message","Topic message","Topic message","Topic message","Topic message","Topic message","Topic message","Topic message","Topic message","Topic message","Message held by automod","Message held by automod","A user follows the channel","Reply from AutoModQueue","Specific AutoMod classification","Fragment that is classified under a AutoMod category which …","The contents of a AutoMod message","Classification for content according to AutoMod","A fragment of a AutoModded message","A mentioned user in a fragment","Message that was caught by AutoMod","A user according to Automod","A users badges in the chat","Fragment that is not classified under a AutoMod category","A text fragment that mentions another user","Senders badges","","","","","","","","","","","","","","","","","","","","","","","Category for classification","The channel_id to watch. Can be fetched with the Get Users …","Color of the user","","","","","","","","","","","","","","","","","","","","","","","The content of the message","Classification of caught message","","","","","","","","","","","","Display name of user","Display name of the user","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The message split up in fragments.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Chat ID of the message","Id or type of the badge","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Level of classification, eg. how strongly related the …","Login name of the user, not capitalized","Username of the user","The message that was sent","The currently authenticated moderator","Language of the part of the message that was caught","Code for reason","User ID of who resolved the message in the queue","Username of who resolved the message in the queue","User that sent the message","Time at which the message was sent","","","","","","","","","","","","Status of the message in the queue","The full message that was sent","","","","","","","","","","","","","The different topics and their level for the automod …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ID of the user","User ID of the user","Version of the badge","","","","","","","","","","","","AutoMod classification of the fragment","Text associated with this fragment","Text associated with this fragment","Text associated with this fragment","User mentioned","<code>ChannelBitsEventsV2Reply::BitsEvent</code> event unlocked new …","Context that triggered pubsub message","Bits event","Data for bits event","Anyone cheers in a specified channel.","Reply from ChannelBitsEventsV2","Cheer","If set, describes new unlocked badge for user","The number of bits that were sent.","","","","","","","","","","","The channel_id to watch. Can be fetched with the Get Users …","ID of channel where message was sent","Username of channel where message was sent","The full message that was sent with the bits.","","","","","","","","","","","Context of <code>bits_event</code>, seems to only be <code>cheer</code>","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether the cheer was anonymous.","","","","","","Time when pubsub message was sent","","","","","","","The total number of bits that were ever sent by the user …","","","","","","","","","","","","","","","","","ID of user that sent message","Name of user that sent message","","","","","","Data associated with reply","Message ID of message associated with this <code>bits_event</code>","Version of <code>channel-bits-events-v2</code> reply","Anyone shares a bit badge in a specified channel.","Reply from ChannelBitsBadgeUnlocks","Value of Bits badge tier that was earned (1000, 10000, …","","","","","The channel_id to watch. Can be fetched with the Get Users …","ID of channel where user earned the new Bits badge","Login of channel where user earned the new Bits badge","Custom message included with share","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Time when the new Bits badge was earned.","","","","","","","","","","","ID of user who earned the new Bits badge","Login of user who earned the new Bits badge","","","A user redeems a cheer with shared rewards.","Reply from ChannelCheerEventsPublicV1","Cheer","A cheer bomb happened","Subscription gift","Subscription","Trigger for cheer event/cheer bomb","","","","","","","The channel_id to watch. Can be fetched with the Get Users …","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Display name of user","Domain of cheer reward. Name of active twitch event","Selected count for cheer. e.g How many that will receive …","Unknown","Unknown","Type of cheerbomb.","Id of the user","Login name of the user, not capitalized","Redemption was updated. Rejected or completed","A user redeems an reward using channel points.","Reply from ChannelPointsChannelV1","A custom reward was updated","Redemption was fullfilled, e.g it skipped reward queue","`update-redemption-statuses-finished``progress","A redemption users can “buy” with channel points to …","Status for redemption","Status of a redemption was changed","Reward data","A reward was redeemed","Redemption is not fullfilled, e.g is in reward queue.","Status of multiple redemptions were changed","Status of multiple redemptions were changed","Color of background in rewards &amp; challenges screen on …","","","","","","","","","","","","","The channel_id to watch. Can be fetched with the Get Users …","ID of channel where the redemption was triggered","ID of channel where the redemption was triggered","ID of channel user","","","","","","","","","","","","","Cooldown will expire after this timestamp","Cost of reward.","A cursor for something","Default image of reward in rewards &amp; challenges screen on …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Information about global cooldown","","ID of the redemption. Also returned in twitch IRC","ID of reward.","BASE64 representation of reward","Set image of reward in rewards &amp; challenges screen on …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Reward is enabled or not.","Reward is in stock","Reward is paused","Reward is sub only","Reward requires input from user on rewards &amp; challenges …","Maximum redemptions per stream","Maximum redemptions per user per stream","Method by which redemptions were set to new status","New status of redemptions","Total amount of redemptions changed","Prompt shown when clicking reward on rewards &amp; challenges …","Timestamp in which a reward was redeemed","Amount of times this has been redeemed this stream.","Data about the reward that was redeemed","","","","","","","Does redemption skip queue?","reward redemption status, will be FULFILLED if a user …","Template ID","Title or Name of reward","","","","","","","","Total redemptions","","","","","","","","","","","","","","","","","","","","Unknown","User that triggered the reward","A string that the user entered if the reward requires input","","","","","","","Data about the reward that had status updated","Data about the reward that had status updated","Data about the redemption, includes unique id and user …","Data about the reward that had status updated","Time the pubsub message was sent","Time the pubsub message was sent","Time the pubsub message was sent","Time the pubsub message was sent","Time the pubsub message was sent","Data about the reward that was updated","A user gifts subs.","Reply from ChannelSubGiftsV1","Mystery gift","Mystery gift","","","","","","","The channel_id to watch. Can be fetched with the Get Users …","Channel where mystery gifts were distributed","","","","","","","Amount of mystery gifts","","","","Display name of user that purchased mystery gifts","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Tier of mystery gifts","","","","","","","","","","","","","","","User ID of user that purchased mystery gifts","User name of user that purchased mystery gifts","Unknown","","","","A subscription event happens in channel","Reply from ChannelSubscribeEventsV1","Described where in a message an emote is","User extends a (gifted) sub","User extends sub through the month.","A resubscription","A resubscription","Gifted resubscription with optional message","Gifted resubscription with optional message","A subscription","A subscription","A gifted subscription happened","A gifted subscription happened","Message sent with subscription","Unknown","Unknown","Unknown","Unknown","Unknown","","","","","","","","","","","","","","","","","","","The channel_id to watch. Can be fetched with the Get Users …","ID of the channel that has been subscribed or subgifted","ID of the channel that has been subscribed or subgifted","ID of the channel that has been subscribed or subgifted","ID of the channel that has been subscribed or subgifted","ID of the channel that has been subscribed or subgifted","Name of the channel that has been subscribed or subgifted","Name of the channel that has been subscribed or subgifted","Name of the channel that has been subscribed or subgifted","Name of the channel that has been subscribed or subgifted","Name of the channel that has been subscribed or subgifted","","","","","","","","","","","","","","","","","","","","Cumulative months that user has been subscribed","Cumulative months that user has been subscribed","Cumulative months that user has been subscribed","Cumulative months that user has been subscribed","","","","","","","","","","Display name of user that subscribed","Display name of user that subscribed","Display name of user that purchased gifted subscription","Display name of user that purchased gifted subscription","Display name of user that purchased gifted subscription","Emotes in subscription message","End index of emote in message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","ID of emote","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Resubscription is a gift","Resubscription is a gift","Message in subscription","Months","Months","Months","Duration of subscription, e.g 1, 3 or 6","Duration of subscription, e.g 1, 3 or 6","Duration of subscription, e.g 1, 3 or 6","Duration of subscription, e.g 1, 3 or 6","Duration of subscription, e.g 1, 3 or 6","","Display name of user that received gifted subscription","Display name of user that received gifted subscription","Username of user that received gifted subscription","Username of user that received gifted subscription","Username of user that received gifted subscription","","","","","","","","","","Start index of emote in message","Months the user has been subscribed for in a row.","Months the recipient has been subscribed for in a row.","Message sent with this subscription","Message sent with this subscription","Message sent with this subscription","Message sent with this subscription","Subscription plan","Subscription plan","Subscription plan","Subscription plan","Subscription plan","Name of subscription plan","Name of subscription plan","Name of subscription plan","Name of subscription plan","Name of subscription plan","Time when pubsub message was sent","Time when pubsub message was sent","Time when pubsub message was sent","Time when pubsub message was sent","Time when pubsub message was sent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ID of user that subscribed","ID of user that subscribed","ID of user that purchased gifted subscription","ID of user that purchased gifted subscription","ID of user that purchased gifted subscription","Username of user that subscribed","Username of user that subscribed","Username of user that purchased gifted subscription","Username of user that purchased gifted subscription","Username of user that purchased gifted subscription","","","","","","","","","","A user redeems an reward using channel points.","","","The channel_id to watch. Can be fetched with the Get Users …","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","A user follows the channel","Reply from Following","","","","","The channel_id to watch. Can be fetched with the Get Users …","","","","","","","Display name of user that followed","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","ID of the user that followed","Name of the user that followed","","","The specific action that was used","Reward is a badge","Bits","Rewards","A cheer","Hype train was completed","Reward given to conductors","Unknown","Configuration of hype train","Easy difficulty","Reward is a emote","Reason hype-train ended","Hype train ended","Hard difficulty","Hype train is approaching","Hype train is approaching","Hype train conductor updated","Hype train conductor updated","Hype train cooldown expired","Hype train cooldown expired","Difficulty of Hype Train","Hype train ended","Hype train ended","A user redeems an reward using channel points.","Reply from HypeTrainEventsV1 or HypeTrainEventsV1Rewards","A user redeems an reward using channel points.","Hype train leveled up","Hype train leveled up","Progress of hype train","Hype train progression. Akin to Participations","Hype train progression. Akin to Participations","Hype train rewards","Hype train rewards","Hype train started in channel","Hype train started in channel","Insane difficulty","How many support events needed to start Hype Train","Description of a hype-train level","Medium difficulty","Thresholds for notifications","Conversion table of event to participation points","Participations in hype train","A reward","Source type, same as helix hype-train events type","Subs","Rewards","Super Hard difficulty","Tier 1 sub","Tier 1 gifted sub","Tier 2 sub","Tier 2 gifted sub","Tier 3 sub","Tier 3 gifted sub","Action done to progress","ID of the approaching hype train","Reward to conductor of bits","Bits","Bits","Bits","Bits by extension","Bits by extension","Bits by extension","Bits by poll","Bits by poll","Bits by poll","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hype train public callout emote ID","Hype train public callout emote token","The channel_id to watch. Can be fetched with the Get Users …","The channel_id to watch. Can be fetched with the Get Users …","ID of channel where hype-train was initiated","ID of channel where hype-train was initiated","ID of channel where hype-train was initiated","ID of channel","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Level of hype-train that was initiated","Rewards for conductors","Config of this hype-train","Cooldown duration in nanoseconds for hype train","Creator color","Rewards to bits conductor","Rewards to subscriptions conductor","","","","","","","","","","","","","","","","","","","","","","","","","","","","Difficulty of hype train","Difficulty settings","Period in nanoseconds that events must occur","Server time epoch in milliseconds when hype train ended","Reason why hype train ended","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","remaining events","Server time epoch in milliseconds when hype train ends","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Rewards to former bits conductor","Rewards to former subscriptions conductor","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Participation points needed for this level","Participation points needed in this level","Participation points needed for this level","","","","ID of hype train","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Whether or not Hype Train is enabled in channel","Support events that must occur within a duration of time …","Current level","Duration in nanoseconds of each level","Possible rewards for level one","Minimum participation points needed to kickoff hypetrain","Thresholds for notifications","Number of events needed to kickoff hypetrain","Participators","Conversion rates for participations","Participations in hype train","Participations in hype train","Primary color of hex","Progress of hype train","Progress of hype train","Progress of hype train","Amount of actions done. i.e 500 (five-hundred) bits or 1 …","Time left","Rewards","Description of level rewards","Unknown","","","","","","","","","","","","","","","","","","","","","","","","","","","","Conductor source","Source type of progression","Server time epoch in milliseconds when hype train started","Reward to conductor of subscriptions","Tier 1 gifted subs","Tier 1 gifted subs","Tier 1 gifted subs","Tier 1 sub","Tier 1 sub","Tier 1 sub","Tier 2 gifted subs","Tier 2 gifted subs","Tier 2 gifted subs","Tier 2 sub","Tier 2 sub","Tier 2 sub","Tier 3 gifted subs","Tier 3 gifted subs","Tier 3 gifted subs","Tier 3 sub","Tier 3 sub","Tier 3 sub","Theme color of channel","Server time epoch in milliseconds when hype train expires","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Current amassed participation points in this level","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Server time epoch in milliseconds when hype train was …","Use creator color or not","Uses personalized settings","Use theme color or not","User information of conductor","Display name of user","Id of the user","Login name of the user, not capitalized","Profile picture of user","Current total amassed participation points in all levels","Integer value of reward. 1-5","","","","","","","","","","","","","","","","","","","","","","","","","","","","ID of badge","Group ID of emote","Group ID of badge","ID of emote","ID of badge in this object","URL to image of badge","Level that this emote is from","Level that this badge is from","ID of emote set","Token for this emote","Automod blocked term added","Automod permitted term added","Automod message approved","Unban request approved","Unban Request Approved","Automod message rejected","Ban","A command","Channel Term actions","A channel term was modified, added or removed","Channel moderated","Chat moderated","A moderator performs an action in the channel.","Reply from ChatModeratorActions","Chat targeted login moderation","Chat cleared for all viewers","Delete","Automod blocked term removed","Users own message was deleted.","Automod permitted term removed","Automod message denied","Unban request denied","Unban Request Denied","Emote-only chat enabled","Emote-only chat disabled","Followers-only chat enabled","Followers-only chat disabled","Channel host started","Mod","A moderation action. <code>moderation_action</code>","A moderation action. <code>moderation_action</code>","A command","Moderation type","A moderator was added. <code>moderator_added</code>","A moderator was added. <code>moderator_added</code>","A moderator was removed. <code>moderator_removed</code>","A moderator was removed. <code>moderator_removed</code>","Modified automod properties","Unique chat enabled","Unique chat disabled","Raid","Slow-mode chat enabled","Slow-mode chat disabled","Subscriber-only chat enabled","Subscriber-only chat disabled","Timeout","Unban","Unban request","Channel host removed","Unmod","Unraid","Untimeout","User removed as VIP","User added as VIP","User added as VIP","VIP Added","Arguments for moderation_action","","","","","","","","","","","","","","","","","","","","","","","The channel_id to listen to. Can be fetched with the Get …","ID of channel where moderator was added","ID of channel where moderator was added","ID of channel where channel terms were changed","Id of channel where VIP was added","","","","","","","","","","","","","","","","","","","","","","","User that did moderation action","Username of user that added moderator","Username of user that added moderator","User who made target VIP (usually broadcaster)","Unban response created by user with id","Unban response created by user with login","ID of user that did moderation action","ID of user that added moderator","ID of user that added moderator","User ID of who made target VIP (usually broadcaster)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If the term added is temporary or not and if not, when it …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Moderation action is triggered from automod","If the term was permitted/denied because of a previous …","","Id of term","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Type of action","Moderation action. Should be <code>mod</code>","Moderation action. Should be <code>unmod</code>","Action taken, should be …","Message attached to unban request response","ID of message associated with moderation action","User ID that caused the term","User name that caused the term","","","","","","","","","","","","Target of moderation action","ID of added moderator","ID of added moderator","User ID of who was made VIP","Target user ID of unban request, e.g the user that was …","Username of added moderator","Username of added moderator","User who was made VIP","Target login of unban request, e.g the user that was banned","Term definition","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type of moderation","Type of action done","","","","","","","","","","","","Defined if the term was updated, None if new.","The user_id to listen as. Can be fetched with the Get Users…","","","","","","","","","","","","A user raids the channel","Raid canceled","Raid canceled","Raid go","Raid go","Reply from Raid","Raid update","Raid update","","","","","","","","","","","The channel_id to watch. Can be fetched with the Get Users …","","","","","","","","","","","ID of user would be raided","ID of user would be raided","ID of user would be raided","","","","","","","","","","","","","","","","","","","","","","Raid will be force started in this many seconds","Raid will be force started in this many seconds","Raid would have be force started in this many seconds","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","ID of raid","ID of raid","ID of raid","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","ID of broadcaster doing raid","ID of broadcaster doing raid","ID of broadcaster doing raid","Display name of targeted broadcaster/user","Display name of targeted broadcaster/user","Display name of targeted broadcaster/user","ID of targeted broadcaster/user","ID of targeted broadcaster/user","ID of targeted broadcaster/user","Username of targeted broadcaster/user","Username of targeted broadcaster/user","Username of targeted broadcaster/user","Profile picture of targeted broadcaster/user","Profile picture of targeted broadcaster/user","Profile picture of targeted broadcaster/user","","","","","","","Jitter amount","Jitter amount","Jitter amount","","","","","","","","","","","","","","","","","Amount of viewers that will join raid","Amount of viewers that will join raid","Amount of viewers that would join raid","","","","","","Message held by automod","A user follows the channel","Reply from UserModerationNotifications","","","","","The channel_id to watch. Can be fetched with the Get Users …","","","","","The currently authenticated user for whose automod …","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Identifier of the message","Current status of the message","Archive","Type of broadcast","Commercial started","A premiere, i.e a uploaded video","A rerun, i.e a highlight or saved broadcast","Stream ended","Stream started","Channel hit by TOS strike, meaning it will end","Statistics about stream","Statistics about stream","Reply from VideoPlayback and VideoPlaybackById","Current viewcount on playback","Video on Demand","VOD Watchparty.","Watch party type","","","","","","","","","","","","","Type of broadcast","The channel_login to watch.","The channel_login to watch.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Url increment picture. Unknown usage","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Title of VOD","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Availability of VOD","ID of current VOD","","","","","","","ID of current watch party","Type of current watch party","Length of commercial","Delay as set in broadcaster settings.","Epoch Server time when commercial started","Epoch Server time","Epoch Server time","Epoch Server time","Epoch Server time","Current viewers","information about VOD.","List of “rank“s and what users are in them. A user can …","deserialization failed","Returned by TMI at …","http crate returned an error","hyper crate returned an error","Errors for <code>TmiClient</code> requests","request failed","Client for the twitch TMI endpoint, almost entirely …","User ID","could not parse body as utf8: {1}","Twitch Admins in the chat, have an admin badge, akin to …","","","","","","","Broadcaster, can (probably) only be one","Amount of connected users","Lists of users in their “rank”","Retrieve a clone of the <code>HttpClient</code> inside this <code>TmiClient</code>","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get all the chatters in the chat","Retrieve a reference of the <code>HttpClient</code> inside this …","Twitch Global Moderators in the chat, have an admin badge, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Moderators in the chat, have a moderator badge and are set …","Create a new <code>TmiClient</code> with a default <code>HttpClient</code>","","","","","Twitch Staff in the chat, have a staff badge.","","","","","","","","","","","Regular viewer in the chat, includes followers and …","VIPS in the chat, have the VIP badge and are set with …","","","","Create a new client with an existing client"],"i":[0,0,0,31,0,0,0,0,0,0,3,3,3,3,3,21,22,31,3,21,22,31,3,0,3,21,22,3,21,22,3,3,21,22,3,3,3,0,0,31,31,3,21,22,31,3,3,3,3,3,3,3,3,3,3,3,22,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,22,3,21,22,31,22,0,0,31,0,3,3,3,21,22,3,3,3,3,3,3,3,3,3,31,3,0,22,3,21,22,31,3,21,22,31,3,21,22,31,0,3,21,22,31,0,3,3,3,3,21,22,31,22,585,585,0,96,0,0,0,0,0,0,586,587,1,26,92,92,93,92,93,94,92,96,0,0,0,94,0,0,93,0,0,92,0,92,93,84,84,87,84,84,92,93,94,85,96,87,84,92,93,94,85,96,87,84,84,84,85,84,85,84,84,84,87,84,85,26,26,85,84,84,87,84,84,84,84,84,84,84,84,87,84,84,84,92,92,93,93,94,94,85,85,96,96,87,87,87,87,87,87,87,87,87,84,84,84,84,84,84,84,84,84,92,92,92,92,92,92,92,93,93,93,93,94,94,94,85,96,96,96,96,96,96,96,84,96,84,84,87,84,92,93,94,85,96,84,84,587,586,586,84,87,84,84,84,84,84,84,84,84,87,87,87,92,93,94,85,96,84,1,85,87,84,84,92,93,94,96,84,84,84,85,92,93,94,85,96,84,87,84,92,93,94,85,96,87,84,92,93,94,85,96,87,87,84,92,93,94,85,96,0,87,84,92,93,94,85,96,87,46,47,128,47,128,47,128,47,128,47,128,47,128,47,128,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,138,23,46,0,0,0,0,0,138,0,46,130,46,23,0,23,0,130,23,0,47,128,47,128,0,0,0,138,138,138,47,128,47,128,46,47,128,138,23,0,130,46,24,124,133,46,46,0,0,24,124,133,46,46,46,46,46,46,46,0,0,24,124,24,124,47,128,129,130,138,131,132,123,126,24,127,125,124,133,46,134,47,128,129,130,138,131,132,123,126,24,127,125,124,133,46,134,123,125,129,0,47,128,129,130,131,132,123,126,24,127,125,124,133,46,134,47,128,129,130,131,132,123,126,24,127,125,124,133,46,134,23,132,134,127,132,134,132,134,47,128,129,130,131,132,123,126,24,127,125,124,133,46,134,127,47,128,129,130,131,132,123,126,24,127,125,124,133,46,134,47,129,132,123,126,24,127,125,124,133,46,134,0,47,47,128,129,130,138,138,131,132,123,126,24,127,125,124,133,46,134,47,128,129,130,138,138,138,131,132,123,126,24,127,125,124,133,46,134,47,131,131,132,134,47,128,129,130,138,131,132,123,126,24,127,125,124,133,46,134,130,130,130,24,124,24,124,131,131,131,131,131,138,123,47,128,129,130,131,132,123,126,24,127,125,124,133,46,134,126,127,138,132,134,0,131,47,128,129,130,131,132,123,126,24,127,125,124,133,46,134,47,138,132,134,47,128,129,130,138,131,132,123,126,24,127,125,124,133,46,134,47,128,129,130,138,131,132,123,126,24,127,125,124,133,46,134,24,124,24,124,132,134,47,128,129,130,138,131,132,123,126,24,127,125,124,133,46,134,0,132,134,47,128,129,130,138,131,132,123,126,24,127,125,124,133,46,134,24,24,588,588,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,155,145,147,149,0,143,163,181,183,185,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,155,157,159,161,155,157,159,161,155,157,159,161,142,143,144,145,146,147,148,149,150,151,152,153,154,156,158,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,143,145,147,149,151,153,163,165,167,169,171,173,175,177,179,181,183,185,187,189,191,193,197,199,201,203,205,207,209,211,213,215,143,145,147,149,151,153,163,165,167,169,171,173,175,177,179,181,183,185,187,189,191,193,197,199,201,203,205,207,209,211,213,215,155,215,215,0,0,181,183,185,0,155,157,159,161,155,157,159,161,155,157,159,161,155,157,159,161,0,181,183,185,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,177,201,145,147,149,145,147,149,211,209,157,159,161,169,171,173,194,145,147,149,169,171,173,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,211,171,177,183,189,199,143,181,185,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,175,179,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,0,165,167,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,194,195,203,195,203,195,203,145,147,149,0,175,179,0,145,147,149,151,153,155,157,159,161,169,171,173,175,177,179,181,183,185,187,189,191,193,145,147,149,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,171,163,209,145,147,149,205,207,145,147,149,215,145,147,149,143,145,147,149,215,175,179,177,179,191,187,193,145,147,149,145,147,149,163,211,143,166,196,197,198,199,200,201,202,213,143,197,199,201,213,143,197,199,201,213,187,189,191,193,0,0,175,179,145,147,149,0,143,151,153,145,147,149,151,153,146,148,150,152,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,0,145,147,149,0,159,169,171,173,175,177,179,181,183,185,187,189,191,193,197,201,203,151,153,183,189,161,211,0,0,157,159,161,169,171,173,201,205,207,209,211,145,147,149,181,183,185,187,189,191,193,215,194,195,201,195,201,195,201,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,175,177,179,175,177,179,209,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,169,171,173,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,0,0,143,151,153,155,163,165,167,205,207,209,211,213,151,153,143,151,153,155,163,165,167,205,207,209,211,213,143,151,153,155,163,165,167,205,207,209,211,213,201,203,195,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,189,0,0,143,142,142,143,143,143,142,143,143,143,143,143,143,143,143,143,0,0,0,0,0,0,0,145,147,149,144,145,146,147,148,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,145,147,149,0,146,148,145,147,149,145,147,149,0,0,0,145,144,144,145,145,145,144,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,0,0,147,146,146,147,147,147,146,147,147,147,147,147,147,147,147,147,147,147,147,147,147,146,146,147,147,0,0,149,148,148,149,149,149,148,149,149,149,149,149,149,149,149,149,149,149,149,149,149,148,148,149,149,219,0,0,0,0,219,0,0,219,219,0,218,219,218,219,150,151,152,153,151,153,151,153,218,219,218,219,218,218,219,218,219,218,219,218,219,218,219,151,153,218,218,219,218,151,153,151,153,150,152,218,219,151,153,218,218,219,218,219,218,219,218,219,0,151,153,151,153,151,153,151,153,218,219,0,0,150,150,151,151,151,150,151,151,151,150,150,151,151,151,151,151,0,0,152,152,153,153,153,152,153,153,153,152,152,153,153,153,153,153,0,0,0,0,0,0,0,0,155,155,157,159,161,155,157,159,161,155,157,159,161,154,156,158,160,155,155,157,159,161,155,157,159,161,155,157,159,161,155,157,159,161,157,159,161,0,155,157,159,161,0,0,159,0,161,157,159,161,155,155,155,0,0,155,155,155,155,154,154,154,155,155,155,155,155,155,155,155,155,0,0,157,157,157,156,156,156,157,157,157,157,157,157,157,0,0,159,159,159,158,158,158,159,159,159,159,159,159,159,159,0,0,161,161,161,160,160,160,161,161,161,161,161,161,161,161,0,0,163,162,162,163,163,163,162,163,163,163,163,163,0,0,0,0,164,164,165,166,167,165,167,165,167,164,166,165,167,166,166,165,167,165,167,165,167,0,0,0,0,0,0,0,168,169,170,171,172,173,169,171,173,169,171,173,169,171,173,169,171,173,0,171,169,171,173,171,0,169,171,173,169,171,173,169,171,173,0,0,168,168,169,169,169,168,169,169,169,169,169,169,0,0,170,170,171,171,171,170,171,171,171,171,171,171,171,171,0,0,172,172,173,173,173,172,173,173,173,173,173,173,220,0,0,0,0,0,0,0,0,220,0,220,221,220,221,174,175,176,177,178,179,175,177,179,175,177,179,220,221,220,221,177,220,221,0,177,220,221,220,221,175,179,220,221,220,221,175,179,175,177,179,220,221,175,179,177,179,0,175,179,220,221,175,177,179,220,221,175,177,179,175,177,179,221,220,221,220,221,221,220,221,221,221,221,220,221,0,0,174,174,175,175,175,174,175,175,175,175,175,175,175,175,0,0,176,176,177,177,177,176,177,177,177,177,177,177,177,0,0,178,178,179,179,179,178,179,179,179,179,179,179,179,179,179,0,0,0,0,0,0,0,0,222,223,0,181,183,185,222,223,222,223,180,181,182,183,184,185,181,183,185,181,183,185,181,183,185,181,183,185,222,223,222,223,222,223,0,183,181,185,222,223,222,223,222,223,222,223,181,183,185,222,223,222,223,222,223,0,222,223,181,183,185,183,181,183,185,222,223,222,223,222,223,222,223,222,223,0,0,181,180,180,181,181,181,180,181,181,181,181,181,181,0,0,183,182,182,183,183,183,182,183,183,183,183,183,183,183,0,0,185,184,184,185,185,185,184,185,185,185,185,185,185,0,0,0,0,0,0,0,0,0,186,187,188,189,190,191,192,193,187,189,191,193,187,189,191,193,0,189,187,189,191,193,0,191,187,193,187,189,191,193,0,187,189,191,193,189,187,189,191,193,189,0,0,186,186,187,187,187,186,187,187,187,187,187,0,0,188,188,189,189,189,188,189,189,189,189,189,189,189,0,0,190,190,191,191,191,190,191,191,191,191,191,0,0,192,192,193,193,193,192,193,193,193,193,193,0,0,194,194,194,195,195,195,194,194,195,195,195,195,0,0,0,0,0,196,197,198,199,197,199,197,199,0,199,196,197,198,199,197,199,197,199,197,0,0,196,197,197,197,196,196,197,197,197,196,197,0,0,198,199,199,199,198,199,198,199,199,199,198,0,0,0,0,200,201,202,203,201,203,201,203,201,0,203,203,203,200,201,202,201,201,0,201,203,201,201,201,201,201,203,0,0,200,201,201,201,200,201,200,201,201,201,200,201,201,201,201,201,201,0,0,202,203,203,203,202,203,203,203,202,202,203,203,0,0,204,204,205,205,205,204,205,205,205,205,205,0,0,0,0,0,0,206,207,208,209,210,211,207,209,211,207,209,211,211,209,211,0,0,209,207,0,211,211,207,209,211,209,207,209,211,207,209,211,207,209,211,0,0,206,206,207,207,207,206,207,207,207,207,207,0,0,208,208,209,209,209,208,209,209,209,209,209,209,209,0,0,0,224,224,210,210,211,211,211,210,224,224,211,224,211,224,224,224,224,224,224,211,224,211,224,211,224,224,224,224,211,211,211,224,0,0,212,212,213,213,213,212,213,213,213,213,213,213,0,0,214,214,215,215,215,214,215,215,215,215,215,47,128,47,128,47,128,47,128,47,128,47,128,47,128,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,47,128,0,0,0,47,128,47,128,47,128,47,128,47,128,225,225,225,225,225,225,225,128,225,128,128,128,128,128,128,225,128,225,47,225,225,225,225,128,225,0,0,0,235,226,0,235,226,0,235,226,0,0,235,226,0,0,235,226,0,0,227,228,229,230,231,232,233,234,235,226,227,228,229,230,231,232,233,234,235,226,227,228,229,230,231,232,233,234,235,226,227,228,229,230,231,232,233,234,235,226,230,227,228,229,230,231,232,233,234,235,226,227,228,229,230,231,232,233,234,235,227,228,229,230,231,232,233,234,235,227,228,229,230,231,232,233,234,235,226,227,228,229,230,231,232,233,234,235,226,230,227,228,229,230,231,232,233,234,235,226,230,235,226,227,228,231,232,234,235,226,227,228,231,232,234,226,230,227,228,229,230,231,232,233,234,235,226,229,233,230,227,234,227,234,227,228,229,230,231,232,233,234,235,226,227,228,229,230,231,232,233,234,235,226,227,228,229,230,231,232,233,234,235,226,227,228,229,230,231,232,233,234,235,226,227,228,229,230,231,232,233,234,235,226,589,590,591,592,593,589,590,591,592,593,0,0,0,0,237,238,239,240,237,238,239,240,237,238,239,240,238,240,238,240,237,238,239,240,237,238,239,240,237,238,239,240,237,238,239,240,237,238,239,240,237,238,239,240,237,238,239,240,240,237,238,239,240,0,0,237,238,239,240,240,237,238,239,240,237,238,239,240,237,238,239,240,240,237,238,239,240,237,238,239,240,0,0,237,237,238,238,238,237,0,0,239,239,240,240,240,239,240,240,240,0,0,0,0,0,0,0,241,242,243,244,245,246,241,242,243,244,245,246,241,242,243,244,241,242,243,244,245,246,241,242,243,244,245,246,246,241,242,243,244,245,246,246,241,242,243,244,245,246,241,242,243,244,245,246,241,242,243,244,245,246,241,242,243,244,245,246,241,242,243,244,245,246,241,242,243,244,245,246,241,242,243,244,245,246,241,242,243,244,245,246,241,242,243,244,245,246,241,242,243,244,245,246,0,242,244,245,246,242,244,246,242,244,246,241,242,243,244,245,246,0,0,0,0,241,242,243,244,0,0,242,244,242,244,242,244,0,0,241,241,242,241,242,242,242,0,0,243,243,244,243,244,244,244,0,0,245,246,246,245,245,246,246,246,0,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,70,68,71,0,0,0,10,0,0,10,251,263,255,256,257,258,0,255,256,257,258,259,263,0,0,0,10,0,10,0,10,0,10,0,10,251,10,255,256,257,258,259,0,251,260,260,10,64,64,0,263,254,260,0,0,10,0,0,0,0,0,64,64,0,0,251,263,254,254,255,256,257,258,259,263,248,249,249,248,248,0,10,251,254,255,256,257,258,259,253,249,249,249,248,248,260,250,10,251,254,255,256,257,258,259,253,249,248,260,250,0,0,0,0,0,249,250,249,250,249,248,70,68,65,71,67,253,250,249,249,248,253,249,249,249,248,248,248,253,249,248,0,10,10,251,251,254,254,255,255,256,256,257,257,258,258,259,259,253,249,249,248,248,260,260,10,10,10,10,10,10,10,10,251,251,251,251,254,254,254,254,255,256,257,258,259,253,249,249,249,249,249,249,249,248,248,260,260,260,260,250,249,248,249,248,0,64,64,0,249,248,0,10,251,254,255,256,257,258,259,253,249,260,250,249,248,0,0,249,253,253,68,65,71,70,67,70,68,65,71,67,249,248,0,253,0,0,10,251,254,255,256,257,258,259,260,64,0,0,253,0,0,0,249,248,265,10,251,254,255,256,257,258,259,260,0,0,0,249,0,249,248,250,10,251,254,255,256,257,258,259,249,248,260,253,10,251,254,255,256,257,258,259,253,249,260,250,10,251,254,255,256,257,258,259,253,249,260,250,69,250,10,251,254,255,256,257,258,259,253,249,248,260,250,0,0,10,251,254,255,256,257,258,259,253,249,260,250,0,594,594,594,595,595,594,595,594,595,596,596,597,597,596,597,596,597,598,598,598,599,599,598,599,598,599,600,600,600,601,601,600,601,600,601,602,602,602,603,603,602,603,602,603,604,605,606,607,0,0,0,0,276,271,272,0,0,277,277,272,277,271,277,271,277,272,277,271,0,0,0,0,271,272,273,274,271,272,273,274,271,271,272,273,274,271,272,273,274,271,271,272,271,271,272,273,274,273,271,272,273,274,271,272,273,274,271,272,273,274,271,272,273,274,271,272,273,274,272,271,271,271,271,274,274,271,272,273,274,271,271,273,271,272,273,274,272,271,272,273,274,271,272,273,274,271,272,273,274,271,271,274,274,274,271,272,273,274,278,0,0,0,0,0,278,0,278,278,0,278,0,281,276,277,278,279,280,281,282,283,276,277,278,279,280,281,282,283,276,276,276,279,276,277,278,279,280,281,282,283,276,277,278,279,280,281,282,283,279,280,276,276,277,278,279,280,281,282,283,276,277,278,279,280,281,282,283,276,277,278,279,280,281,282,283,276,277,278,279,280,281,282,283,276,277,278,279,280,281,282,283,283,279,279,276,277,278,279,280,281,282,283,277,277,280,279,276,277,277,276,277,278,279,280,281,282,279,281,277,276,277,278,279,280,281,282,283,276,277,278,279,280,281,282,283,276,277,278,279,280,281,282,283,277,276,277,278,279,280,281,282,283,282,282,282,282,282,276,277,278,279,280,281,282,283,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,296,59,0,0,287,290,292,284,285,287,289,41,290,291,292,294,298,300,41,295,41,291,41,291,286,41,295,41,287,290,292,288,291,41,295,41,0,0,0,0,0,300,301,301,0,0,301,0,41,295,41,295,284,286,287,288,290,292,293,298,288,293,286,288,293,0,0,12,284,12,284,12,284,284,284,12,284,12,284,12,284,12,284,12,284,12,284,12,284,12,284,284,284,12,284,12,284,12,284,12,284,12,284,284,12,0,0,285,286,285,286,285,285,285,285,286,285,286,286,285,286,285,286,285,286,285,286,285,286,285,286,285,286,285,286,285,286,285,286,285,286,286,286,285,286,0,0,287,287,288,287,288,287,287,287,287,288,287,288,287,288,287,288,287,288,287,287,287,288,288,287,288,287,288,287,288,287,287,288,287,288,287,288,287,288,287,287,288,288,288,287,288,0,0,289,41,289,41,289,41,289,41,41,41,289,289,41,289,41,41,41,289,41,289,41,289,41,289,41,289,41,41,41,289,41,289,41,41,41,289,41,289,41,289,41,289,41,289,41,0,0,290,290,291,290,291,290,290,291,291,291,290,290,291,290,291,290,291,290,291,290,291,290,290,290,291,291,290,291,290,291,290,291,290,290,291,290,291,290,291,290,291,290,290,290,291,0,0,292,292,293,292,293,292,292,292,292,293,292,293,292,293,292,293,292,293,292,292,292,293,292,293,292,293,292,293,292,292,293,292,293,292,293,292,293,292,293,292,293,293,292,293,0,0,0,296,294,295,296,294,295,296,294,294,295,295,294,295,294,295,296,294,295,296,295,295,295,294,295,296,294,295,296,294,295,296,294,295,296,294,295,296,295,295,294,295,296,295,294,294,295,296,295,295,295,295,294,295,296,294,295,296,294,295,296,295,294,295,296,294,295,296,0,0,59,298,59,298,59,298,298,298,59,298,59,298,59,298,59,298,59,298,59,298,59,298,59,298,298,298,59,298,59,298,59,298,59,298,59,298,298,59,0,0,0,299,300,301,299,300,301,300,300,299,300,301,299,300,301,299,299,300,301,299,300,301,299,300,301,299,300,301,299,300,301,299,300,301,300,301,301,299,300,301,299,300,301,299,300,301,299,300,301,299,300,301,300,299,300,301,299,300,301,0,0,0,0,305,306,303,304,305,304,304,306,304,304,304,304,304,305,0,0,304,306,304,306,306,306,0,0,303,304,303,304,303,303,304,304,304,303,304,304,304,304,303,304,303,304,304,303,304,303,304,303,304,303,304,303,304,304,303,304,303,303,304,304,303,304,303,304,303,304,303,304,303,304,0,0,305,306,305,306,305,306,305,305,305,306,305,306,305,306,305,306,305,306,305,306,305,305,305,306,305,306,306,305,306,305,306,305,305,306,305,306,305,306,305,306,306,306,306,305,306,0,0,0,72,0,0,0,0,0,0,0,0,0,0,0,0,0,72,72,72,72,0,0,0,0,0,321,74,83,0,0,0,0,0,314,307,308,39,51,43,72,309,307,308,39,51,43,72,309,311,312,313,314,322,324,43,307,308,39,51,43,72,309,307,308,39,51,43,72,309,53,323,326,72,307,308,39,51,43,72,325,43,316,39,39,307,308,39,51,43,72,307,308,39,51,43,72,314,307,308,39,51,43,72,309,309,325,43,325,43,39,51,307,308,39,51,43,72,309,320,0,0,0,0,0,0,0,0,308,39,51,308,308,308,39,51,307,308,39,51,43,72,309,323,313,314,320,322,324,43,39,51,325,43,325,43,309,39,51,0,0,307,308,39,51,43,72,307,325,43,325,43,325,43,39,51,39,320,307,308,39,51,43,72,309,309,307,308,39,51,43,72,72,309,307,308,39,51,43,72,309,307,308,39,51,43,72,309,325,43,0,0,39,315,319,53,326,315,53,315,53,307,307,308,39,51,43,72,309,0,0,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,0,0,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,0,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,0,0,314,314,315,314,315,314,314,314,315,314,315,314,315,314,315,314,315,314,314,314,315,314,315,314,315,314,314,314,315,314,314,315,314,315,314,315,314,315,315,315,315,314,315,0,0,316,45,316,45,316,316,45,316,45,316,45,316,45,316,45,316,45,316,45,316,45,45,316,45,45,45,316,45,45,45,45,316,45,45,316,45,316,45,316,45,316,45,45,316,45,0,0,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,0,0,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,0,0,319,53,319,53,319,319,53,319,53,53,319,53,319,53,319,53,319,53,319,53,319,53,319,53,319,53,319,53,319,53,319,53,319,53,319,53,53,319,53,0,0,321,320,321,320,321,320,320,321,320,321,320,321,320,321,320,321,320,321,320,321,320,320,321,320,320,320,320,320,320,321,320,321,320,321,320,321,320,321,0,0,0,74,322,323,74,322,323,74,322,322,323,322,323,74,322,323,74,323,322,323,74,322,323,74,322,323,74,322,323,74,322,323,74,322,323,74,323,322,322,323,322,322,323,74,322,323,74,322,323,74,322,323,74,323,322,323,74,322,323,74,0,0,0,324,325,324,325,324,324,325,324,325,324,325,325,324,325,325,324,325,324,324,325,325,325,324,325,324,325,324,324,325,325,324,324,325,325,325,325,324,325,324,325,324,325,325,324,325,325,324,325,83,0,0,326,83,326,83,326,326,83,326,83,326,326,83,326,83,326,83,326,83,326,83,326,83,326,326,326,83,326,83,326,83,326,83,326,83,326,326,83,0,3,3,3,3,3,3,3,3,3,0,0,0,0,329,329,329,330,327,330,0,330,330,330,330,328,330,329,329,329,330,0,327,329,330,328,330,329,330,330,330,330,330,330,0,0,327,328,327,328,327,327,327,327,328,327,328,327,328,328,327,328,327,327,328,327,328,327,327,328,327,328,327,328,327,328,327,328,327,328,327,328,327,328,0,0,329,329,329,330,329,330,329,329,330,330,329,329,329,330,329,330,330,330,330,329,330,330,330,329,329,329,329,330,329,329,329,329,330,329,330,329,329,330,329,330,329,330,330,329,330,329,329,329,330,330,329,330,329,330,329,330,329,330,330,330,330,330,329,330,0,0,0,0,0,0,0,30,335,25,25,0,25,0,335,0,25,334,25,336,25,335,332,336,25,336,25,336,332,25,25,335,335,25,0,0,0,331,332,25,331,332,25,331,332,331,332,25,331,332,25,25,25,25,331,332,25,331,332,25,331,332,25,331,332,25,331,332,25,25,331,332,25,25,331,332,331,331,25,25,332,331,332,25,25,25,332,25,331,332,25,331,332,25,332,25,331,332,25,25,331,332,25,0,0,30,334,30,334,30,334,334,30,334,30,30,334,30,334,30,334,30,334,30,334,334,334,30,334,334,30,334,30,334,30,334,30,334,30,334,30,0,0,335,335,336,335,336,335,335,336,335,336,335,336,335,336,335,336,335,335,335,336,335,336,335,336,336,335,335,336,335,335,335,336,335,336,336,336,335,336,335,336,335,335,336,335,335,336,0,0,0,338,338,49,338,0,0,49,337,49,49,337,0,0,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,337,0,0,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,338,0,0,339,340,340,340,340,340,339,340,339,0,339,340,340,340,0,0,339,340,339,340,339,339,340,340,340,339,339,340,339,340,340,340,339,340,339,340,339,340,339,340,339,339,339,340,339,340,339,340,339,340,339,340,340,339,340,339,340,339,340,340,339,340,339,340,341,0,0,0,341,341,341,342,341,342,343,341,342,341,342,343,341,342,341,342,341,342,343,341,342,341,342,0,343,341,342,341,342,341,342,342,341,342,341,342,342,341,342,342,341,342,0,0,0,0,345,343,344,345,346,343,344,345,346,343,343,346,343,343,344,345,346,343,344,345,346,346,343,343,344,345,346,343,344,345,346,343,344,345,346,344,344,344,346,343,343,344,345,346,343,344,345,346,346,343,344,346,343,344,345,346,346,346,343,344,345,346,343,346,343,344,345,346,346,346,343,344,345,346,343,344,345,346,343,344,345,346,344,343,344,345,346,0,0,0,0,367,0,0,0,0,0,0,0,0,0,0,0,367,0,0,0,0,0,0,0,0,0,0,0,0,0,9,27,368,370,58,80,0,0,366,0,0,357,360,0,357,347,347,348,350,351,17,353,356,357,360,362,369,372,373,347,0,347,347,17,347,0,347,352,17,347,347,358,347,357,360,347,347,0,0,0,0,369,347,347,363,355,364,363,0,356,348,350,351,17,356,358,362,364,369,372,373,347,358,364,358,364,354,355,366,354,352,358,0,0,347,349,347,347,347,347,347,0,0,347,352,17,354,357,358,360,361,366,373,358,361,358,361,347,0,0,0,348,349,348,349,348,348,349,348,349,348,349,348,349,348,349,348,349,348,349,348,349,348,349,348,348,349,348,349,349,348,349,348,349,348,349,349,348,349,348,349,0,0,9,350,9,350,9,350,350,350,9,350,9,350,9,350,9,350,9,350,9,350,9,350,9,350,350,350,350,9,350,9,350,9,350,9,350,9,350,9,0,0,0,351,352,17,351,352,17,351,17,351,352,351,352,17,351,352,17,17,351,352,17,352,17,351,352,17,351,352,17,351,352,17,351,352,17,351,352,17,351,17,351,352,351,352,351,352,17,351,352,17,351,352,17,351,352,17,352,351,352,17,352,17,351,352,17,0,0,0,353,354,355,353,354,355,353,353,353,354,353,354,355,353,354,355,353,354,355,353,354,355,353,354,355,353,354,355,353,354,355,353,354,355,355,354,355,354,354,353,354,355,353,354,355,353,354,355,353,354,355,353,354,355,354,353,354,355,0,0,27,356,27,356,27,356,356,356,27,356,27,356,27,356,27,356,27,356,27,356,27,356,27,356,356,356,356,356,356,27,356,27,356,27,356,27,356,27,356,27,0,0,357,357,357,358,357,358,357,357,357,357,358,357,358,357,358,357,358,357,358,358,357,357,357,358,357,358,357,358,358,358,358,358,357,358,357,357,358,357,358,357,358,357,358,357,358,358,358,357,357,358,0,0,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,359,0,0,360,360,361,360,361,360,360,360,360,361,360,361,360,361,360,361,360,361,360,360,360,361,360,361,360,361,360,361,360,360,361,360,361,360,361,360,361,360,361,360,361,361,360,361,0,0,0,362,363,364,362,363,364,362,362,362,363,364,362,363,364,362,363,364,362,363,364,362,363,364,362,363,364,362,363,364,362,363,364,363,364,363,362,364,364,364,362,362,362,363,364,362,363,364,362,363,364,362,363,364,362,363,364,362,363,364,367,0,367,0,0,0,368,366,365,366,367,368,365,366,367,368,365,366,365,366,367,368,365,366,367,368,365,365,366,367,368,365,366,367,368,365,366,367,368,365,366,367,368,365,366,367,367,368,365,366,367,368,366,365,366,365,365,366,367,368,365,366,367,368,365,366,367,368,365,366,367,368,366,365,366,367,368,366,365,366,367,368,0,0,370,369,370,369,370,369,369,369,370,369,370,369,370,369,370,369,370,369,370,369,370,369,369,370,369,369,369,369,370,369,370,369,370,369,370,369,370,369,370,0,0,58,372,58,372,58,372,372,372,58,372,58,372,58,372,58,372,58,372,58,372,58,372,58,372,372,372,372,58,372,58,372,58,372,58,372,58,372,58,80,0,0,373,80,373,80,373,373,373,80,373,80,373,80,373,80,373,80,373,80,373,80,373,80,373,373,373,373,80,373,80,373,80,373,80,373,80,373,373,80,0,0,0,374,375,374,375,374,374,375,374,375,374,375,374,375,374,375,374,375,374,375,374,375,374,375,375,363,375,363,374,374,374,374,375,374,375,374,375,374,375,375,374,375,374,375,376,0,0,0,0,0,0,0,0,376,0,0,380,392,376,0,0,0,0,0,383,378,35,388,376,376,377,379,382,35,383,385,387,390,35,385,35,385,376,376,35,378,35,388,0,35,0,376,376,376,383,376,376,0,0,378,388,35,379,382,35,383,385,387,390,35,376,378,35,388,378,388,35,378,388,378,388,35,388,378,35,388,378,388,35,378,388,35,382,378,35,388,385,35,385,383,390,376,378,35,388,383,383,385,391,378,35,388,376,376,376,376,0,0,385,385,385,385,376,0,0,0,378,377,378,377,378,377,377,377,378,377,378,377,378,378,377,378,377,378,377,378,377,378,377,378,378,377,378,378,378,378,378,378,378,378,378,377,378,377,378,378,378,377,378,377,378,377,378,378,377,378,377,378,0,0,380,379,380,379,380,379,379,379,380,379,380,379,380,379,380,379,380,379,380,379,380,379,379,380,379,379,379,380,379,380,379,380,379,380,379,380,379,380,0,0,35,382,35,382,35,382,382,35,35,35,382,382,35,382,35,35,35,35,382,35,382,35,382,35,382,35,382,35,35,382,35,382,35,382,35,35,35,35,35,35,35,382,382,35,35,382,35,35,35,382,35,382,35,382,35,382,35,382,35,0,0,0,384,384,0,383,383,384,385,386,383,384,385,386,383,383,385,385,385,383,383,384,385,386,383,384,385,386,386,383,384,385,386,383,384,385,386,383,384,385,386,383,383,384,385,386,383,384,385,386,383,385,386,383,383,384,385,386,386,385,385,383,383,383,384,385,386,383,383,383,383,383,385,386,383,384,385,386,383,384,385,386,383,384,385,386,383,384,385,386,385,385,385,385,383,384,385,386,389,0,0,0,388,387,388,389,387,388,389,387,387,388,387,388,389,387,388,389,388,388,387,388,389,387,388,389,387,388,389,387,388,389,387,388,389,388,387,387,388,389,388,388,388,388,388,388,388,388,387,387,388,387,388,389,388,388,387,388,389,387,388,389,387,388,389,388,387,388,389,387,388,389,0,392,0,0,0,390,391,392,390,391,392,385,390,385,385,390,391,390,391,392,390,391,392,390,391,392,390,391,392,390,391,392,390,391,392,390,391,392,385,390,390,391,392,390,390,385,385,390,390,391,392,391,385,391,390,391,392,390,391,392,390,391,392,391,390,391,392,385,385,385,385,390,391,392,0,0,0,0,0,0,0,402,394,404,394,404,394,398,402,404,404,404,394,404,394,404,394,404,0,394,404,0,404,402,0,398,402,404,404,398,404,394,396,404,0,0,0,0,394,394,395,394,396,395,394,396,394,395,394,396,394,394,394,394,394,395,394,396,395,394,396,395,395,394,396,394,395,394,396,395,394,396,395,394,396,395,394,396,395,394,396,395,394,396,395,395,394,396,394,396,395,394,396,395,394,396,395,394,396,394,395,394,396,395,394,396,401,401,399,401,0,0,0,401,399,401,0,399,401,397,398,399,397,398,399,398,397,398,397,398,399,397,398,399,397,397,398,399,397,398,399,397,398,399,397,398,399,397,398,399,398,397,398,399,397,398,397,397,398,398,397,398,399,397,398,399,397,398,399,398,397,398,399,397,398,399,401,401,401,0,401,401,0,0,0,401,402,404,403,404,403,401,402,404,403,401,402,404,402,402,404,404,404,402,404,403,404,404,403,401,402,404,403,401,402,404,403,401,402,404,404,404,403,401,402,404,403,401,402,404,402,403,401,402,404,403,401,402,404,403,402,404,402,403,401,402,404,403,401,402,402,404,404,403,404,403,401,402,404,403,401,402,404,403,401,402,404,403,401,402,404,403,403,401,402,404,0,0,415,415,417,417,417,0,417,0,417,415,0,415,417,417,417,417,417,417,417,0,0,0,0,405,406,407,405,406,407,406,405,406,407,405,406,407,405,406,407,405,405,406,407,405,406,407,405,406,407,405,406,407,405,406,407,405,406,407,405,406,407,406,405,406,405,406,407,406,407,405,406,407,405,406,407,405,406,407,406,405,406,407,405,406,407,410,0,0,0,410,410,408,409,410,408,409,410,409,408,409,408,409,410,408,409,410,408,408,409,410,408,409,410,408,409,410,408,409,410,408,409,410,409,408,409,410,408,409,408,408,409,409,408,409,410,408,409,410,408,409,410,409,408,409,410,408,409,410,409,409,412,412,0,412,0,0,0,0,412,415,414,414,414,414,414,412,416,415,417,414,412,416,415,417,415,415,417,417,417,415,416,414,412,416,415,417,414,412,416,415,417,414,416,417,414,414,412,416,415,417,417,414,414,414,412,416,415,417,414,412,416,415,417,415,414,414,412,416,415,417,414,414,414,414,414,414,414,412,416,415,417,414,414,414,416,415,417,415,414,412,416,415,417,414,414,414,417,414,417,414,417,414,412,416,415,415,417,414,416,417,414,412,416,415,417,414,416,414,412,416,415,417,414,412,416,415,417,414,412,416,415,417,416,414,412,416,415,417,417,0,0,0,0,19,418,0,0,0,0,19,418,19,418,19,418,418,418,418,19,418,19,418,19,418,19,418,19,418,19,418,19,418,19,418,418,19,418,19,418,19,418,19,418,19,418,19,0,0,419,77,419,77,419,419,77,419,77,419,77,419,77,419,77,419,77,419,77,419,77,419,419,419,419,77,419,77,419,77,419,77,419,77,70,68,71,64,64,0,0,0,0,0,0,64,64,70,68,65,71,67,0,64,64,68,65,71,70,67,70,68,65,71,67,64,0,0,10,10,251,263,255,256,257,258,255,256,257,258,259,263,0,10,0,10,0,10,0,10,0,10,251,10,255,256,257,258,259,0,251,10,263,254,10,0,251,263,254,254,255,256,257,258,259,263,263,263,263,263,263,263,263,263,263,263,263,263,263,594,594,594,595,595,594,595,594,595,596,596,597,597,596,597,596,597,598,598,598,599,599,598,599,598,599,600,600,600,601,601,600,601,600,601,602,602,602,603,603,602,603,602,603,604,605,606,607,0,253,253,253,253,253,253,253,253,0,0,0,0,0,0,0,0,430,434,0,0,0,432,423,424,425,426,423,424,425,426,427,429,432,433,423,423,423,424,424,428,423,424,425,426,423,424,425,426,0,0,423,424,425,426,428,424,426,423,424,425,426,423,424,425,426,432,423,424,425,426,423,424,425,426,0,429,432,424,425,423,424,425,426,428,424,433,425,423,428,432,424,426,428,433,428,424,423,424,425,426,423,424,425,426,423,424,425,426,423,424,425,426,0,0,432,423,433,433,423,424,425,426,0,0,0,427,428,427,428,427,427,427,428,428,427,428,427,428,427,428,428,427,428,427,428,427,428,427,428,427,428,428,428,427,428,428,428,428,427,428,427,428,427,428,428,427,428,427,428,0,0,430,429,430,429,430,429,429,429,430,429,430,429,430,429,430,429,430,429,430,429,429,430,429,429,429,430,429,430,429,430,429,430,429,430,429,430,0,0,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,432,434,0,0,433,434,433,434,433,433,433,433,434,433,434,433,434,433,434,433,434,433,434,433,434,433,434,433,433,433,434,433,433,434,433,434,433,434,433,434,433,433,433,434,0,0,0,435,436,435,436,435,435,436,436,435,436,435,436,436,435,436,436,435,436,435,436,435,436,435,436,435,435,436,436,435,435,435,436,436,436,436,435,436,435,436,435,436,436,435,436,435,436,0,0,0,0,437,438,437,49,49,49,439,439,49,49,49,439,49,49,437,438,49,49,439,439,49,439,49,49,439,438,49,437,438,0,0,49,439,439,439,439,439,49,49,49,49,49,0,0,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,437,0,0,438,438,439,438,439,439,439,438,438,439,438,439,438,439,439,438,439,438,439,438,438,438,439,438,439,439,439,439,438,439,439,438,438,438,438,438,439,438,439,439,439,439,439,438,439,438,439,438,439,438,439,438,439,0,0,0,440,440,0,0,0,0,0,447,0,441,443,441,443,440,440,442,445,440,440,440,440,440,441,443,440,440,443,444,444,0,0,0,444,440,440,444,443,444,0,440,444,444,446,444,444,444,440,440,440,444,440,441,443,444,443,444,444,444,440,0,0,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,441,0,0,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,0,0,443,443,443,444,443,444,443,443,444,443,444,443,443,444,443,444,444,443,443,443,444,443,444,443,444,444,444,443,444,444,443,444,443,444,443,444,444,444,444,444,443,444,443,444,443,444,444,443,444,443,444,443,443,444,443,444,444,443,444,0,0,0,447,445,446,447,445,446,447,445,445,445,446,445,446,447,445,446,447,446,445,446,447,445,446,447,445,446,447,445,446,447,445,446,447,445,446,447,445,445,446,447,446,446,445,446,447,445,446,447,445,446,447,446,445,446,447,445,446,447,0,0,0,0,0,0,268,450,448,449,268,269,450,449,269,449,269,0,451,451,451,268,450,0,0,269,449,269,449,269,450,451,449,269,269,449,269,448,268,269,450,269,269,451,0,0,448,449,448,449,448,448,449,449,449,448,448,449,448,449,448,449,448,449,448,449,448,449,448,449,449,449,448,449,449,448,448,449,449,448,449,448,449,448,449,448,449,448,448,448,449,0,0,270,0,270,268,268,269,270,268,269,270,268,268,269,269,269,268,268,269,268,269,268,269,268,269,268,269,268,268,268,269,270,270,268,269,270,270,269,269,269,268,269,270,269,269,270,268,269,268,270,268,269,268,269,270,268,269,270,268,269,270,268,269,270,268,269,269,269,268,269,270,0,0,0,0,452,452,452,450,450,451,452,453,450,451,452,453,450,450,453,453,450,450,451,452,453,450,451,452,453,450,451,452,453,450,451,452,453,450,451,452,453,451,451,451,450,450,451,452,453,450,451,452,453,453,453,450,451,450,451,452,453,453,453,450,451,452,453,450,453,450,451,452,453,450,451,452,453,450,451,452,453,450,451,452,453,450,453,450,453,451,450,451,452,453,0,456,0,0,0,0,456,0,458,454,454,455,455,454,454,454,455,455,456,457,454,455,456,457,454,456,457,454,456,457,454,455,454,454,455,456,457,454,454,454,455,455,455,456,457,454,455,456,457,458,454,454,455,455,456,457,454,454,454,454,454,454,454,455,455,456,456,457,454,455,454,455,0,454,455,457,454,456,457,454,455,457,457,457,454,454,455,456,454,455,456,458,454,454,455,456,457,454,455,454,456,457,454,456,457,454,455,456,457,454,456,457,0,0,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,458,0,459,459,459,459,459,459,459,459,459,459,459,459,0,0,459,459,459,459,459,459,459,459,459,459,459,459,459,0,0,460,461,460,461,460,460,461,461,461,460,460,461,460,461,460,461,460,461,460,461,460,461,460,461,460,461,460,460,461,461,460,461,460,461,460,461,460,461,460,461,0,0,462,463,462,463,462,462,463,462,463,462,463,462,463,462,463,462,463,462,463,462,462,462,463,462,462,462,463,463,462,463,462,463,462,463,462,463,463,462,463,0,0,0,0,0,0,18,81,0,0,0,0,0,468,471,0,468,54,54,54,469,54,54,468,471,472,473,471,473,473,473,0,0,0,470,54,470,54,54,54,465,465,465,474,471,473,473,473,472,54,0,469,469,54,0,0,466,467,467,0,0,467,18,466,465,465,466,467,18,465,466,467,18,465,465,466,467,18,465,466,467,18,465,466,467,18,465,466,467,18,465,466,467,18,465,466,467,18,465,466,467,18,465,466,467,18,465,465,465,465,466,467,18,465,465,465,465,466,467,18,465,466,467,18,465,466,467,18,465,466,467,18,465,466,467,18,0,0,468,468,469,468,469,468,468,468,468,469,468,469,468,469,469,468,469,468,469,468,468,469,468,469,468,469,468,469,468,468,469,468,469,468,469,468,469,469,469,468,469,0,0,470,54,470,54,54,470,470,54,470,54,54,54,470,54,54,54,470,54,470,54,470,54,470,54,470,54,470,470,54,470,54,470,470,54,54,470,54,470,54,470,54,470,54,54,470,54,54,470,54,0,0,0,471,471,472,473,471,472,473,471,471,472,473,471,472,473,471,472,473,471,471,472,473,471,472,473,471,471,472,473,472,473,471,471,471,471,472,473,471,473,473,473,471,472,473,471,471,472,473,471,471,473,473,473,471,472,473,472,471,472,473,471,472,473,471,472,473,471,472,473,81,0,0,474,81,474,81,474,474,81,474,81,474,81,474,81,474,81,474,81,474,81,474,81,474,474,81,474,474,81,474,81,474,81,474,81,474,474,81,476,477,477,476,0,477,476,0,475,475,477,0,0,0,475,476,480,480,475,476,477,475,476,477,475,476,477,475,476,477,481,0,481,475,476,477,481,475,476,477,475,476,477,480,475,476,477,475,476,477,480,0,480,481,475,476,477,480,481,481,480,481,475,476,477,480,481,481,481,475,476,477,475,476,477,475,476,477,480,481,475,476,477,481,480,481,481,481,481,481,475,476,477,0,0,479,478,479,478,479,478,478,479,478,479,478,479,478,479,478,479,478,479,478,479,478,478,478,479,478,478,479,478,479,478,479,478,479,478,479,478,479,0,0,0,480,480,480,481,482,480,481,482,480,480,481,482,480,481,482,481,480,481,480,481,482,481,482,480,481,482,480,481,482,480,480,481,482,480,481,482,480,480,480,481,480,480,481,482,480,481,481,482,480,481,480,481,482,480,480,481,481,481,480,481,482,480,481,482,480,481,482,480,481,480,481,482,481,480,480,481,481,481,481,481,480,481,482,0,0,0,75,483,484,0,483,0,0,0,75,483,484,75,483,484,75,483,483,484,75,483,484,75,483,484,75,483,484,75,483,484,75,483,484,75,483,484,484,75,483,483,484,75,484,483,484,483,483,484,75,483,484,75,483,483,484,75,483,484,75,484,483,484,75,483,484,75,485,487,485,487,485,487,485,487,485,487,485,487,485,487,485,487,485,487,485,487,485,487,485,487,488,488,485,487,488,0,488,608,0,0,0,0,485,487,485,487,485,487,0,485,486,487,488,485,486,487,488,0,0,0,0,0,0,485,486,487,488,485,486,487,488,0,485,486,487,488,485,486,487,488,485,486,486,485,485,486,487,488,0,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,485,486,487,488,485,0,485,486,487,488,608,486,0,0,486,488,0,485,487,485,486,487,488,485,485,486,487,488,485,486,487,488,485,486,487,488,0,0,0,485,486,487,488,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,0,505,0,0,0,512,0,0,0,0,0,0,0,512,512,509,495,505,506,507,508,509,510,511,512,513,514,495,505,506,507,508,509,510,511,512,513,514,507,495,509,495,505,506,507,508,509,510,511,512,513,514,495,505,506,507,508,509,510,511,512,513,514,508,506,495,505,506,507,508,509,510,511,512,513,514,509,513,495,505,506,507,508,509,510,511,512,513,514,495,505,506,507,508,509,510,511,512,513,514,495,495,505,506,507,508,509,510,511,512,513,514,511,495,505,506,507,508,509,510,511,512,513,514,495,508,510,495,505,506,507,508,509,510,511,512,513,514,495,507,509,513,506,495,508,506,506,506,508,508,495,505,506,507,508,509,510,511,512,513,514,506,511,495,505,506,507,508,509,510,511,512,513,514,495,514,495,495,505,506,507,508,509,510,511,512,513,514,495,505,506,507,508,509,510,511,512,513,514,495,505,506,507,508,509,510,511,512,513,514,509,513,510,495,505,506,507,508,509,510,511,512,513,514,626,626,627,628,628,0,0,515,0,0,0,518,516,516,499,515,516,517,518,499,515,516,517,518,499,516,516,516,499,515,516,517,518,499,515,516,517,518,516,499,515,516,517,518,499,515,516,517,518,499,515,516,517,518,499,499,515,516,517,518,499,515,516,517,518,499,499,515,516,517,518,499,516,499,515,516,517,518,516,499,515,516,517,518,499,516,499,499,515,516,517,518,499,515,516,517,518,499,515,516,517,518,516,516,499,515,516,517,518,629,629,629,0,0,519,498,519,498,519,498,519,519,519,498,519,498,519,498,519,498,519,498,519,498,498,519,498,519,498,498,519,498,498,519,519,498,519,498,498,498,519,498,519,498,519,519,519,498,519,0,0,521,520,521,521,0,501,520,521,501,520,521,501,501,520,521,501,520,521,501,520,521,501,520,521,501,520,521,501,501,520,521,501,520,521,501,501,520,521,501,501,520,521,501,520,521,501,501,501,520,521,501,520,521,501,520,521,501,520,521,630,630,630,630,630,630,630,630,523,0,0,526,523,0,0,0,526,0,526,523,526,526,524,502,522,523,524,525,526,502,522,523,524,525,526,502,522,524,525,502,522,523,524,525,526,502,522,523,524,525,526,524,524,522,524,502,522,523,524,525,526,502,522,523,524,525,526,502,522,523,524,525,526,502,502,522,523,524,525,526,502,522,523,524,525,526,524,502,522,524,525,524,502,522,523,524,525,526,502,524,524,524,524,524,524,524,525,525,525,524,522,524,522,502,522,523,524,525,526,524,522,524,524,502,522,523,524,525,526,502,525,502,502,522,523,524,525,526,502,522,523,524,525,526,502,522,523,524,525,526,524,522,522,502,522,523,524,525,526,631,632,633,634,633,635,634,631,632,635,0,0,0,528,503,527,528,503,527,528,503,527,503,527,528,503,527,528,527,503,527,528,527,503,527,528,503,527,528,503,503,527,528,503,527,528,503,503,527,528,503,503,527,528,527,503,527,528,503,503,503,527,528,503,527,528,503,527,528,527,527,527,503,527,528,0,0,0,0,534,0,534,0,534,0,534,0,534,0,529,530,531,532,533,493,529,530,531,532,533,534,535,536,493,529,530,531,532,533,534,535,536,493,529,530,531,532,533,529,530,531,532,533,493,529,530,531,532,533,534,535,536,493,529,530,531,532,533,534,535,536,535,529,530,532,533,493,529,530,531,532,533,534,535,536,529,530,531,532,533,536,535,493,529,530,531,532,533,534,535,536,493,529,530,531,532,533,534,535,536,493,493,529,530,531,532,533,534,535,536,493,529,530,531,532,533,534,535,536,493,535,535,493,529,530,531,532,533,534,535,536,493,529,530,536,531,532,533,529,530,531,532,533,535,531,532,531,531,532,493,529,530,531,532,533,534,535,536,535,530,532,529,530,532,533,529,530,531,532,533,529,530,531,532,533,529,530,531,532,533,493,529,530,531,532,533,534,535,536,493,493,493,529,530,531,532,533,534,535,536,493,529,530,531,532,533,534,535,536,493,529,530,531,532,533,534,535,536,529,530,531,532,533,529,530,531,532,533,493,529,530,531,532,533,534,535,536,0,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,496,0,0,497,537,497,537,497,497,537,497,537,497,537,537,497,537,497,537,497,497,537,497,537,497,497,537,497,497,537,497,537,497,497,497,537,497,537,497,537,537,537,497,537,0,559,560,0,561,562,0,0,0,548,559,0,562,548,0,546,0,546,0,546,0,0,546,0,0,0,0,546,0,0,546,0,546,0,546,548,0,0,548,0,0,0,0,0,560,0,548,561,561,561,561,561,561,543,545,552,550,551,555,550,551,555,550,551,555,492,504,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,492,504,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,547,547,492,504,538,539,545,547,492,504,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,492,504,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,538,547,539,547,545,553,554,492,504,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,547,547,549,540,540,492,504,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,492,504,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,545,539,492,492,504,504,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,553,554,492,504,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,545,557,558,492,504,548,539,492,504,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,492,504,547,547,557,547,545,549,547,549,545,547,539,542,547,539,543,544,543,557,538,558,543,492,504,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,542,543,539,552,550,551,555,550,551,555,550,551,555,550,551,555,550,551,555,550,551,555,547,544,492,504,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,492,504,557,492,492,504,504,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,492,504,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,492,504,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,539,547,547,547,542,543,543,543,543,557,558,492,504,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,636,637,636,637,636,636,637,636,637,637,571,571,570,567,570,570,570,0,0,567,572,572,0,0,572,570,570,571,570,571,570,567,570,570,570,570,570,570,570,0,567,0,0,0,567,0,567,570,570,570,570,570,570,570,570,570,570,0,570,570,570,570,570,570,0,567,563,489,563,564,565,566,567,568,569,570,571,572,489,563,564,565,566,567,568,569,570,571,572,489,564,565,566,568,489,563,564,565,566,567,568,569,570,571,572,489,563,564,565,566,567,568,569,570,571,572,563,564,565,568,569,569,563,564,565,568,489,563,564,565,566,567,568,569,570,571,572,489,563,564,565,566,567,568,569,570,571,572,489,563,564,565,566,567,568,569,570,571,572,566,489,489,563,564,565,566,567,568,569,570,570,571,572,489,563,564,565,566,567,568,569,570,571,572,563,566,489,566,489,563,564,565,566,567,568,569,570,571,572,489,563,564,565,569,569,563,566,566,489,563,564,565,566,567,568,569,570,571,572,563,564,565,568,569,564,565,568,569,566,489,563,564,565,566,567,568,569,570,571,572,489,570,489,489,563,564,565,566,567,568,569,570,571,572,489,563,564,565,566,567,568,569,570,571,572,563,566,489,563,564,565,566,567,568,569,570,571,572,566,489,489,563,564,565,566,567,568,569,570,571,572,0,0,576,0,576,0,0,576,490,573,574,575,576,490,573,574,575,576,490,490,573,574,575,576,490,573,574,575,576,573,574,575,490,573,574,575,576,490,573,574,575,576,490,573,574,575,576,490,490,573,574,575,576,573,574,575,490,573,574,575,576,490,573,574,575,490,573,574,575,576,490,490,573,574,575,576,573,574,575,573,574,575,573,574,575,573,574,575,573,574,575,490,573,574,575,576,490,573,574,575,490,490,573,574,575,576,490,573,574,575,576,490,573,574,575,576,573,574,575,490,573,574,575,576,577,0,0,494,577,494,577,494,494,577,494,577,494,494,577,494,577,494,577,494,494,577,494,577,494,494,577,494,494,577,494,577,494,494,494,577,494,577,494,577,494,577,638,638,581,0,578,580,580,578,578,578,0,0,0,578,0,578,0,500,491,578,579,580,581,500,491,578,579,580,581,579,491,500,500,491,578,579,580,581,500,491,578,579,580,581,500,491,578,579,580,581,500,491,578,579,580,581,500,491,579,580,581,500,500,491,491,578,579,580,581,500,491,578,579,580,581,500,491,579,500,491,578,579,580,581,500,491,500,491,578,579,580,581,579,500,491,578,579,580,581,500,491,500,500,491,491,578,579,580,581,500,491,578,579,580,581,500,491,578,579,580,581,579,579,500,491,578,579,580,581,579,579,639,640,639,641,640,642,643,641,644,0,584,0,584,584,0,584,0,0,584,583,582,583,584,582,583,584,583,582,582,21,582,583,582,583,584,584,582,583,584,584,584,584,584,21,21,583,582,583,584,583,21,584,582,583,584,583,584,582,583,584,582,583,584,582,583,584,583,583,582,583,584,21],"f":[0,0,0,0,0,0,0,0,0,0,[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],[0,[[5,[4]],6]],[0,[7,6,2,8]]],[[11,[9,10]]]],[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],[0,[[5,[4]],6]],[0,[7,6,2,8]]],[[11,[12,10]]]],[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],[0,[[14,[13]],6]],[0,[[14,[[16,[15]]]],6]],[0,[[5,[4]],6]],[0,[[5,[4]],6]],[0,[7,6,2,8]]],[[11,[17,10]]]],[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],[0,[7,6,2,8]]],[[11,[18,10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],[0,[7,6,2,8]]],[[11,[19,10]]]],0,[[[3,[[0,[1,20]]]]],[[3,[[0,[1,20]]]]]],[[[21,[[0,[20,1]]]]],[[21,[[0,[20,1]]]]]],[[[22,[[0,[1,20]]]]],[[22,[[0,[1,20]]]]]],[[]],[[]],[[]],[[[3,[[0,[1,2]]]],[0,[23,6]],24,[0,[7,6,2,8]]],[[11,[[25,[[0,[23,6]]]],10]]]],[[],[[3,[[0,[1,26]]]]]],[[],[[21,[[0,[1,26]]]]]],[[],[[22,[[0,[1,26]]]]]],[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],[0,[[5,[4]],6]],[0,[7,6,2,8]]],[[11,[27,10]]]],[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],[0,[[5,[4]],6]],[0,[[5,[28]],6]],[0,[7,6,2,8]]],[[11,[27,10]]]],[[[3,[[0,[1,2]]]],[0,[[5,[29]],6]],[0,[7,6,2,8]]],[[11,[30,10]]]],0,0,[[31,32],33],[[31,32],33],[[]],[[]],[[]],[[]],[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],34,[0,[7,6,2,8]]],[[11,[[36,[35]],10]]]],[[[3,[[0,[1,2]]]],[5,[4]],[0,[7,6,2,8]]],[[0,[37,6,38]]]],[[[3,[[0,[1,2]]]],[0,[7,6,2,8]]],[[0,[37,6,38]]]],[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],[0,[7,6,2,8]]],[[11,[[36,[39]],10]]]],[[[3,[[0,[1,2]]]],[0,[[5,[40]],6]],[0,[7,6,2,8]]],[[11,[[16,[[36,[39]]]],10]]]],[[[3,[[0,[1,2]]]],[0,[[14,[4]],6]],[0,[7,6,2,8]]],[[11,[[16,[41]],10]]]],[[[3,[[0,[1,2]]]],[0,[[14,[40]],6]],[0,[7,6,2,8]]],[[11,[[16,[41]],10]]]],[[[3,[[0,[1,2]]]],[5,[4]],[0,[7,6,2,8]]],[[0,[37,6,38]]]],[[[3,[[0,[1,2]]]],[0,[42,6]],[0,[7,6,2,8]]],[[11,[[36,[41]],10]]]],[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],[0,[[14,[[16,[4]]]],6]],[0,[7,6,2,8]]],[[11,[43,10]]]],[[[3,[[0,[1,2]]]],[14,[4]],[14,[4]],[14,[[16,[44]]]],[0,[7,6,2,8]]],[[0,[37,6,38]]]],[[[22,[1]]],1],[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],34,[0,[7,6,2,8]]],[[11,[[36,[35]],10]]]],[[[3,[[0,[1,2]]]],[0,[42,6]],[0,[7,6,2,8]]],[[11,[[36,[45]],10]]]],[[[3,[[0,[1,2]]]],[14,[[16,[46]]]],[14,[[16,[47]]]],[16,[4]],[0,[7,6,2,8]]],[[0,[37,6,38]]]],[[[3,[[0,[1,2]]]],[5,[4]],[0,[7,6,2,8]]],[[0,[37,6,38]]]],[[[3,[[0,[1,2]]]],[0,[7,6,2,8]]],[[0,[37,6,38]]]],[[[3,[[0,[1,2]]]],[0,[42,6]],[0,[7,6,2,8]]],[[11,[[50,[48,49]],10]]]],[[[3,[[0,[1,2]]]],[0,[7,6,2,8]]],[[11,[[36,[51]],10]]]],[[[3,[[0,[1,2]]]],[5,[4]],[0,[7,6,2,8]]],[[0,[37,6,38]]]],[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],[0,[7,6,2,8]]],[[11,[52,10]]]],[[[3,[[0,[1,2]]]],[0,[[14,[4]],6]],[0,[7,6,2,8]]],[[11,[[16,[53]],10]]]],[[[3,[[0,[1,2]]]],[0,[[14,[4]],6]],[0,[7,6,2,8]]],[[11,[[16,[54]],10]]]],[[[3,[[0,[1,2]]]],[0,[[14,[40]],6]],[0,[7,2,6,8]]],[[11,[[16,[54]],10]]]],[[[3,[[0,[1,2]]]],[0,[42,6]],[0,[7,6,2,8]]],[[11,[[36,[53]],10]]]],[[[3,[[0,[1,2]]]],[0,[42,6]],[0,[7,6,2,8]]],[[11,[[16,[54]],10]]]],[[[3,[[0,[1,2]]]],[5,[4]],[0,[7,6,2,8]]],[[0,[37,6,38]]]],0,0,[[]],[[]],[[]],[[]],[[],[[22,[[0,[20,26]],1]]]],[[13,34],[[11,[55,31]]]],[[56,34],[[11,[55,31]]]],[57],0,[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],[0,[[5,[4]],6]],[0,[7,6,2,8]]],[[11,[58,10]]]],[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],[0,[[5,[4]],6]],[0,[7,6,2,8]]],[[11,[59,10]]]],[[[3,[[0,[1,2]]]],[61,[[36,[60]]]]],[[63,[[11,[[62,[[36,[60]]]]]]]]]],[[[21,[[0,[1,2]]]],[61,[[36,[60]]]]],[[63,[[11,[[62,[[36,[60]]]]]]]]]],[[[22,[[0,[1,2]]]],[61,[[36,[60]]]]],[[63,[[11,[[62,[[36,[60]]]]]]]]]],[[[3,[6,1]],[0,[64,65]],[0,[7,8]],66],[[11,[[0,[[0,[64,65]],55]],10]]]],[[[3,[6,1]],[0,[64,67]],[0,[7,8]]],[[11,[[0,[[0,[64,67]],55]],10]]]],[[[3,[6,1]],[0,[64,68,68]],69,[0,[7,8]],66],[[11,[[0,[[0,[64,68,68]],55]],10]]]],[[[3,[6,1]],[0,[64,70,70]],69,[0,[7,8]]],[[11,[[0,[[0,[64,70,70]],55]],10]]]],[[[3,[6,1]],[0,[64,71,71]],69,[0,[7,8]],66],[[11,[[0,[[0,[64,71,71]],55]],10]]]],[[[3,[[0,[1,2]]]],[14,[13]],[0,[7,6,2,8]]],[[0,[37,6,38]]]],[[[3,[[0,[1,2]]]],[14,[13]],34,[0,[7,6,2,8]]],[[0,[37,6,38]]]],[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],[0,[[5,[4]],6]],[0,[[14,[13]],6]],[0,[[73,[72]],6]],[0,[7,6,2,8]]],[[11,[74,[0,[[0,[1,2]]]]]]]],[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],[0,[[5,[4]],6]],[0,[[14,[13]],6]],[0,[7,6,2,8]]],[[11,[75,10]]]],[31,[[16,[76]]]],[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],[0,[[5,[4]],6]],[0,[7,6,2,8]]],[[11,[77,10]]]],0,0,[[]],[[]],[[]],[[],78],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[[],79],[[],79],[[],79],[[],79],0,[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],[0,[[5,[4]],6]],[0,[[5,[4]],6]],[0,[7,6,2,8]]],[[11,[80,10]]]],[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],[0,[7,6,2,8]]],[[11,[81,10]]]],[[[3,[[0,[1,2]]]],[0,[[5,[4]],6]],[0,[[14,[82]],6]],[0,[7,6,2,8]]],[[11,[83,10]]]],[[]],[[]],[[]],[[]],[[20,1],[[22,[20,1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[84,44]],[84],[[]],[84],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84],[84],[84,84],[85,85],[[]],[[]],[[84,84],86],[[],84],[[84,44],84],[[],87],[[],84],[[],85],[[]],[[[16,[88]]],11],[[[16,[88]]],[[11,[85]]]],[84],[84],[[],87],[84,34],[[84,89],34],[[84,78],34],[[84,[36,[60,90]]],34],[[84,13],34],[[84,84],34],[[84,8],34],[[],34],[[87,32],[[11,[91]]]],[[84,32],[[11,[91]]]],[[84,32],[[11,[91]]]],[[84,32],[[11,[91]]]],[[92,32],33],[[92,32],33],[[93,32],33],[[93,32],33],[[94,32],33],[[94,32],33],[[85,32],33],[[85,32],33],[[[96,[95]],32],33],[[[96,[97]],32],33],[[[36,[60,90]]],87],[13,87],[[]],[[[98,[37,90]]],87],[78,87],[84,87],[[],87],[99,87],[[[99,[13]]],87],[[[36,[60,90]]],84],[13,84],[89,84],[100,84],[[],84],[101,84],[78,84],[[[98,[90]]],84],[[]],[102,92],[[]],[[[98,[103]]],92],[104,92],[105,92],[106,92],[107,92],[102,93],[106,93],[[]],[104,93],[108,94],[[]],[104,94],[[]],[[]],[109],[[],96],[110],[110],[111],[112],[113,84],[110],[[],84],[[84,114]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84],[84],[[],[[63,[[11,[[61,[[36,[60]]]]]]]]]],[[],[[63,[[11,[[62,[84]]]]]]]],[[],[[63,[[11,[[62,[[36,[60]]]]]]]]]],[84,34],[87,34],[84,44],[[],84],[[84,13],[[16,[86]]]],[[84,[36,[60,90]]],[[16,[86]]]],[[84,78],[[16,[86]]]],[[84,8],[[16,[86]]]],[[84,84],[[16,[86]]]],[84,[[16,[86]]]],[[[115,[87]],116],[[117,[[16,[11]]]]]],[[[115,[87]],116],[[117,[16]]]],[[[115,[87]],116],[[117,[[11,[[16,[[118,[88]]]]]]]]]],[57],[57],[57],[57],[57],[84,44],[119,[[63,[[11,[120]]]]]],[[85,119],[[63,[[11,[120]]]]]],[87,121],[[84,[122,[44]]],84],[84,84],[92,[[16,[76]]]],[93,[[16,[76]]]],[94,[[16,[76]]]],[[[96,[76]]],[[16,[76]]]],[[84,44],84],[[84,44],84],[[]],[[]],[[],78],[[],78],[[],78],[[],78],[[],78],[[84,44]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[115,116],[[117,[[16,[11]]]]]],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[[16,[88]]],[[11,[88,104]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[37,6]]],87],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[24,[[16,[123]]]],[124,[[16,[125]]]],[24,[[16,[126]]]],[124,[[16,[127]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[47,47],[128,128],[129,129],[[[130,[[0,[20,23,20]]]]],[[130,[[0,[20,23,20]]]]]],[[[131,[[0,[20,23,20]]]]],[[131,[[0,[20,23,20]]]]]],[[[132,[[0,[20,23]]]]],[[132,[[0,[20,23]]]]]],[123,123],[126,126],[24,24],[127,127],[125,125],[124,124],[133,133],[46,46],[134,134],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[56,135]]]],0,0,0,0,0,0,0,[136,[[11,[47]]]],[136,[[11,[128]]]],[136,[[11,[129]]]],[136,[[11,[[130,[[0,[23,20]]]]]]]],[136,[[11,[[131,[[0,[23,20]]]]]]]],[136,[[11,[[132,[23]]]]]],[136,[[11,[123]]]],[136,[[11,[126]]]],[136,[[11,[24]]]],[136,[[11,[127]]]],[136,[[11,[125]]]],[136,[[11,[124]]]],[136,[[11,[133]]]],[136,[[11,[46]]]],[136,[[11,[134]]]],0,[[47,47],34],[[128,128],34],[[129,129],34],[[[130,[[0,[137,23,20]]]],[130,[[0,[137,23,20]]]]],34],[[[131,[[0,[137,23,20]]]],[131,[[0,[137,23,20]]]]],34],[[[132,[[0,[137,23]]]],[132,[[0,[137,23]]]]],34],[[123,123],34],[[126,126],34],[[24,24],34],[[127,127],34],[[125,125],34],[[124,124],34],[[133,133],34],[[46,46],34],[[134,134],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],0,[[47,32],33],[[47,32],33],[[128,32],33],[[129,32],33],[[[130,[[0,[95,23,20]]]],32],33],[[138,32],33],[[138,32],33],[[[131,[[0,[95,23,20]]]],32],33],[[[132,[[0,[95,23]]]],32],33],[[123,32],33],[[126,32],33],[[24,32],33],[[127,32],33],[[125,32],33],[[124,32],33],[[133,32],33],[[46,32],33],[[134,32],33],[[]],[[]],[[]],[[]],[31,138],[[]],[139,138],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,[[11,[47]]]],[[[131,[[0,[23,20]]]]],47],[[[131,[[0,[23,20]]]]],13],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[130,[[0,[23,20]]]]],34],[[[130,[[0,[23,20]]]]],34],[[[130,[[0,[23,20]]]]],34],[24,34],[124,34],[24,34],[124,34],0,[[[61,[42]]],[[11,[[131,[23]],138]]]],[13,[[11,[[131,[23]],138]]]],[13,[[11,[[131,[23]],138]]]],[13,[[11,[[131,[23]],138]]]],[57],0,[[47,140],11],[[128,140],11],[[129,140],11],[[[130,[[0,[23,20]]]],140],11],[[[131,[[0,[23,20]]]],140],11],[[[132,[23]],140],11],[[123,140],11],[[126,140],11],[[24,140],11],[[127,140],11],[[125,140],11],[[124,140],11],[[133,140],11],[[46,140],11],[[134,140],11],0,0,[138,[[16,[76]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],78],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[24,[[16,[123]]]],[124,[[11,[125,124]]]],[24,[[16,[126]]]],[124,[[11,[127,124]]]],0,0,[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[141,78],24],[141,24],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[150,150],[151,151],[152,152],[153,153],[154,154],[155,155],[156,156],[157,157],[158,158],[159,159],[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[167,167],[168,168],[169,169],[170,170],[171,171],[172,172],[173,173],[174,174],[175,175],[176,176],[177,177],[178,178],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[185,185],[186,186],[187,187],[188,188],[189,189],[190,190],[191,191],[192,192],[193,193],[194,194],[195,195],[196,196],[197,197],[198,198],[199,199],[200,200],[201,201],[202,202],[203,203],[204,204],[205,205],[206,206],[207,207],[208,208],[209,209],[210,210],[211,211],[212,212],[213,213],[214,214],[215,215],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],194],0,0,0,0,0,0,[136,[[11,[142]]]],[136,[[11,[143]]]],[136,[[11,[144]]]],[136,[[11,[145]]]],[136,[[11,[146]]]],[136,[[11,[147]]]],[136,[[11,[148]]]],[136,[[11,[149]]]],[136,[[11,[150]]]],[136,[[11,[151]]]],[136,[[11,[152]]]],[136,[[11,[153]]]],[136,[[11,[154]]]],[136,[[11,[155]]]],[136,[[11,[156]]]],[136,[[11,[157]]]],[136,[[11,[158]]]],[136,[[11,[159]]]],[136,[[11,[160]]]],[136,[[11,[161]]]],[136,[[11,[162]]]],[136,[[11,[163]]]],[136,[[11,[164]]]],[136,[[11,[165]]]],[136,[[11,[166]]]],[136,[[11,[167]]]],[136,[[11,[168]]]],[136,[[11,[169]]]],[136,[[11,[170]]]],[136,[[11,[171]]]],[136,[[11,[172]]]],[136,[[11,[173]]]],[136,[[11,[174]]]],[136,[[11,[175]]]],[136,[[11,[176]]]],[136,[[11,[177]]]],[136,[[11,[178]]]],[136,[[11,[179]]]],[136,[[11,[180]]]],[136,[[11,[181]]]],[136,[[11,[182]]]],[136,[[11,[183]]]],[136,[[11,[184]]]],[136,[[11,[185]]]],[136,[[11,[186]]]],[136,[[11,[187]]]],[136,[[11,[188]]]],[136,[[11,[189]]]],[136,[[11,[190]]]],[136,[[11,[191]]]],[136,[[11,[192]]]],[136,[[11,[193]]]],[136,[[11,[194]]]],[136,[[11,[195]]]],[136,[[11,[196]]]],[136,[[11,[197]]]],[136,[[11,[198]]]],[136,[[11,[199]]]],[136,[[11,[200]]]],[136,[[11,[201]]]],[136,[[11,[202]]]],[136,[[11,[203]]]],[136,[[11,[204]]]],[136,[[11,[205]]]],[136,[[11,[206]]]],[136,[[11,[207]]]],[136,[[11,[208]]]],[136,[[11,[209]]]],[136,[[11,[210]]]],[136,[[11,[211]]]],[136,[[11,[212]]]],[136,[[11,[213]]]],[136,[[11,[214]]]],[136,[[11,[215]]]],0,0,0,0,0,0,0,0,0,[[142,142],34],[[143,143],34],[[144,144],34],[[145,145],34],[[146,146],34],[[147,147],34],[[148,148],34],[[149,149],34],[[150,150],34],[[151,151],34],[[152,152],34],[[153,153],34],[[154,154],34],[[155,155],34],[[156,156],34],[[157,157],34],[[158,158],34],[[159,159],34],[[160,160],34],[[161,161],34],[[162,162],34],[[163,163],34],[[164,164],34],[[165,165],34],[[166,166],34],[[167,167],34],[[168,168],34],[[169,169],34],[[170,170],34],[[171,171],34],[[172,172],34],[[173,173],34],[[174,174],34],[[175,175],34],[[176,176],34],[[177,177],34],[[178,178],34],[[179,179],34],[[180,180],34],[[181,181],34],[[182,182],34],[[183,183],34],[[184,184],34],[[185,185],34],[[186,186],34],[[187,187],34],[[188,188],34],[[189,189],34],[[190,190],34],[[191,191],34],[[192,192],34],[[193,193],34],[[194,194],34],[[195,195],34],[[196,196],34],[[197,197],34],[[198,198],34],[[199,199],34],[[200,200],34],[[201,201],34],[[202,202],34],[[203,203],34],[[204,204],34],[[205,205],34],[[206,206],34],[[207,207],34],[[208,208],34],[[209,209],34],[[210,210],34],[[211,211],34],[[212,212],34],[[213,213],34],[[214,214],34],[[215,215],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],0,0,[[142,32],33],[[143,32],33],[[144,32],33],[[145,32],33],[[146,32],33],[[147,32],33],[[148,32],33],[[149,32],33],[[150,32],33],[[151,32],33],[[152,32],33],[[153,32],33],[[154,32],33],[[155,32],33],[[156,32],33],[[157,32],33],[[158,32],33],[[159,32],33],[[160,32],33],[[161,32],33],[[162,32],33],[[163,32],33],[[164,32],33],[[165,32],33],[[166,32],33],[[167,32],33],[[168,32],33],[[169,32],33],[[170,32],33],[[171,32],33],[[172,32],33],[[173,32],33],[[174,32],33],[[175,32],33],[[176,32],33],[[177,32],33],[[178,32],33],[[179,32],33],[[180,32],33],[[181,32],33],[[182,32],33],[[183,32],33],[[184,32],33],[[185,32],33],[[186,32],33],[[187,32],33],[[188,32],33],[[189,32],33],[[190,32],33],[[191,32],33],[[192,32],33],[[193,32],33],[[194,32],33],[[195,32],33],[[196,32],33],[[197,32],33],[[198,32],33],[[199,32],33],[[200,32],33],[[201,32],33],[[202,32],33],[[203,32],33],[[204,32],33],[[205,32],33],[[206,32],33],[[207,32],33],[[208,32],33],[[209,32],33],[[210,32],33],[[211,32],33],[[212,32],33],[[213,32],33],[[214,32],33],[[215,32],33],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[142,140],11],[[143,140],11],[[144,140],11],[[145,140],11],[[146,140],11],[[147,140],11],[[148,140],11],[[149,140],11],[[150,140],11],[[151,140],11],[[152,140],11],[[153,140],11],[[154,140],11],[[155,140],11],[[156,140],11],[[157,140],11],[[158,140],11],[[159,140],11],[[160,140],11],[[161,140],11],[[162,140],11],[[163,140],11],[[164,140],11],[[165,140],11],[[166,140],11],[[167,140],11],[[168,140],11],[[169,140],11],[[170,140],11],[[171,140],11],[[172,140],11],[[173,140],11],[[174,140],11],[[175,140],11],[[176,140],11],[[177,140],11],[[178,140],11],[[179,140],11],[[180,140],11],[[181,140],11],[[182,140],11],[[183,140],11],[[184,140],11],[[185,140],11],[[186,140],11],[[187,140],11],[[188,140],11],[[189,140],11],[[190,140],11],[[191,140],11],[[192,140],11],[[193,140],11],[[194,140],11],[[195,140],11],[[196,140],11],[[197,140],11],[[198,140],11],[[199,140],11],[[200,140],11],[[201,140],11],[[202,140],11],[[203,140],11],[[204,140],11],[[205,140],11],[[206,140],11],[[207,140],11],[[208,140],11],[[209,140],11],[[210,140],11],[[211,140],11],[[212,140],11],[[213,140],11],[[214,140],11],[[215,140],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,0,[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[[14,[216]]],142],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],144],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],146],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[146,[14,[217]]],146],0,0,0,0,0,0,[[[14,[216]]],148],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[148,[14,[217]]],148],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[218,218],[219,219],[[]],[[]],0,[136,[[11,[218]]]],[136,[[11,[219]]]],[[218,218],34],[[219,219],34],[[],34],[[],34],[[218,32],33],[[219,32],33],[[]],[[]],0,0,0,[[]],[[]],0,0,0,0,0,0,0,[[218,140],11],[[219,140],11],0,0,0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,[[[14,[216]]],150],0,0,0,0,0,0,0,0,[[150,[14,[217]]],150],0,0,0,0,0,0,0,0,[[[14,[216]]],152],0,0,0,0,0,0,0,0,[[152,[14,[217]]],152],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],154],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],156],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],158],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],160],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],162],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],164],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]],[14,[216]]],166],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],168],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],170],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],172],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[220,220],[221,221],[[]],[[]],0,[136,[[11,[220]]]],[136,[[11,[221]]]],0,0,[[220,220],34],[[221,221],34],[[],34],[[],34],0,0,[[220,32],33],[[221,32],33],[[]],[[]],0,0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,[[220,140],11],[[221,140],11],0,0,0,[[]],[[]],0,0,0,0,0,0,0,[[],11],[[],11],[[],11],[[],11],0,[[],79],[[],79],0,0,0,[[]],[[]],0,0,[[[14,[216]]],174],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],176],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],178],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[222,222],[223,223],[[]],[[]],[136,[[11,[222]]]],[136,[[11,[223]]]],0,0,0,0,[[222,222],34],[[223,223],34],[[],34],[[],34],[[222,32],33],[[223,32],33],[[]],[[]],0,0,0,[[]],[[]],0,0,[[222,222],[[16,[86]]]],[[223,223],[[16,[86]]]],0,[[222,140],11],[[223,140],11],0,0,0,0,0,0,0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,0,[[[14,[216]]],180],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],182],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],184],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],186],0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],188],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],190],0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],192],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],194],0,0,0,0,[[[14,[216]]],194],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]],[14,[216]]],196],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]],[14,[216]]],198],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]],[14,[216]]],200],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]],[14,[216]]],202],0,0,0,0,[[[14,[216]]],204],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],206],0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],208],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[[14,[216]]],210],0,0,0,0,0,[224,224],[[]],0,[136,[[11,[224]]]],0,0,[[224,224],34],[[],34],[[224,32],33],[[]],[[]],0,[[224,140],11],0,0,0,[[]],[[],11],[[],11],[[],79],0,0,0,[[]],0,0,[[[14,[216]]],212],0,0,0,0,0,0,0,0,0,0,0,0,0,[[[14,[216]]],214],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[225,225],[[]],[[225,32],33],[[225,32],33],[[]],[128,[[16,[129]]]],[[]],[128,34],[128,34],[128,34],[13,[[11,[128,138]]]],[[[61,[42]]],[[11,[128,138]]]],[13,[[11,[226,138]]]],[57],[128,[[11,[134,135]]]],[[]],[47,13],[[],78],[[],11],[[],11],[[],79],[[[61,[42]]],34],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[227,227],[228,228],[229,229],[230,230],[231,231],[232,232],[233,233],[234,234],[235,235],[226,226],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[136,[[11,[227]]]],[136,[[11,[228]]]],[136,[[11,[229]]]],[136,[[11,[230]]]],[136,[[11,[231]]]],[136,[[11,[232]]]],[136,[[11,[233]]]],[136,[[11,[234]]]],[136,[[11,[235]]]],[136,[[11,[226]]]],[[227,227],34],[[228,228],34],[[229,229],34],[[230,230],34],[[231,231],34],[[232,232],34],[[233,233],34],[[234,234],34],[[235,235],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[227,32],33],[[228,32],33],[[229,32],33],[[230,32],33],[[231,32],33],[[232,32],33],[[233,32],33],[[234,32],33],[[235,32],33],[[226,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[235,[[99,[13]]]],[226,[[99,[13]]]],0,0,0,0,0,[235,[[99,[236]]]],[226,[[99,[236]]]],0,0,0,0,0,[226,235],0,[[227,140],11],[[228,140],11],[[229,140],11],[[230,140],11],[[231,140],11],[[232,140],11],[[233,140],11],[[234,140],11],[[235,140],11],[[226,140],11],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[237,237],[238,238],[239,239],[240,240],[[]],[[]],[[]],[[]],[136,[[11,[237]]]],[136,[[11,[238]]]],[136,[[11,[239]]]],[136,[[11,[240]]]],[[237,237],34],[[238,238],34],[[239,239],34],[[240,240],34],[[],34],[[],34],[[],34],[[],34],[[237,32],33],[[238,32],33],[[239,32],33],[[240,32],33],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],0,0,[[237,140],11],[[238,140],11],[[239,140],11],[[240,140],11],0,[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[[],79],[[],79],[[],79],[[],79],[[]],[[]],[[]],[[]],0,0,[[[14,[216]]],237],0,0,0,0,0,0,0,[[[14,[216]]],239],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[241,241],[242,242],[243,243],[244,244],[245,245],[246,246],[[]],[[]],[[]],[[]],[[]],[[]],0,[136,[[11,[241]]]],[136,[[11,[242]]]],[136,[[11,[243]]]],[136,[[11,[244]]]],[136,[[11,[245]]]],[136,[[11,[246]]]],0,[[241,241],34],[[242,242],34],[[243,243],34],[[244,244],34],[[245,245],34],[[246,246],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[241,32],33],[[242,32],33],[[243,32],33],[[244,32],33],[[245,32],33],[[246,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[241,140],11],[[242,140],11],[[243,140],11],[[244,140],11],[[245,140],11],[[246,140],11],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[78,241],0,0,0,0,0,0,0,0,[78,243],0,0,0,0,0,0,0,0,[[[14,[216]]],245],0,0,0,0,0,[[]],[[]],[247,247],[[]],0,0,[136,[[11,[247]]]],[[247,247],34],[[],34],[[247,32],33],[[]],[[]],[[247,140],11],[[]],[[],11],[[],11],[[],79],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[248,[[99,[248]]]],[249,13],[249,248],[248,13],[248,13],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[249,248],[249,13],[[]],[[]],[248,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[249,249],[250,250],[[]],[[]],[[249,249],86],[[248,248],86],[[13,13],[[11,[[61,[84]],251]]]],[[13,13],[[11,[[61,[84]],251]]]],[[13,13],[[11,[[61,[84]],251]]]],[[13,13],[[11,[[61,[84]],251]]]],[[13,13],[[11,[[61,[84]],251]]]],0,[[],250],[249],[136,[[11,[249]]]],[136,[[11,[248]]]],[[[253,[[0,[64,137]],[0,[252,137,137]]]],[253,[[0,[64,137]],[0,[252,137,137]]]]],34],[[249,249],34],[[249,248],34],[[249,248],34],[[248,249],34],[[248,249],34],[[248,248],34],[[],34],[[],34],[[],34],0,[[[10,[[0,[95,76,6,2]]]],32],33],[[[10,[[0,[76,6,2]]]],32],33],[[251,32],33],[[251,32],33],[[254,32],33],[[254,32],33],[[255,32],33],[[255,32],33],[[256,32],33],[[256,32],33],[[257,32],33],[[257,32],33],[[258,32],33],[[258,32],33],[[259,32],33],[[259,32],33],[[[253,[[0,[64,95]],[0,[252,137,95]]]],32],33],[[249,32],33],[[249,32],33],[[248,32],33],[[248,32],33],[[260,32],33],[[260,32],33],[258,[[10,[[0,[76,6,2]]]]]],[257,[[10,[[0,[76,6,2]]]]]],[251,[[10,[[0,[76,6,2]]]]]],[259,[[10,[[0,[76,6,2]]]]]],[255,[[10,[[0,[76,6,2]]]]]],[256,[[10,[[0,[76,6,2]]]]]],[261,[[10,[[0,[76,6,2]]]]]],[[]],[260,251],[107,251],[254,251],[[]],[262,254],[102,254],[[]],[263,254],[[]],[[]],[[]],[[]],[[]],[[]],[78,249],[[[99,[248]]],249],[248,249],[[[98,[13]]],249],[[]],[13,249],[[[98,[248]]],249],[13,248],[[[99,[248]]],248],[254,260],[263,260],[[]],[135,260],[[]],[13,249],[13,248],[13,[[11,[249]]]],[13,248],0,[[],[[11,[264,254]]]],[[],[[11,[264,254]]]],0,[[249,114]],[[248,114]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[249,[[98,[248]]]],[[[98,[248]]],249],[[[0,[64,67,265,20,95,6,2]],[0,[7,6,2,8,6,2]],[3,[[0,[1,6,2]]]],[0,[66,6,2,266]]],[[115,[[98,[37]]]]]],0,[78,249],0,0,[[[16,[8]],264,13,267],[[11,[[253,[8]],258]]]],[[[16,[8]],264,13,267],[[11,[[253,[8]],259]]]],[[[16,[8]],264,13,267],[[11,[[253,[8]],256]]]],[[[16,[8]],264,13,267],[[11,[[253,[8]],257]]]],[[[16,[8]],264,13,267],[[11,[[253,[8]],255]]]],[[[16,[8]],264,[62,[[14,[84]]]]],[[11,[[253,[8]],257]]]],[[[16,[8]],264,[62,[[14,[84]]]]],[[11,[[253,[8]],258]]]],[[[16,[8]],264,[62,[[14,[84]]]]],[[11,[[253,[8]],259]]]],[[[16,[8]],264,[62,[[14,[84]]]]],[[11,[[253,[8]],256]]]],[[[16,[8]],264,[62,[[14,[84]]]]],[[11,[[253,[8]],255]]]],[[249,249],[[16,[86]]]],[[248,248],[[16,[86]]]],0,[[[253,[268,[36,[269]]]]],[[11,[52,270]]]],0,0,[57],[57],[57],[57],[57],[57],[57],[57],[57],[[],[[11,[78,263]]]],0,0,0,0,0,0,[[249,140],11],[[248,140],11],[[[16,[249]]]],[[[10,[[0,[76,6,2]]]]],[[16,[76]]]],[251,[[16,[76]]]],[254,[[16,[76]]]],[255,[[16,[76]]]],[256,[[16,[76]]]],[257,[[16,[76]]]],[258,[[16,[76]]]],[259,[[16,[76]]]],[260,[[16,[76]]]],0,0,0,[249,78],0,[[]],[248],[[]],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],[[],78],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[250,[[11,[84,260]]]],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[271,271],[272,272],[273,273],[274,274],[[]],[[]],[[]],[[]],[[271,275],271],0,0,[[],271],[136,[[11,[271]]]],[136,[[11,[272]]]],[136,[[11,[273]]]],[136,[[11,[274]]]],0,[[271,271],34],[[272,272],34],[[273,273],34],[[274,274],34],[[],34],[[],34],[[],34],[[],34],[[271,32],33],[[272,32],33],[[273,32],33],[[274,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],271],[[[16,[271]],264,13,267],[[11,[[253,[271]],255]]]],[[271,[14,[[99,[13]]]]],271],0,0,0,[[271,140],11],[[272,140],11],[[273,140],11],[[274,140],11],[[271,[5,[236]]],271],0,0,[[]],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],[[271,[5,[4]]],271],0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]],276],0,0,0,[276,276],[277,277],[278,278],[279,279],[280,280],[281,281],[282,282],[283,283],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],276],[136,[[11,[276]]]],[136,[[11,[277]]]],[136,[[11,[278]]]],[136,[[11,[279]]]],[136,[[11,[280]]]],[136,[[11,[281]]]],[136,[[11,[282]]]],[136,[[11,[283]]]],[[276,276],34],[[277,277],34],[[278,278],34],[[279,279],34],[[280,280],34],[[281,281],34],[[282,282],34],[[283,283],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[276,32],33],[[277,32],33],[[278,32],33],[[279,32],33],[[280,32],33],[[281,32],33],[[282,32],33],[[283,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[283,114]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],276],0,0,[[276,140],11],[[277,140],11],[[278,140],11],[[279,140],11],[[280,140],11],[[281,140],11],[[282,140],11],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,[284,284],[12,12],[[]],[[]],[136,[[11,[284]]]],[136,[[11,[12]]]],[[284,284],34],[[12,12],34],[[],34],[[],34],[[284,32],33],[[12,32],33],[[]],[[]],[[]],[[]],[[[5,[4]],[5,[4]]],284],[[[16,[284]],264,13,267],[[11,[[253,[284]],257]]]],[[284,140],11],[[12,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[[5,[4]]],285],0,0,[285,285],[286,286],[[]],[[]],0,[136,[[11,[285]]]],[136,[[11,[286]]]],[[285,285],34],[[286,286],34],[[],34],[[],34],[[285,32],33],[[286,32],33],[[]],[[]],[[]],[[]],[[285,140],11],[[286,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,0,[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[[5,[4]]],287],0,0,[287,287],[288,288],[[]],[[]],[136,[[11,[287]]]],[136,[[11,[288]]]],[[287,287],34],[[288,288],34],[[],34],[[],34],[[287,44],287],0,[[287,32],33],[[288,32],33],0,[[]],[[]],[[]],[[]],[[287,140],11],[[288,140],11],[[287,[16,[249]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[287,[5,[4]]],287],0,0,0,0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],0,0,[[[14,[99]]],289],0,0,0,0,[289,289],[41,41],[[]],[[]],0,0,[136,[[11,[289]]]],[136,[[11,[41]]]],[[289,289],34],[[41,41],34],[[],34],[[],34],[[289,32],33],[[41,32],33],[[]],[[]],0,0,[[]],[[]],[[289,140],11],[[41,140],11],0,0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[290,[5,[4]]],290],0,0,0,0,0,[290,290],[291,291],[[]],[[]],[136,[[11,[290]]]],[136,[[11,[291]]]],[[290,290],34],[[291,291],34],[[],34],[[],34],[[290,44],290],0,[[290,32],33],[[291,32],33],0,[[]],[[]],[[]],[[]],[[290,140],11],[[291,140],11],[[290,[16,[249]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[[5,[4]]],290],0,[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[[5,[4]]],292],0,0,[292,292],[293,293],[[]],[[]],[136,[[11,[292]]]],[136,[[11,[293]]]],[[292,292],34],[[293,293],34],[[],34],[[],34],[[292,44],292],0,[[292,32],33],[[293,32],33],[[]],[[]],[[]],[[]],[[292,140],11],[[293,140],11],[[292,[16,[249]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,0,[[292,[14,[99]]],292],0,0,[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]],294],0,[[295,[14,[[99,[13]]]]],295],0,0,0,[294,294],[295,295],[296,296],[[]],[[]],[[]],[[],295],[[295,275],295],0,[136,[[11,[294]]]],[136,[[11,[295]]]],[136,[[11,[296]]]],[[294,294],34],[[295,295],34],[[296,296],34],[[],34],[[],34],[[],34],[[294,32],33],[[295,32],33],[[296,32],33],[[]],[[]],[[]],[[295,[5,[297]]],295],0,[[]],[[]],[[]],[[],295],[[[16,[294]],264,13,267],[[11,[[253,[294]],258]]]],[[294,140],11],[[295,140],11],[[296,140],11],[295,295],0,[[295,[14,[[99,[13]]]]],295],0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[[],79],[[],79],[[],79],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,[298,298],[59,59],[[]],[[]],[136,[[11,[298]]]],[136,[[11,[59]]]],[[298,298],34],[[59,59],34],[[],34],[[],34],[[298,32],33],[[59,32],33],[[]],[[]],[[]],[[]],[[[5,[4]],[5,[4]]],298],[[[16,[298]],264,13,267],[[11,[[253,[298]],259]]]],[[298,140],11],[[59,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[299,299],[300,300],[301,301],[[]],[[]],[[]],[[],299],[136,[[11,[299]]]],[136,[[11,[300]]]],[136,[[11,[301]]]],[[299,299],34],[[300,300],34],[[301,301],34],[[],34],[[],34],[[],34],[[299,32],33],[[300,32],33],[[301,32],33],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],299],[[[5,[4]],[14,[302]]],300],0,[[299,140],11],[[300,140],11],[[301,140],11],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[[],79],[[],79],[[],79],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[5,[4]]],303],0,0,0,0,0,0,0,0,0,[303,303],[304,304],[[]],[[]],0,[136,[[11,[303]]]],[136,[[11,[304]]]],[[303,303],34],[[304,304],34],[[],34],[[],34],[[303,32],33],[[304,32],33],[[]],[[]],0,[[]],[[]],[[[16,[303]],264,13,267],[[11,[[253,[303]],255]]]],[[303,140],11],[[304,140],11],0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[[5,[4]]],305],0,0,0,[305,305],[306,306],[[]],[[]],[136,[[11,[305]]]],[136,[[11,[306]]]],[[305,305],34],[[306,306],34],[[],34],[[],34],[[305,44],305],0,[[305,32],33],[[306,32],33],[[]],[[]],0,[[]],[[]],[[305,140],11],[[306,140],11],[[305,[16,[249]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[307,307],[308,308],[39,39],[51,51],[43,43],[72,72],[309,309],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[],72],[136,[[11,[307]]]],[136,[[11,[308]]]],[136,[[11,[39]]]],[136,[[11,[51]]]],[136,[[11,[43]]]],[136,[[11,[72]]]],0,0,0,0,0,[[307,307],34],[[308,308],34],[[39,39],34],[[51,51],34],[[43,43],34],[[72,72],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],0,[[307,32],33],[[308,32],33],[[39,32],33],[[51,32],33],[[43,32],33],[[72,32],33],[[309,32],33],[[309,32],33],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[57],0,0,0,0,[[307,140],11],[[308,140],11],[[39,140],11],[[51,140],11],[[43,140],11],[[72,140],11],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],11],[[],11],[[],11],[[],11],[[],11],[13,[[11,[72]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,0,0,[39,310],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[[5,[4]]],311],0,0,[311,311],[[]],[136,[[11,[311]]]],[[311,311],34],[[],34],[[311,32],33],[[]],[[]],[[311,140],11],[[]],[[],11],[[],11],[[],79],[[]],0,0,[[]],[[]],[[[5,[4]]],312],0,0,[312,312],[[]],[136,[[11,[312]]]],[[312,312],34],[[],34],[[312,32],33],[[]],[[]],[[312,140],11],[[]],[[],11],[[],11],[[],79],[[]],0,[[]],[[]],[[[5,[4]]],313],0,0,[313,313],[[]],[136,[[11,[313]]]],[[313,313],34],[[],34],[[313,32],33],[[]],[[]],[[313,[5,[4]]],313],0,[[[16,[313]],264,13,267],[[11,[[253,[313]],255]]]],[[313,140],11],[[]],[[],11],[[],11],[[],79],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,[314,314],[315,315],[[]],[[]],[136,[[11,[314]]]],[136,[[11,[315]]]],[[314,314],34],[[315,315],34],[[],34],[[],34],[[314,44],314],0,[[314,32],33],[[315,32],33],[[]],[[]],[[]],[[]],0,[[[5,[4]],[5,[4]]],314],[[314,140],11],[[315,140],11],[[314,[16,[249]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,0,0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],0,[316,316],[45,45],[[]],[[]],[136,[[11,[316]]]],[136,[[11,[45]]]],0,0,[[[14,[99]]],316],0,[[316,316],34],[[45,45],34],[[],34],[[],34],[[316,32],33],[[45,32],33],0,[[]],[[]],0,0,[[]],[[]],0,0,0,[[316,140],11],[[45,140],11],0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[45,310],[[]],[[]],0,0,[[]],[[]],0,[317,317],[[]],[[],317],[136,[[11,[317]]]],[[317,317],34],[[],34],[[317,32],33],[[]],[[]],[[],317],[[317,140],11],[[]],[[],11],[[],11],[[],79],[[]],0,0,[[]],[[]],0,[318,318],[[]],[[],318],[136,[[11,[318]]]],[[318,318],34],[[],34],[[318,32],33],[[]],[[]],[[],318],[[318,140],11],[[]],[[],11],[[],11],[[],79],[[]],0,0,[[]],[[]],[[]],[[]],0,[319,319],[53,53],[[]],[[]],0,[136,[[11,[319]]]],[136,[[11,[53]]]],[[319,319],34],[[53,53],34],[[],34],[[],34],[[319,32],33],[[53,32],33],[[]],[[]],[[]],[[]],[[319,140],11],[[53,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,0,[[[14,[99]]],319],0,0,[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,[320,320],[321,321],[[]],[[]],[136,[[11,[320]]]],[136,[[11,[321]]]],[[320,320],34],[[321,321],34],[[],34],[[],34],[[320,32],33],[[321,32],33],[[]],[[]],0,[[]],[[]],0,[[[5,[4]],[5,[4]],[5,[4]]],320],[[[16,[320]],264,13,267],[[11,[[253,[320]],257]]]],[[320,140],11],0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[322,322],[323,323],[74,74],[[]],[[]],[[]],0,[136,[[11,[322]]]],[136,[[11,[323]]]],[136,[[11,[74]]]],[[322,322],34],[[323,323],34],[[74,74],34],[[],34],[[],34],[[],34],[[322,32],33],[[323,32],33],[[74,32],33],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[5,[4]],[5,[4]]],322],[[[14,[[99,[13]]]],[73,[72]]],[[11,[323]]]],[[[16,[322]],264,13,267],[[11,[[253,[322]],257]]]],[[322,140],11],[[323,140],11],[[74,140],11],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[[],79],[[],79],[[],79],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,0,[324,324],[325,325],[[]],[[]],[[],325],[136,[[11,[324]]]],[136,[[11,[325]]]],0,[[324,324],34],[[325,325],34],[[],34],[[324,32],33],[[325,32],33],0,0,[[]],[[]],[[]],[[]],0,[[[5,[4]],[5,[4]]],324],0,0,[[[16,[324]],264,13,267],[[11,[[253,[324]],258]]]],[[324,140],11],[[325,140],11],0,0,0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[[],79],[[],79],0,[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,[326,326],[83,83],[[]],[[]],0,[136,[[11,[326]]]],[136,[[11,[83]]]],[[326,326],34],[[83,83],34],[[],34],[[],34],[[326,32],33],[[83,32],33],[[]],[[]],[[]],[[]],[[[5,[4]],82],326],[[[16,[326]],264,13,267],[[11,[[253,[326]],256]]]],[[326,140],11],[[83,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,[[]],[[]],0,[[[3,[20,1]]],[20,1]],[[[3,[1]]],1],[[],[[3,[26,1]]]],[[[3,[1]],[0,[64,64,65]],[0,[7,8]]],[[11,[[253,[[0,[64,64,65]],[0,[252,137]]]],10]]]],[[[3,[6,1]],[0,[64,64,67]],[0,[7,8]]],[[11,[[253,[[0,[64,64,67]],[0,[252,137]]]],10]]]],[[[3,[1]],[0,[64,64,68]],69,[0,[7,8]]],[[11,[[253,[[0,[64,64,68]],[0,[252,137]]]],10]]]],[[[3,[1]],[0,[64,64,70]],69,[0,[7,8]]],[[11,[[253,[[0,[64,64,70]],[0,[252,137]]]],10]]]],[[[3,[1]],[0,[64,64,71]],69,[0,[7,8]]],[[11,[[253,[[0,[64,64,71]],[0,[252,137]]]],10]]]],[1,[[3,[1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[5,[4]]],327],0,0,[327,327],[328,328],[[]],[[]],[136,[[11,[327]]]],[136,[[11,[328]]]],0,[[327,327],34],[[328,328],34],[[],34],[[327,32],33],[[328,32],33],[[]],[[]],[[327,34],327],0,0,[[]],[[]],[[327,140],11],[[328,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[[5,[4]]],329],0,0,0,0,[[[14,[99]]],329],[329,329],[330,330],[[]],[[]],0,0,0,[136,[[11,[329]]]],[136,[[11,[330]]]],0,0,[[],329],[[329,[5,[236]]],329],0,[[329,329],34],[[330,330],34],[[],34],[[329,44],329],0,[[329,32],33],[[330,32],33],[[]],[[]],[[[5,[297]]],329],0,0,0,0,[[]],[[]],0,[[329,140],11],[[330,140],11],[[329,[16,[249]]]],[[329,[5,[236]]],329],0,0,0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],[[0,[23]]]],[[],[[0,[23]]]],[[[331,[[0,[20,23]]]]],[[331,[[0,[20,23]]]]]],[[[332,[[0,[20,23]]]]],[[332,[[0,[20,23]]]]]],[[[25,[[0,[20,23]]]]],[[25,[[0,[20,23]]]]]],[[]],[[]],[[]],0,0,0,[[],[[331,[23]]]],[136,[[11,[[332,[23]]]]]],[136,[[11,[[25,[23]]]]]],[[[331,[[0,[137,23]]]],[331,[[0,[137,23]]]]],34],[[[332,[[0,[137,23]]]],[332,[[0,[137,23]]]]],34],[[[25,[[0,[137,23]]]],[25,[[0,[137,23]]]]],34],[[],34],[[],34],[[],34],[[[331,[[0,[95,23]]]],32],33],[[[332,[[0,[95,23]]]],32],33],[[[25,[[0,[95,23]]]],32],33],[[]],[[]],[[]],0,[[]],[[]],[[]],0,[[],[[331,[23]]]],[[23,24],[[332,[23]]]],[[[16,[[331,[23]]]],264,13,267],[[11,[[253,[[331,[23]]]],257]]]],[[[331,[23]],140],11],[[[25,[[0,[333,23]]]],140],11],0,0,[[]],[[]],[[]],0,0,0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[[332,[23]]],[[11,[84,260]]]],0,[[],79],[[],79],[[],79],0,[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,[334,334],[30,30],[[]],[[]],[136,[[11,[30]]]],[[334,334],34],[[30,30],34],[[],34],[[],34],[[334,32],33],[[30,32],33],[[]],[[]],[[[5,[29]]],334],0,[[]],[[]],[[[16,[334]],264,13,267],[[11,[[253,[334]],259]]]],[[334,140],11],[[30,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,[335,335],[336,336],[[]],[[]],[[],335],[136,[[11,[336]]]],[[335,335],34],[[336,336],34],[[],34],[[],34],[[[14,[47]]],335],0,[[335,32],33],[[336,32],33],[[]],[[]],[[]],[[]],0,[[[16,[335]],264,13,267],[[11,[[253,[335]],255]]]],[[335,140],11],[[336,140],11],[[335,[16,[249]]]],[[[14,[46]]],335],0,0,[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],0,[[],79],[[],79],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,[337,337],[[]],[136,[[11,[337]]]],[[337,337],34],[[],34],[[337,32],33],[[]],0,[[[14,[99]]],337],[[]],0,[[[14,[99]]],337],[[337,140],11],[[]],[[],11],[[],11],[[],79],[[]],0,0,0,0,[[]],[[]],0,[338,338],[[]],[[],338],[136,[[11,[338]]]],[[338,338],34],[[],34],[[338,44],338],0,[[338,32],33],[[]],[[]],[[338,140],11],[[338,[16,[249]]]],[[]],[[],11],[[],11],[[],79],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[5,[4]]],339],0,0,0,0,0,[339,339],[340,340],[[]],[[]],0,0,0,0,[136,[[11,[339]]]],[136,[[11,[340]]]],[[339,339],34],[[340,340],34],[[],34],[[],34],[[339,44],339],0,[[339,32],33],[[340,32],33],[[]],[[]],0,0,[[]],[[]],[[339,140],11],[[340,140],11],0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],0,[[],79],[[],79],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,[341,341],[342,342],[[]],[[]],0,[136,[[11,[341]]]],[136,[[11,[342]]]],[[341,341],34],[[342,342],34],[[],34],[[],34],0,[[341,32],33],[[342,32],33],[[]],[[]],0,0,[[]],[[]],[[341,140],11],[[342,140],11],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],0,[[],79],[[],79],0,[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]],343],0,0,0,[343,343],[344,344],[345,345],[346,346],[[]],[[]],[[]],[[]],0,0,[136,[[11,[343]]]],[136,[[11,[344]]]],[136,[[11,[345]]]],[136,[[11,[346]]]],[[343,343],34],[[344,344],34],[[345,345],34],[[346,346],34],[[],34],[[],34],[[],34],[[],34],0,0,0,0,0,[[343,32],33],[[344,32],33],[[345,32],33],[[346,32],33],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[343,140],11],[[344,140],11],[[345,140],11],[[346,140],11],[[343,[16,[249]]]],0,[[]],[[]],[[]],[[]],0,0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[347,347],[[]],0,0,0,[136,[[11,[347]]]],0,0,[[347,347],34],[[],34],0,0,0,0,[[347,32],33],[[]],0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[347,140],11],0,0,[[]],[[],11],[[],11],[[],79],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,0,[348,348],[349,349],[[]],[[]],[136,[[11,[348]]]],[136,[[11,[349]]]],[[348,348],34],[[349,349],34],[[],34],[[],34],[[348,32],33],[[349,32],33],[[]],[[]],[[]],[[]],0,[[[5,[4]],[5,[4]]],348],[[[14,[[99,[13]]]]],349],[[348,140],11],[[349,140],11],0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[[],79],[[],79],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,[350,350],[9,9],[[]],[[]],[136,[[11,[350]]]],[136,[[11,[9]]]],[[350,350],34],[[9,9],34],[[],34],[[],34],[[350,32],33],[[9,32],33],[[]],[[]],[[]],[[]],0,[[[5,[4]],[5,[4]]],350],[[[16,[350]],264,13,267],[[11,[[253,[350]],257]]]],[[350,140],11],[[9,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[351,351],[352,352],[17,17],[[]],[[]],[[]],0,[136,[[11,[351]]]],[136,[[11,[352]]]],[136,[[11,[17]]]],0,0,[[351,351],34],[[352,352],34],[[17,17],34],[[],34],[[],34],[[],34],[[351,32],33],[[352,32],33],[[17,32],33],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[5,[4]],[5,[4]]],351],[[[5,[4]],[14,[[99,[13]]]],[14,[[16,[15]]]]],352],[[[16,[351]],264,13,267],[[11,[[253,[351]],257]]]],0,[[351,140],11],[[352,140],11],[[17,140],11],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[352,[[11,[84,260]]]],[[],79],[[],79],[[],79],0,0,[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]],353],0,0,0,[353,353],[354,354],[355,355],[[]],[[]],[[]],[136,[[11,[353]]]],[136,[[11,[354]]]],[136,[[11,[355]]]],[[353,353],34],[[354,354],34],[[355,355],34],[[],34],[[],34],[[],34],[[353,32],33],[[354,32],33],[[355,32],33],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[[5,[28]],[14,[[99,[13]]]]],354],[[353,140],11],[[354,140],11],[[355,140],11],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],0,[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,[356,356],[27,27],[[]],[[]],[136,[[11,[356]]]],[136,[[11,[27]]]],[[356,356],34],[[27,27],34],[[],34],[[],34],[[356,32],33],[[27,32],33],[[]],[[]],[[]],[[]],[[356,[5,[28]]],356],0,0,[[[5,[4]],[5,[4]]],356],[[[16,[356]],264,13,267],[[11,[[253,[356]],259]]]],[[356,140],11],[[27,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[[5,[4]]],357],0,0,[357,357],[358,358],[[]],[[]],[136,[[11,[357]]]],[136,[[11,[358]]]],[[357,357],34],[[358,358],34],[[],34],[[],34],0,[[357,44],357],0,[[357,32],33],[[358,32],33],[[]],[[]],[[]],[[]],0,0,0,0,[[357,140],11],[[358,140],11],[[357,[16,[249]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,0,0,0,[[357,[14,[99]]],357],[[]],[[]],0,0,0,[[]],[[]],0,0,[359,359],[[]],[136,[[11,[359]]]],[[359,359],34],[[],34],[[359,15],359],0,[[359,32],33],[[]],[[]],0,[[[5,[4]],[5,[4]]],359],[[359,140],11],[[359,[16,[249]]]],[[]],[[],11],[[],11],[[],79],[[]],0,0,0,[[]],[[]],[[]],[[]],[[[5,[4]]],360],0,0,[360,360],[361,361],[[]],[[]],[136,[[11,[360]]]],[136,[[11,[361]]]],[[360,360],34],[[361,361],34],[[],34],[[],34],[[360,44],360],0,[[360,32],33],[[361,32],33],[[]],[[]],[[]],[[]],[[360,140],11],[[361,140],11],[[360,[16,[249]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,0,[[360,[14,[99]]],360],0,0,[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[362,362],[363,363],[364,364],[[]],[[]],[[]],[136,[[11,[362]]]],[136,[[11,[363]]]],[136,[[11,[364]]]],[[362,362],34],[[363,363],34],[[364,364],34],[[],34],[[],34],[[],34],[[362,32],33],[[363,32],33],[[364,32],33],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[[5,[4]],[5,[4]]],362],[[[16,[362]],264,13,267],[[11,[[253,[362]],255]]]],[[362,140],11],[[363,140],11],[[364,140],11],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[365,365],[366,366],[367,367],[368,368],[[]],[[]],[[]],[[]],[[],365],[136,[[11,[365]]]],[136,[[11,[366]]]],[136,[[11,[367]]]],[136,[[11,[368]]]],[[365,365],34],[[366,366],34],[[367,367],34],[[368,368],34],[[],34],[[],34],[[],34],[[],34],[[365,32],33],[[366,32],33],[[367,32],33],[[368,32],33],[[]],[[]],[34,367],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],365],[[[5,[4]],[5,[28]],[14,[367]]],366],[[[16,[365]],264,13,267],[[11,[[253,[365]],257]]]],[[365,140],11],[[366,140],11],[[367,140],11],[[368,140],11],[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[[],79],[[],79],[[],79],[[],79],0,[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,[369,369],[370,370],[[]],[[]],[136,[[11,[369]]]],[136,[[11,[370]]]],[[369,369],34],[[370,370],34],[[],34],[[],34],[[369,32],33],[[370,32],33],[[]],[[]],0,[[]],[[]],0,[[[5,[4]],[5,[4]],[5,[371]]],369],[[[16,[369]],264,13,267],[[11,[[253,[369]],259]]]],[[369,140],11],[[370,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,[372,372],[58,58],[[]],[[]],[136,[[11,[372]]]],[136,[[11,[58]]]],[[372,372],34],[[58,58],34],[[],34],[[],34],[[372,32],33],[[58,32],33],[[]],[[]],[[]],[[]],0,[[[5,[4]],[5,[4]]],372],[[[16,[372]],264,13,267],[[11,[[253,[372]],259]]]],[[372,140],11],[[58,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,[373,373],[80,80],[[]],[[]],[136,[[11,[373]]]],[136,[[11,[80]]]],[[373,373],34],[[80,80],34],[[],34],[[],34],[[373,32],33],[[80,32],33],[[]],[[]],[[]],[[]],0,[[[5,[4]],[5,[4]],[5,[4]]],373],[[[16,[373]],264,13,267],[[11,[[253,[373]],259]]]],[[373,140],11],[[80,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,0,[374,374],[375,375],[[]],[[]],[136,[[11,[374]]]],[136,[[11,[375]]]],[[374,374],34],[[375,375],34],[[],34],[[],34],[[374,32],33],[[375,32],33],[[]],[[]],[[]],[[]],[34,375],0,0,0,0,[[[5,[4]],[5,[4]]],374],[[[16,[374]],264,13,267],[[11,[[253,[374]],256]]]],[[374,140],11],[[375,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[[],79],[[],79],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[376,376],[[]],0,0,0,0,0,0,0,[136,[[11,[376]]]],[[376,376],34],[[],34],0,[[376,32],33],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[376,140],11],0,0,0,0,0,0,0,0,0,0,[[]],[[],11],[[],11],[[],79],0,0,0,0,0,0,[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[[5,[4]]],377],0,0,0,[377,377],[378,378],[[]],[[]],0,[136,[[11,[377]]]],[136,[[11,[378]]]],[[377,377],34],[[378,378],34],[[],34],[[],34],[[377,32],33],[[378,32],33],[[]],[[]],0,[[]],[[]],0,0,0,0,0,0,0,[[[14,[[99,[13]]]],44],378],[[[16,[377]],264,13,267],[[11,[[253,[377]],257]]]],0,[[377,140],11],[[378,140],11],0,0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[[],79],[[],79],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,[379,379],[380,380],[[]],[[]],[136,[[11,[379]]]],[136,[[11,[380]]]],[[379,379],34],[[380,380],34],[[],34],[[],34],[[379,32],33],[[380,32],33],[[]],[[]],0,[[]],[[]],[[[5,[4]],[5,[381]]],379],[[[16,[379]],264,13,267],[[11,[[253,[379]],259]]]],[[379,140],11],[[380,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[[5,[4]]],382],0,0,0,0,0,[382,382],[35,35],[[]],[[]],0,0,0,[136,[[11,[382]]]],[136,[[11,[35]]]],[[382,382],34],[[35,35],34],[[],34],[[],34],[[382,32],33],[[35,32],33],[[]],[[]],0,0,0,[[382,[14,[99]]],382],0,[[]],[[]],0,0,0,0,0,0,[[382,34],382],0,0,0,[[382,140],11],[[35,140],11],0,0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]],383],0,0,0,0,0,[383,383],[384,384],[385,385],[386,386],[[]],[[]],[[]],[[]],0,[136,[[11,[383]]]],[136,[[11,[384]]]],[136,[[11,[385]]]],[136,[[11,[386]]]],[[383,383],34],[[384,384],34],[[385,385],34],[[386,386],34],[[],34],[[],34],[[],34],[[],34],0,[[383,32],33],[[384,32],33],[[385,32],33],[[386,32],33],[[]],[[]],[[]],[[]],0,0,0,[[383,[14,[99]]],383],[[]],[[]],[[]],[[]],0,0,0,[[383,[5,[381]]],383],0,[[383,140],11],[[384,140],11],[[385,140],11],[[386,140],11],[[383,[16,[249]]]],[[383,[14,[384]]],383],0,[[383,[14,[376]]],383],0,0,0,[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[387,387],[388,388],[389,389],[[]],[[]],[[]],0,[[],388],[136,[[11,[387]]]],[136,[[11,[388]]]],[136,[[11,[389]]]],[[387,387],34],[[388,388],34],[[389,389],34],[[],34],[[],34],[[],34],[[387,32],33],[[388,32],33],[[389,32],33],[[]],[[]],[[]],0,0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[[5,[4]],[5,[381]]],387],[[[16,[387]],264,13,267],[[11,[[253,[387]],258]]]],0,[[387,140],11],[[388,140],11],[[389,140],11],0,0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[[],79],[[],79],[[],79],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[390,390],[391,391],[392,392],[[]],[[]],[[]],[136,[[11,[390]]]],[136,[[11,[391]]]],[136,[[11,[392]]]],[[390,390],34],[[391,391],34],[[392,392],34],[[],34],[[],34],[[],34],[[390,32],33],[[391,32],33],[[392,32],33],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[[5,[4]],[5,[381]],[5,[393]]],390],[[[16,[390]],264,13,267],[[11,[[253,[390]],258]]]],0,0,0,[[390,140],11],[[391,140],11],[[392,140],11],[376,391],0,0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[[],79],[[],79],[[],79],0,0,0,0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[394,52],394],0,[[394,34],394],0,0,[395,395],[394,394],[396,396],[[]],[[]],[[]],[[],395],[136,[[11,[395]]]],[136,[[11,[394]]]],[136,[[11,[396]]]],0,[[395,395],34],[[394,394],34],[[396,396],34],[[],34],[[],34],[[],34],[[395,32],33],[[394,32],33],[[396,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[],395],[[[5,[4]],[14,[[99,[13]]]],52,[14,[99]]],394],[[[14,[[99,[13]]]]],396],[[[16,[395]],264,13,267],[[11,[[253,[395]],257]]]],[[395,140],11],[[394,140],11],[[396,140],11],0,0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[[],79],[[],79],[[],79],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[397,397],[398,398],[399,399],[[]],[[]],[[]],[[],397],[136,[[11,[397]]]],[136,[[11,[398]]]],[136,[[11,[399]]]],[[397,397],34],[[398,398],34],[[399,399],34],[[],34],[[],34],[[],34],[[397,32],33],[[398,32],33],[[399,32],33],[[]],[[]],[[]],0,[[]],[[]],[[]],[[],397],[[[5,[4]],[5,[400]],401],398],[[[16,[397]],264,13,267],[[11,[[253,[397]],258]]]],[[397,140],11],[[398,140],11],0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[[],79],[[],79],[[],79],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]],402],0,0,0,0,0,0,0,0,0,[403,403],[401,401],[402,402],[404,404],[[]],[[]],[[]],[[]],[136,[[11,[403]]]],[136,[[11,[401]]]],[136,[[11,[402]]]],[136,[[11,[404]]]],0,0,[[403,403],34],[[401,401],34],[[402,402],34],[[404,404],34],[[],34],[[],34],[[],34],[[],34],0,[[403,32],[[11,[91]]]],[[401,32],[[11,[91]]]],[[402,32],33],[[404,32],33],[[]],[[]],[[]],[[]],0,0,0,[[402,[14,[99]]],402],[[]],[[]],[[]],[[]],[[403,140],11],[[401,140],11],[[402,140],11],[[402,[16,[249]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[405,405],[406,406],[407,407],[[]],[[]],[[]],[[],405],[136,[[11,[405]]]],[136,[[11,[406]]]],[136,[[11,[407]]]],[[405,405],34],[[406,406],34],[[407,407],34],[[],34],[[],34],[[],34],[[405,32],33],[[406,32],33],[[407,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[],405],[[[5,[4]],[14,[[99,[13]]]],52],406],[[[14,[[99,[13]]]]],407],0,[[[16,[405]],264,13,267],[[11,[[253,[405]],257]]]],0,[[405,140],11],[[406,140],11],[[407,140],11],0,0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[[],79],[[],79],[[],79],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[408,408],[409,409],[410,410],[[]],[[]],[[]],[[],408],[136,[[11,[408]]]],[136,[[11,[409]]]],[136,[[11,[410]]]],[[408,408],34],[[409,409],34],[[410,410],34],[[],34],[[],34],[[],34],[[408,32],33],[[409,32],33],[[410,32],33],[[]],[[]],[[]],0,[[]],[[]],[[]],[[],408],[[[5,[4]],[5,[411]],[14,[412]]],409],[[[16,[408]],264,13,267],[[11,[[253,[408]],258]]]],[[408,140],11],[[409,140],11],0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[[],79],[[],79],[[],79],[[]],[[]],[[]],[[409,[5,[413]]],409],0,0,0,0,0,0,0,0,0,0,0,[414,413],[414,13],[414,13],[[]],[414,413],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]],415],0,0,0,0,0,0,[414,414],[412,412],[416,416],[415,415],[417,417],[[]],[[]],[[]],[[]],[[]],[[414,414],86],0,0,[414],[136,[[11,[414]]]],[136,[[11,[412]]]],[136,[[11,[416]]]],[136,[[11,[415]]]],[136,[[11,[417]]]],0,[[414,413],34],[[414,413],34],[[414,414],34],[[412,412],34],[[416,416],34],[[415,415],34],[[417,417],34],[[],34],[[],34],[[],34],[[],34],[[],34],0,[[414,32],[[11,[91]]]],[[414,32],[[11,[91]]]],[[412,32],[[11,[91]]]],[[416,32],[[11,[91]]]],[[415,32],33],[[417,32],33],[[]],[78,414],[[[99,[413]]],414],[413,414],[13,414],[[[98,[413,90]]],414],[[[98,[13,90]]],414],[[]],[[]],[[]],[[]],[13,414],[13,[[11,[414]]]],[[414,114]],0,0,0,[[415,[14,[99]]],415],[[]],[[]],[[]],[[]],[[]],[414,[[98,[413,90]]]],[414,[[99,[413]]]],[414,[[99,[413]]]],0,[78,414],0,[[414,414],[[16,[86]]]],0,[[414,140],11],[[412,140],11],[[416,140],11],[[415,140],11],[[415,[16,[249]]]],0,[414,78],0,0,[[]],[[]],[[]],[[]],[[]],[[],78],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],[[],79],0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[5,[4]]],418],0,0,[418,418],[19,19],[[]],[[]],[136,[[11,[418]]]],[136,[[11,[19]]]],[[418,418],34],[[19,19],34],[[],34],[[],34],[[418,32],33],[[19,32],33],[[]],[[]],[[]],[[]],[[[16,[418]],264,13,267],[[11,[[253,[418]],259]]]],[[418,140],11],[[19,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,[[]],[[]],[[]],[[]],0,[419,419],[77,77],[[]],[[]],[136,[[11,[419]]]],[136,[[11,[77]]]],[[419,419],34],[[77,77],34],[[],34],[[],34],[[419,32],33],[[77,32],33],[[]],[[]],[[]],[[]],[[[5,[4]],[5,[4]]],419],[[[16,[419]],264,13,267],[[11,[[253,[419]],257]]]],[[419,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[13,13],[[11,[[61,[84]],251]]]],[[13,13],[[11,[[61,[84]],251]]]],[[13,13],[[11,[[61,[84]],251]]]],[[13,13],[[11,[[61,[84]],251]]]],[[13,13],[[11,[[61,[84]],251]]]],0,[[],[[11,[264,254]]]],[[],[[11,[264,254]]]],[[[16,[8]],264,13,267],[[11,[[253,[8]],258]]]],[[[16,[8]],264,13,267],[[11,[[253,[8]],259]]]],[[[16,[8]],264,13,267],[[11,[[253,[8]],256]]]],[[[16,[8]],264,13,267],[[11,[[253,[8]],257]]]],[[[16,[8]],264,13,267],[[11,[[253,[8]],255]]]],[[[16,[8]],264,[62,[[14,[84]]]]],[[11,[[253,[8]],257]]]],[[[16,[8]],264,[62,[[14,[84]]]]],[[11,[[253,[8]],258]]]],[[[16,[8]],264,[62,[[14,[84]]]]],[[11,[[253,[8]],259]]]],[[[16,[8]],264,[62,[[14,[84]]]]],[[11,[[253,[8]],256]]]],[[[16,[8]],264,[62,[[14,[84]]]]],[[11,[[253,[8]],255]]]],[[],[[11,[78,263]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[97,263],[[263,32],33],[[263,32],33],[[]],[[]],[57],[[],78],[[],11],[[],11],[[],79],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[253,[64,[0,[113,137,252]]]]],16],[[[253,[[0,[64,20,265,67,95]],[0,[252,95,137]]]],[3,[1]],[0,[7,8]]],[[11,[[16,[[253,[[0,[64,20,265,67,95]],[0,[252,95,137]]]]]],10]]]],[[[253,[64,[0,[252,137]]]],[0,[8,420,421,422]]],[[11,[[16,[252]],135]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[423,423],[424,424],[425,425],[426,426],[[]],[[]],[[]],[[]],0,0,[136,[[11,[423]]]],[136,[[11,[424]]]],[136,[[11,[425]]]],[136,[[11,[426]]]],0,0,0,[[423,423],34],[[424,424],34],[[425,425],34],[[426,426],34],[[],34],[[],34],[[],34],[[],34],0,[[423,32],33],[[424,32],33],[[425,32],33],[[426,32],33],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[[5,[4]]],427],0,0,0,0,[427,427],[428,428],[[]],[[]],[136,[[11,[427]]]],[136,[[11,[428]]]],0,[[427,427],34],[[428,428],34],[[],34],[[],34],[[427,32],33],[[428,32],33],[[]],[[]],[[]],[[]],0,[[[5,[236]],[14,[[99,[13]]]],34],428],[[427,140],11],[[428,140],11],0,0,0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[[],79],[[],79],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,[429,429],[430,430],[[]],[[]],[136,[[11,[429]]]],[136,[[11,[430]]]],[[429,429],34],[[430,430],34],[[429,32],33],[[430,32],33],[[]],[[]],0,[[]],[[]],[[[5,[4]],[5,[431]]],429],[[[16,[429]],264,13,267],[[11,[[253,[429]],259]]]],[[429,140],11],[[430,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,0,[[]],[[]],[[[5,[4]]],432],0,0,[432,432],[[]],[136,[[11,[432]]]],[[432,432],34],[[],34],[[432,44],432],0,[[432,32],33],[[]],[[432,[5,[431]]],432],0,[[]],[[432,140],11],[[432,[16,[249]]]],[[432,[5,[236]]],432],0,[[]],[[],11],[[],11],[[],79],[[432,[14,[[99,[13]]]]],432],0,[[]],0,0,0,[[]],[[]],[[]],[[]],[[[5,[4]]],433],0,0,[433,433],[434,434],[[]],[[]],[136,[[11,[433]]]],[136,[[11,[434]]]],[[433,433],34],[[434,434],34],[[],34],[[],34],[[433,32],33],[[434,32],33],[[]],[[]],[[]],[[]],0,[[[16,[433]],264,13,267],[[11,[[253,[433]],258]]]],[[433,140],11],[[434,140],11],0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,0,[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[435,435],[436,436],[[]],[[]],[[],436],[136,[[11,[435]]]],[136,[[11,[436]]]],0,[[435,435],34],[[436,436],34],[[],34],[[],34],[[435,32],33],[[436,32],33],[[]],[[]],0,[[]],[[]],0,[[[5,[4]],[5,[431]]],435],[[[16,[435]],264,13,267],[[11,[[253,[435]],258]]]],[[435,140],11],[[436,140],11],0,0,0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[[],79],[[],79],[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],0,0,0,[49,49],[[]],[136,[[11,[49]]]],0,[[49,49],34],[[],34],0,0,[[49,32],[[11,[91]]]],[[]],0,0,0,0,0,[[]],0,0,0,0,0,0,0,[[49,140],11],0,0,0,0,0,[[]],[[],11],[[],11],[[],79],[[]],0,0,0,0,[[]],[[]],0,[437,437],[[]],[136,[[11,[437]]]],[[437,437],34],[[],34],[[437,44],437],0,[[437,32],33],[[]],[[]],[[[16,[437]],264,13,267],[[11,[[253,[437]],255]]]],[[[14,[[99,[13]]]]],437],0,[[437,140],11],[[437,[16,[249]]]],[[]],[[],11],[[],11],[[],79],[[]],0,0,0,[[]],[[]],[[]],[[]],0,0,0,[438,438],[439,439],[[]],[[]],[136,[[11,[438]]]],[136,[[11,[439]]]],0,[[438,438],34],[[439,439],34],[[],34],[[],34],[[438,44],438],0,[[438,32],33],[[439,32],33],[[]],[[]],0,0,0,[[]],[[]],0,[[438,34],438],0,[[[14,[[99,[13]]]]],438],0,[[438,140],11],[[439,140],11],[[438,[16,[249]]]],0,0,0,0,0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],0,0,[440,440],[[]],[136,[[11,[440]]]],[[440,440],34],[[],34],0,0,[[440,32],33],[[]],0,0,0,0,0,0,0,[[]],[440,34],0,0,0,0,[[440,140],11],0,0,0,0,0,0,[[]],[[],11],[[],11],0,[[],79],0,0,0,0,0,0,0,[[]],0,0,0,0,[[]],[[]],0,[441,441],[[]],[136,[[11,[441]]]],[[441,441],34],[[],34],[[441,44],441],0,[[441,32],33],[[]],[[]],[[441,140],11],[[441,[16,[249]]]],[[]],[[],11],[[],11],[[],79],[[[5,[4]]],441],0,[[]],0,0,[[]],[[]],[[[5,[4]]],442],0,0,[442,442],[[]],[136,[[11,[442]]]],[[442,442],34],[[],34],[[442,32],33],[[]],[[]],[[442,140],11],[[]],[[],11],[[],11],[[],79],[[]],0,0,0,0,[[]],[[]],[[]],[[]],0,[443,443],[444,444],[[]],[[]],[[],443],[136,[[11,[443]]]],[136,[[11,[444]]]],[[443,443],34],[[444,444],34],[[],34],[[443,44],443],0,[[443,32],33],[[444,32],33],[[]],[[]],0,0,0,0,[[]],[[]],0,0,0,[[443,140],11],[[444,140],11],[[443,[16,[249]]]],0,0,0,0,0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],0,[[],79],[[],79],0,0,[[[14,[99]]],443],0,0,[[[14,[99]]],443],0,0,[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]],445],0,0,0,[445,445],[446,446],[447,447],[[]],[[]],[[]],[[],446],[136,[[11,[445]]]],[136,[[11,[446]]]],[136,[[11,[447]]]],[[445,445],34],[[446,446],34],[[447,447],34],[[],34],[[],34],[[],34],[[445,32],33],[[446,32],33],[[447,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[[16,[445]],264,13,267],[[11,[[253,[445]],256]]]],[[445,140],11],[[446,140],11],[[447,140],11],[[[14,[99]]],446],0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[[],79],[[],79],[[],79],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[[5,[4]]],448],0,0,0,0,0,[448,448],[449,449],[[]],[[]],[136,[[11,[448]]]],[136,[[11,[449]]]],[[448,448],34],[[449,449],34],[[],34],[[],34],[[448,32],33],[[449,32],33],[[]],[[]],0,0,[[]],[[]],0,[[[16,[448]],264,13,267],[[11,[[253,[448]],255]]]],[[448,140],11],[[449,140],11],0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,[[448,[14,[99]]],448],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]],268],0,0,0,0,0,[268,268],[269,269],[[]],[[]],[136,[[11,[268]]]],[136,[[11,[269]]]],[[268,268],34],[[269,269],34],[[],34],[[],34],[[268,44],268],0,[[268,32],33],[[269,32],33],[[270,32],33],[[270,32],33],[[]],[[]],[[]],[135,270],0,0,0,[[]],[[]],[[]],0,0,[57],[[268,140],11],[[269,140],11],[[268,[16,[249]]]],[270,[[16,[76]]]],[[268,[14,[99]]],268],0,[[]],[[]],[[],78],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],0,0,0,0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[5,[4]]],450],0,0,0,0,[450,450],[451,451],[452,452],[453,453],[[]],[[]],[[]],[[]],[136,[[11,[450]]]],[136,[[11,[451]]]],[136,[[11,[452]]]],[136,[[11,[453]]]],[[450,450],34],[[451,451],34],[[452,452],34],[[453,453],34],[[],34],[[],34],[[],34],[[],34],0,0,0,0,[[450,32],33],[[451,32],33],[[452,32],33],[[453,32],33],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],0,0,[[450,140],11],[[451,140],11],[[452,140],11],[[453,140],11],[[450,[16,[249]]]],0,[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],0,0,[[450,[14,[99]]],450],0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[454,455],[454,13],[455,13],[455,13],[454,455],[454,13],[[]],[455,13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[454,454],[456,456],[457,457],[[]],[[]],[[]],[[454,454],86],[[455,455],86],[454],[136,[[11,[454]]]],[136,[[11,[455]]]],[136,[[11,[456]]]],[136,[[11,[457]]]],[[454,455],34],[[454,454],34],[[454,455],34],[[455,454],34],[[455,454],34],[[455,455],34],[[456,456],34],[[457,457],34],[[],34],[[],34],[[],34],[[],34],0,[[454,32],33],[[454,32],33],[[455,32],33],[[455,32],33],[[456,32],33],[[457,32],33],[[[99,[455]]],454],[455,454],[[[98,[455]]],454],[78,454],[[[98,[13]]],454],[13,454],[[]],[13,455],[[[99,[455]]],455],[34,456],[[]],[[]],[13,454],[13,455],[13,[[11,[454]]]],[13,455],0,[[454,114]],[[455,114]],0,[[]],[[]],[[]],[454,[[98,[455]]]],[[[98,[455]]],454],0,0,0,[78,454],[[454,454],[[16,[86]]]],[[455,455],[[16,[86]]]],[[456,456],[[16,[86]]]],[[454,140],11],[[455,140],11],[[456,140],11],0,[454,78],[[]],[455],[[]],[[]],[[],78],[[],78],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],[[]],[[]],[[]],0,0,0,[[]],[[]],0,[458,458],[[]],[[],458],[136,[[11,[458]]]],[[458,458],34],[[],34],0,[[458,32],33],[[]],[[]],[[458,140],11],[[458,[16,[249]]]],0,[[458,[14,[99]]],458],[[]],[[],11],[[],11],[[],79],[[]],0,0,0,[[]],[[]],[459,459],[[]],0,[136,[[11,[459]]]],[[459,459],34],[[],34],[[459,32],33],[[]],0,0,0,0,[[]],[[459,140],11],0,0,0,[[]],[[],11],[[],11],[[],79],0,[[]],0,0,[[]],[[]],[[]],[[]],[[[5,[4]]],460],0,0,0,0,0,[460,460],[461,461],[[]],[[]],[136,[[11,[460]]]],[136,[[11,[461]]]],[[460,460],34],[[461,461],34],[[],34],[[],34],[[460,32],33],[[461,32],33],[[]],[[]],[[]],[[]],[[[16,[460]],264,13,267],[[11,[[253,[460]],255]]]],[[460,140],11],[[461,140],11],0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,[[]],[[]],[[]],[[]],0,[462,462],[463,463],[[]],[[]],[136,[[11,[462]]]],[136,[[11,[463]]]],[[462,462],34],[[463,463],34],[[],34],[[],34],[[462,32],33],[[463,32],33],[[]],[[]],[[[5,[464]]],462],0,[[]],[[]],[[[14,[[99,[13]]]]],462],0,[[462,140],11],[[463,140],11],0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[5,[4]]],465],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[465,465],[466,466],[467,467],[18,18],[[]],[[]],[[]],[[]],[136,[[11,[465]]]],[136,[[11,[466]]]],[136,[[11,[467]]]],[136,[[11,[18]]]],[[465,465],34],[[466,466],34],[[467,467],34],[[18,18],34],[[],34],[[],34],[[],34],[[],34],[[465,32],33],[[466,32],33],[[467,32],33],[[18,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[16,[465]],264,13,267],[[11,[[253,[465]],256]]]],[[465,[14,[467]]],465],0,[[465,140],11],[[466,140],11],[[467,140],11],[[18,140],11],[[465,[14,[466]]],465],0,0,[[]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[[5,[4]]],468],0,0,[468,468],[469,469],[[]],[[]],[136,[[11,[468]]]],[136,[[11,[469]]]],0,[[468,468],34],[[469,469],34],[[],34],[[],34],0,[[468,32],33],[[469,32],33],[[]],[[]],[[]],[[]],[[468,140],11],[[469,140],11],[[468,[16,[249]]]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],0,0,[470,470],[54,54],[[]],[[]],0,0,[136,[[11,[470]]]],[136,[[11,[54]]]],0,0,[[470,470],34],[[54,54],34],[[],34],[[],34],[[470,32],33],[[54,32],33],[[]],[[]],0,0,[[[14,[99]]],470],[[]],[[]],0,0,[[[14,[99]]],470],[[],470],0,0,[[470,140],11],[[54,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],0,[[],79],[[],79],0,[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[471,471],[472,472],[473,473],[[]],[[]],[[]],[136,[[11,[471]]]],[136,[[11,[472]]]],[136,[[11,[473]]]],[[],471],[[471,471],34],[[472,472],34],[[473,473],34],[[],34],[[],34],[[],34],0,[[471,32],33],[[472,32],33],[[473,32],33],0,0,[[[5,[4]]],471],[[[5,[4]]],471],[[[5,[4]],[5,[4]]],471],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[[16,[471]],264,13,267],[[11,[[253,[471]],255]]]],[[471,140],11],[[472,140],11],[[473,140],11],[[471,[16,[249]]]],0,0,0,0,[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,[474,474],[81,81],[[]],[[]],[136,[[11,[474]]]],[136,[[11,[81]]]],[[474,474],34],[[81,81],34],[[],34],[[],34],[[474,32],33],[[81,32],33],[[]],[[]],[[]],[[]],[[[16,[474]],264,13,267],[[11,[[253,[474]],259]]]],[[474,140],11],[[81,140],11],0,[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[[5,[4]]],474],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[475,475],[476,476],[477,477],[[]],[[]],[[]],0,0,0,[136,[[11,[475]]]],[136,[[11,[476]]]],[136,[[11,[477]]]],0,[[475,475],34],[[476,476],34],[[477,477],34],[[],34],[[],34],[[],34],0,[[475,32],33],[[476,32],33],[[477,32],33],[[]],[[]],[[]],0,0,0,0,[[]],[[]],[[]],0,0,0,0,0,[[475,140],11],[[476,140],11],[[477,140],11],0,0,0,0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,[[],79],[[],79],[[],79],0,0,0,0,0,0,0,[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,[478,478],[479,479],[[]],[[]],[136,[[11,[478]]]],[136,[[11,[479]]]],[[478,478],34],[[479,479],34],[[],34],[[],34],[[478,32],33],[[479,32],33],[[]],[[]],0,[[[14,[99]]],478],[[]],[[]],[[[16,[478]],264,13,267],[[11,[[253,[478]],259]]]],[[478,140],11],[[479,140],11],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[480,480],[481,481],[482,482],[[]],[[]],[[]],0,[[],480],0,[136,[[11,[480]]]],[136,[[11,[481]]]],[136,[[11,[482]]]],0,0,[[480,480],34],[[481,481],34],[[482,482],34],[[],34],[[],34],[[],34],0,[[480,32],33],[[481,32],33],[[482,32],33],[[]],[[]],[[]],[[[5,[297]]],480],0,0,0,[[[14,[99]]],480],[[]],[[]],[[]],0,0,0,0,0,0,[[480,140],11],[[481,140],11],[[482,140],11],[[480,[16,[249]]]],0,0,0,0,[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,[[],79],[[],79],[[],79],0,[[[5,[4]]],480],0,0,0,0,0,0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[483,483],[484,484],[75,75],[[]],[[]],[[]],[136,[[11,[483]]]],[136,[[11,[484]]]],[136,[[11,[75]]]],[[483,483],34],[[484,484],34],[[75,75],34],[[],34],[[],34],[[],34],[[483,32],33],[[484,32],33],[[75,32],33],[[]],[[]],[13,484],[[]],0,[[]],[[]],[[]],0,[[[5,[4]],[5,[4]]],483],[[[14,[[99,[13]]]]],484],[[[16,[483]],264,13,267],[[11,[[253,[483]],257]]]],[[483,140],11],[[484,140],11],[[75,140],11],[[]],[[]],[[]],0,[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],[[11,[84,260]]]],[[],79],[[],79],[[],79],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[485,485],[486,486],[487,487],[488,488],[[]],[[]],[[]],[[]],0,[136,[[11,[485]]]],[136,[[11,[486]]]],[136,[[11,[487]]]],[136,[[11,[488]]]],[[485,485],34],[[486,486],34],[[487,487],34],[[488,488],34],[[],34],[[],34],0,[[485,32],33],[[485,32],33],[[486,32],33],[[487,32],33],[[488,32],33],0,[489,485],[490,485],[491,485],[492,485],[493,485],[494,485],[495,485],[496,485],[497,485],[[]],[498,485],[499,485],[500,485],[501,485],[502,485],[503,485],[504,485],[[]],[[]],[[]],[[485,114]],0,[[]],[[]],[[]],[[]],[[],485],[486,34],[[[14,[[16,[13]]]],[14,[[16,[13]]]]],[[11,[78,135]]]],0,0,[13,[[11,[488,31]]]],0,[[485,140],11],[[487,140],11],[[]],[[]],[[]],[[]],[[],78],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],[[[14,[[16,[13]]]]],[[11,[78,135]]]],0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[495,495],[505,505],[506,506],[507,507],[508,508],[509,509],[510,510],[511,511],[512,512],[513,513],[514,514],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[136,[[11,[495]]]],[136,[[11,[505]]]],[136,[[11,[506]]]],[136,[[11,[507]]]],[136,[[11,[508]]]],[136,[[11,[509]]]],[136,[[11,[510]]]],[136,[[11,[511]]]],[136,[[11,[512]]]],[136,[[11,[513]]]],[136,[[11,[514]]]],0,0,[[495,495],34],[[505,505],34],[[506,506],34],[[507,507],34],[[508,508],34],[[509,509],34],[[510,510],34],[[511,511],34],[[512,512],34],[[513,513],34],[[514,514],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[495,32],33],[[495,32],33],[[505,32],33],[[506,32],33],[[507,32],33],[[508,32],33],[[509,32],33],[[510,32],33],[[511,32],33],[[512,32],33],[[513,32],33],[[514,32],33],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[495,114]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[495,485],0,0,0,0,0,0,0,0,0,0,0,[[495,140],11],[[505,140],11],[[506,140],11],[[507,140],11],[[508,140],11],[[509,140],11],[[510,140],11],[[511,140],11],[[512,140],11],[[513,140],11],[[514,140],11],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],0,[78,[[11,[495]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[499,499],[515,515],[516,516],[517,517],[518,518],[[]],[[]],[[]],[[]],[[]],0,[136,[[11,[499]]]],[136,[[11,[515]]]],[136,[[11,[516]]]],[136,[[11,[517]]]],[136,[[11,[518]]]],[[499,499],34],[[515,515],34],[[516,516],34],[[517,517],34],[[518,518],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[499,32],33],[[499,32],33],[[515,32],33],[[516,32],33],[[517,32],33],[[518,32],33],[[]],[[]],[[]],[[]],[[]],[[499,114]],[[]],[[]],[[]],[[]],[[]],[499,485],0,[[499,140],11],[[515,140],11],[[516,140],11],[[517,140],11],[[518,140],11],0,[[]],[[]],[[]],[[]],[[]],[[],78],0,[[],11],[78,[[11,[499]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,[498,498],[519,519],[[]],[[]],[136,[[11,[498]]]],[136,[[11,[519]]]],[[498,498],34],[[519,519],34],[[],34],[[],34],[[498,32],33],[[498,32],33],[[519,32],33],[[]],[[]],[[498,114]],[[]],[[]],[498,485],[[498,140],11],[[519,140],11],0,[[]],[[]],[[],78],[78,[[11,[498]]]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,0,[[]],[[]],0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[501,501],[520,520],[521,521],[[]],[[]],[[]],[136,[[11,[501]]]],[136,[[11,[520]]]],[136,[[11,[521]]]],[[501,501],34],[[520,520],34],[[521,521],34],[[],34],[[],34],[[],34],[[501,32],33],[[501,32],33],[[520,32],33],[[521,32],33],[[]],[[]],[[]],[[501,114]],[[]],[[]],[[]],[501,485],[[501,140],11],[[520,140],11],[[521,140],11],[[]],[[]],[[]],[[],78],[[],11],[78,[[11,[501]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[502,502],[522,522],[523,523],[524,524],[525,525],[526,526],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[136,[[11,[502]]]],[136,[[11,[522]]]],[136,[[11,[523]]]],[136,[[11,[524]]]],[136,[[11,[525]]]],[136,[[11,[526]]]],[[502,502],34],[[522,522],34],[[523,523],34],[[524,524],34],[[525,525],34],[[526,526],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[502,32],33],[[502,32],33],[[522,32],33],[[523,32],33],[[524,32],33],[[525,32],33],[[526,32],33],[[]],[[]],[[]],[[]],[[]],[[]],0,[[502,114]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[502,485],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[502,140],11],[[522,140],11],[[523,140],11],[[524,140],11],[[525,140],11],[[526,140],11],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[],78],0,[[],11],[78,[[11,[502]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,[503,503],[527,527],[528,528],[[]],[[]],[[]],0,[136,[[11,[503]]]],[136,[[11,[527]]]],[136,[[11,[528]]]],0,[[503,503],34],[[527,527],34],[[528,528],34],[[],34],[[],34],[[],34],[[503,32],33],[[503,32],33],[[527,32],33],[[528,32],33],[[]],[[]],[[]],[[503,114]],[[]],[[]],[[]],[503,485],[[503,140],11],[[527,140],11],[[528,140],11],0,[[]],[[]],[[]],[[],78],[[],11],[78,[[11,[503]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],0,0,0,[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,[493,493],[529,529],[530,530],[531,531],[532,532],[533,533],[534,534],[535,535],[536,536],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[535,535],86],0,0,0,0,[136,[[11,[493]]]],[136,[[11,[529]]]],[136,[[11,[530]]]],[136,[[11,[531]]]],[136,[[11,[532]]]],[136,[[11,[533]]]],[136,[[11,[534]]]],[136,[[11,[535]]]],[136,[[11,[536]]]],0,0,0,0,0,0,0,[[493,493],34],[[529,529],34],[[530,530],34],[[531,531],34],[[532,532],34],[[533,533],34],[[534,534],34],[[535,535],34],[[536,536],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[493,32],33],[[493,32],33],[[529,32],33],[[530,32],33],[[531,32],33],[[532,32],33],[[533,32],33],[[534,32],33],[[535,32],33],[[536,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[493,114]],[[535,114]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[493,485],0,0,0,0,0,0,0,0,0,0,0,[[535,535],[[16,[86]]]],0,0,0,0,0,[[493,140],11],[[529,140],11],[[530,140],11],[[531,140],11],[[532,140],11],[[533,140],11],[[534,140],11],[[535,140],11],[[536,140],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],11],[78,[[11,[493]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],0,[496,496],[[]],[136,[[11,[496]]]],[[496,496],34],[[],34],[[496,32],33],[[496,32],33],[[]],[[496,114]],[[]],[496,485],[[496,140],11],[[]],[[],78],[78,[[11,[496]]]],[[],11],[[],11],[[],79],[[]],0,0,[[]],[[]],[[]],[[]],0,[497,497],[537,537],[[]],[[]],[136,[[11,[497]]]],[136,[[11,[537]]]],0,[[497,497],34],[[537,537],34],[[],34],[[],34],[[497,32],33],[[497,32],33],[[537,32],33],[[]],[[]],[[497,114]],[[]],[[]],[497,485],[[497,140],11],[[537,140],11],[[]],[[]],[[],78],[78,[[11,[497]]]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],0,0,[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[492,492],[504,504],[538,538],[539,539],[540,540],[541,541],[542,542],[543,543],[544,544],[545,545],[546,546],[547,547],[548,548],[549,549],[550,550],[551,551],[552,552],[553,553],[554,554],[555,555],[556,556],[557,557],[558,558],[559,559],[560,560],[561,561],[562,562],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[136,[[11,[492]]]],[136,[[11,[504]]]],[136,[[11,[538]]]],[136,[[11,[539]]]],[136,[[11,[540]]]],[136,[[11,[541]]]],[136,[[11,[542]]]],[136,[[11,[543]]]],[136,[[11,[544]]]],[136,[[11,[545]]]],[136,[[11,[546]]]],[136,[[11,[547]]]],[136,[[11,[548]]]],[136,[[11,[549]]]],[136,[[11,[550]]]],[136,[[11,[551]]]],[136,[[11,[552]]]],[136,[[11,[553]]]],[136,[[11,[554]]]],[136,[[11,[555]]]],[136,[[11,[556]]]],[136,[[11,[557]]]],[136,[[11,[558]]]],[136,[[11,[559]]]],[136,[[11,[560]]]],[136,[[11,[561]]]],[136,[[11,[562]]]],0,0,0,0,0,[[492,492],34],[[504,504],34],[[538,538],34],[[539,539],34],[[540,540],34],[[541,541],34],[[542,542],34],[[543,543],34],[[544,544],34],[[545,545],34],[[546,546],34],[[547,547],34],[[548,548],34],[[549,549],34],[[550,550],34],[[551,551],34],[[552,552],34],[[553,553],34],[[554,554],34],[[555,555],34],[[556,556],34],[[557,557],34],[[558,558],34],[[559,559],34],[[560,560],34],[[561,561],34],[[562,562],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],0,0,[[492,32],33],[[492,32],33],[[504,32],33],[[504,32],33],[[538,32],33],[[539,32],33],[[540,32],33],[[541,32],33],[[542,32],33],[[543,32],33],[[544,32],33],[[545,32],33],[[546,32],33],[[547,32],33],[[548,32],33],[[549,32],33],[[550,32],33],[[551,32],33],[[552,32],33],[[553,32],33],[[554,32],33],[[555,32],33],[[556,32],33],[[557,32],33],[[558,32],33],[[559,32],33],[[560,32],33],[[561,32],33],[[562,32],33],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[492,114]],[[504,114]],[[548,114]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[492,485],[504,485],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[492,140],11],[[504,140],11],[[538,140],11],[[539,140],11],[[540,140],11],[[541,140],11],[[542,140],11],[[543,140],11],[[544,140],11],[[545,140],11],[[546,140],11],[[547,140],11],[[548,140],11],[[549,140],11],[[550,140],11],[[551,140],11],[[552,140],11],[[553,140],11],[[554,140],11],[[555,140],11],[[556,140],11],[[557,140],11],[[558,140],11],[[559,140],11],[[560,140],11],[[561,140],11],[[562,140],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],78],0,[78,[[11,[492]]]],[[],11],[[],11],[78,[[11,[504]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[489,489],[563,563],[564,564],[565,565],[566,566],[567,567],[568,568],[569,569],[570,570],[571,571],[572,572],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,[136,[[11,[489]]]],[136,[[11,[563]]]],[136,[[11,[564]]]],[136,[[11,[565]]]],[136,[[11,[566]]]],[136,[[11,[567]]]],[136,[[11,[568]]]],[136,[[11,[569]]]],[136,[[11,[570]]]],[136,[[11,[571]]]],[136,[[11,[572]]]],[[489,489],34],[[563,563],34],[[564,564],34],[[565,565],34],[[566,566],34],[[567,567],34],[[568,568],34],[[569,569],34],[[570,570],34],[[571,571],34],[[572,572],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[],34],0,[[489,32],33],[[489,32],33],[[563,32],33],[[564,32],33],[[565,32],33],[[566,32],33],[[567,32],33],[[568,32],33],[[569,32],33],[[570,32],33],[[570,32],33],[[571,32],33],[[572,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[489,114]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[489,485],0,0,0,0,0,0,0,0,[[489,140],11],[[563,140],11],[[564,140],11],[[565,140],11],[[566,140],11],[[567,140],11],[[568,140],11],[[569,140],11],[[570,140],11],[[571,140],11],[[572,140],11],0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],78],[78,[[11,[489]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],0,0,[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[490,490],[573,573],[574,574],[575,575],[576,576],[[]],[[]],[[]],[[]],[[]],0,0,0,[136,[[11,[490]]]],[136,[[11,[573]]]],[136,[[11,[574]]]],[136,[[11,[575]]]],[136,[[11,[576]]]],[[490,490],34],[[573,573],34],[[574,574],34],[[575,575],34],[[576,576],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[490,32],33],[[490,32],33],[[573,32],33],[[574,32],33],[[575,32],33],[[576,32],33],0,0,0,[[]],[[]],[[]],[[]],[[]],[[490,114]],0,0,0,[[]],[[]],[[]],[[]],[[]],[490,485],[[490,140],11],[[573,140],11],[[574,140],11],[[575,140],11],[[576,140],11],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[],78],0,0,0,[78,[[11,[490]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,0,[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],0,[494,494],[577,577],[[]],[[]],0,[136,[[11,[494]]]],[136,[[11,[577]]]],[[494,494],34],[[577,577],34],[[],34],[[],34],[[494,32],33],[[494,32],33],[[577,32],33],[[]],[[]],[[494,114]],[[]],[[]],[494,485],[[494,140],11],[[577,140],11],[[]],[[]],[[],78],[78,[[11,[494]]]],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[500,500],[491,491],[578,578],[579,579],[580,580],[581,581],[[]],[[]],[[]],[[]],[[]],[[]],[136,[[11,[500]]]],[136,[[11,[491]]]],[136,[[11,[578]]]],[136,[[11,[579]]]],[136,[[11,[580]]]],[136,[[11,[581]]]],[[500,500],34],[[491,491],34],[[578,578],34],[[579,579],34],[[580,580],34],[[581,581],34],[[],34],[[],34],[[],34],[[],34],[[],34],[[500,32],33],[[500,32],33],[[491,32],33],[[491,32],33],[[578,32],33],[[579,32],33],[[580,32],33],[[581,32],33],[[]],[[]],[[]],[[]],[[]],[[]],[[500,114]],[[491,114]],0,[[]],[[]],[[]],[[]],[[]],[[]],[500,485],[491,485],[[500,140],11],[[491,140],11],[[578,140],11],[[579,140],11],[[580,140],11],[[581,140],11],0,[[]],[[]],[[]],[[]],[[]],[[]],[[],78],[[],78],[[],11],[78,[[11,[500]]]],[78,[[11,[491]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],[[],79],[[],79],[[],79],0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[21,[20,1]]],[20,1]],[136,[[11,[582]]]],[136,[[11,[583]]]],[[582,32],33],[[583,32],33],[[[584,[[0,[76,6,2]]]],32],33],[[[584,[[0,[95,76,6,2]]]],32],33],[[]],[[]],[[]],[31,[[584,[[0,[76,6,2]]]]]],[261,[[584,[[0,[76,6,2]]]]]],[107,[[584,[[0,[76,6,2]]]]]],[[[98,[[0,[76,6,2]]]]],[[584,[[0,[76,6,2]]]]]],[[[21,[1]],40],[[11,[582,584]]]],[[[21,[1]]],1],0,[[]],[[]],[[]],0,[[],[[21,[26,1]]]],[57],[[582,140],11],[[583,140],11],[[[584,[[0,[76,6,2]]]]],[[16,[76]]]],0,[[],78],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],79],[[],79],[[],79],0,0,[[]],[[]],[[]],[1,[[21,[1]]]]],"c":[8,359,803,1053,2921,2926,3683,6755,6826,6990,7209,8221,8222,8223,8224,8257,8258,8406,8408,9380,9457,9472,9476,9477,9478,9481,9489,9490,9515,9516,9559,9564,9618,9641,9642,9643,9644,9652,9685,9959,9960,9961,9963,9964,9965,9966,9967,10008,10034,10040,10041,10042,10050,10071,10073,10083,10089,10211,10219,10221,10231,10232,10234,10251,10255,10260,10434,10438,10439,10440,10464,10468,10476,10488,10495,13192,13219],"p":[[8,"Client"],[8,"Sync"],[3,"HelixClient"],[3,"UserIdRef"],[8,"IntoCow"],[8,"Send"],[8,"TwitchToken"],[8,"Sized"],[4,"AddChannelModeratorResponse"],[4,"ClientRequestError"],[4,"Result"],[4,"AddChannelVipResponse"],[15,"str"],[8,"Into"],[15,"u32"],[4,"Option"],[3,"BanUser"],[4,"BlockUser"],[4,"CancelARaidResponse"],[8,"Clone"],[3,"TmiClient"],[3,"TwitchClient"],[8,"EventSubscription"],[4,"Transport"],[3,"CreateEventSubSubscription"],[8,"ClientDefault"],[4,"DeleteChatMessagesResponse"],[3,"MsgIdRef"],[3,"EventSubIdRef"],[4,"DeleteEventSubSubscription"],[4,"DeserError"],[3,"Formatter"],[6,"Result"],[15,"bool"],[3,"CustomReward"],[3,"Vec"],[8,"Stream"],[8,"Unpin"],[3,"ChannelEmote"],[6,"UserNameRef"],[3,"ChannelInformation"],[8,"AsRef"],[3,"ChatSettings"],[15,"usize"],[3,"Emote"],[4,"Status"],[4,"EventType"],[3,"CategoryId"],[3,"Category"],[3,"HashMap"],[3,"GlobalEmote"],[15,"i64"],[3,"UserChatColor"],[3,"User"],[8,"Deserialize"],[4,"Value"],[3,"Demand"],[4,"RemoveChannelModeratorResponse"],[4,"RemoveChannelVipResponse"],[15,"u8"],[3,"Request"],[3,"Response"],[6,"BoxedFuture"],[8,"Request"],[8,"RequestDelete"],[8,"Fn"],[8,"RequestGet"],[8,"RequestPatch"],[8,"HelixRequestBody"],[8,"RequestPost"],[8,"RequestPut"],[4,"AnnouncementColor"],[8,"TryInto"],[4,"SendChatAnnouncementResponse"],[4,"SendWhisperResponse"],[8,"Error"],[3,"StartARaidResponse"],[3,"String"],[3,"TypeId"],[4,"UnbanUserResponse"],[4,"UnblockUser"],[4,"NamedUserColor"],[4,"UpdateUserChatColorResponse"],[3,"Bytes"],[3,"DummyHttpClient"],[4,"Ordering"],[3,"Body"],[3,"HeaderValue"],[3,"BytesMut"],[3,"Global"],[3,"Error"],[4,"UreqError"],[4,"SurfError"],[4,"ReqwestClientDefaultError"],[8,"Debug"],[4,"CompatError"],[8,"Display"],[3,"Box"],[4,"Cow"],[3,"ByteStr"],[3,"Custom"],[4,"ParseError"],[4,"Error"],[3,"InvalidHeaderValue"],[3,"Error"],[3,"InvalidHeaderName"],[3,"Error"],[3,"Error"],[15,"never"],[3,"OwnedFd"],[8,"IntoFilelike"],[8,"IntoSocketlike"],[8,"IntoIterator"],[8,"Hasher"],[3,"Pin"],[3,"Context"],[4,"Poll"],[3,"HeaderMap"],[6,"Request"],[6,"Response"],[3,"SizeHint"],[8,"RangeBounds"],[3,"WebhookTransport"],[4,"TransportResponse"],[3,"WebhookTransportResponse"],[3,"WebsocketTransport"],[3,"WebsocketTransportResponse"],[4,"Event"],[3,"VerificationRequest"],[4,"Message"],[3,"Payload"],[3,"EventSubscriptionInformation"],[4,"TransportMethod"],[3,"EventSubSubscription"],[3,"Error"],[8,"Deserializer"],[8,"PartialEq"],[4,"PayloadParseError"],[3,"Utf8Error"],[8,"Serializer"],[8,"ToString"],[3,"ChannelBanV1"],[3,"ChannelBanV1Payload"],[3,"ChannelPointsCustomRewardAddV1"],[3,"ChannelPointsCustomRewardAddV1Payload"],[3,"ChannelPointsCustomRewardRemoveV1"],[3,"ChannelPointsCustomRewardRemoveV1Payload"],[3,"ChannelPointsCustomRewardUpdateV1"],[3,"ChannelPointsCustomRewardUpdateV1Payload"],[3,"ChannelPointsCustomRewardRedemptionAddV1"],[3,"ChannelPointsCustomRewardRedemptionAddV1Payload"],[3,"ChannelPointsCustomRewardRedemptionUpdateV1"],[3,"ChannelPointsCustomRewardRedemptionUpdateV1Payload"],[3,"ChannelCharityCampaignDonateV1"],[3,"ChannelCharityCampaignDonateV1Payload"],[3,"ChannelCharityCampaignProgressV1"],[3,"ChannelCharityCampaignProgressV1Payload"],[3,"ChannelCharityCampaignStartV1"],[3,"ChannelCharityCampaignStartV1Payload"],[3,"ChannelCharityCampaignStopV1"],[3,"ChannelCharityCampaignStopV1Payload"],[3,"ChannelCheerV1"],[3,"ChannelCheerV1Payload"],[3,"ChannelFollowV1"],[3,"ChannelFollowV1Payload"],[3,"ChannelFollowV2"],[3,"ChannelFollowV2Payload"],[3,"ChannelGoalBeginV1"],[3,"ChannelGoalBeginV1Payload"],[3,"ChannelGoalEndV1"],[3,"ChannelGoalEndV1Payload"],[3,"ChannelGoalProgressV1"],[3,"ChannelGoalProgressV1Payload"],[3,"ChannelHypeTrainBeginV1"],[3,"ChannelHypeTrainBeginV1Payload"],[3,"ChannelHypeTrainEndV1"],[3,"ChannelHypeTrainEndV1Payload"],[3,"ChannelHypeTrainProgressV1"],[3,"ChannelHypeTrainProgressV1Payload"],[3,"ChannelPollBeginV1"],[3,"ChannelPollBeginV1Payload"],[3,"ChannelPollEndV1"],[3,"ChannelPollEndV1Payload"],[3,"ChannelPollProgressV1"],[3,"ChannelPollProgressV1Payload"],[3,"ChannelPredictionBeginV1"],[3,"ChannelPredictionBeginV1Payload"],[3,"ChannelPredictionEndV1"],[3,"ChannelPredictionEndV1Payload"],[3,"ChannelPredictionLockV1"],[3,"ChannelPredictionLockV1Payload"],[3,"ChannelPredictionProgressV1"],[3,"ChannelPredictionProgressV1Payload"],[3,"ChannelRaidV1"],[3,"ChannelRaidV1Payload"],[3,"ChannelShieldModeBeginV1"],[3,"ChannelShieldModeBeginV1Payload"],[3,"ChannelShieldModeEndV1"],[3,"ChannelShieldModeEndV1Payload"],[3,"ChannelShoutoutCreateV1"],[3,"ChannelShoutoutCreateV1Payload"],[3,"ChannelShoutoutReceiveV1"],[3,"ChannelShoutoutReceiveV1Payload"],[3,"ChannelSubscribeV1"],[3,"ChannelSubscribeV1Payload"],[3,"ChannelSubscriptionEndV1"],[3,"ChannelSubscriptionEndV1Payload"],[3,"ChannelSubscriptionGiftV1"],[3,"ChannelSubscriptionGiftV1Payload"],[3,"ChannelSubscriptionMessageV1"],[3,"ChannelSubscriptionMessageV1Payload"],[3,"ChannelUnbanV1"],[3,"ChannelUnbanV1Payload"],[3,"ChannelUpdateV1"],[3,"ChannelUpdateV1Payload"],[3,"UserId"],[3,"RewardId"],[3,"Reward"],[4,"RedemptionStatus"],[4,"ContributionType"],[3,"Contribution"],[3,"BitsVoting"],[3,"ChannelPointsVoting"],[3,"SubscriptionMessage"],[3,"EventTypeParseError"],[4,"EventsubWebsocketData"],[3,"NotificationMetadata"],[3,"WelcomeMetadata"],[3,"WelcomePayload"],[3,"SessionData"],[3,"KeepaliveMetadata"],[3,"ReconnectMetadata"],[3,"ReconnectPayload"],[3,"RevocationMetadata"],[4,"EventsubWebsocketMetadata"],[3,"TimestampRef"],[3,"StreamOfflineV1"],[3,"StreamOfflineV1Payload"],[3,"StreamOnlineV1"],[3,"StreamOnlineV1Payload"],[3,"UserAuthorizationGrantV1"],[3,"UserAuthorizationGrantV1Payload"],[3,"UserAuthorizationRevokeV1"],[3,"UserAuthorizationRevokeV1Payload"],[3,"UserUpdateV1"],[3,"UserUpdateV1Payload"],[3,"DonationAmount"],[3,"CursorRef"],[3,"Cursor"],[3,"EmptyBody"],[4,"CreateRequestError"],[8,"DeserializeOwned"],[3,"Response"],[4,"InvalidUri"],[4,"HelixRequestGetError"],[4,"HelixRequestPutError"],[4,"HelixRequestPostError"],[4,"HelixRequestPatchError"],[4,"HelixRequestDeleteError"],[4,"BodyError"],[3,"Error"],[3,"InvalidUri"],[4,"SerializeError"],[3,"Uri"],[8,"Paginated"],[8,"Copy"],[3,"StatusCode"],[3,"GetBroadcasterSubscriptionsRequest"],[3,"BroadcasterSubscription"],[4,"BroadcasterSubscriptionPointsError"],[3,"GetBitsLeaderboardRequest"],[3,"BitsLeaderboard"],[3,"DateRange"],[3,"LeaderboardUser"],[15,"i32"],[3,"GetCheermotesRequest"],[3,"Cheermote"],[4,"CheermoteType"],[3,"Tiers"],[3,"CheermoteImages"],[3,"CheermoteImage"],[3,"CheermoteImageArray"],[3,"Level"],[3,"AddChannelVipRequest"],[3,"GetChannelEditorsRequest"],[3,"Editor"],[3,"GetChannelFollowersRequest"],[3,"Follower"],[3,"GetChannelInformationRequest"],[3,"GetFollowedChannels"],[3,"FollowedBroadcaster"],[3,"GetVipsRequest"],[3,"Vip"],[3,"ModifyChannelInformationRequest"],[3,"ModifyChannelInformationBody"],[4,"ModifyChannelInformation"],[3,"CategoryIdRef"],[3,"RemoveChannelVipRequest"],[3,"StartCommercialRequest"],[3,"StartCommercialBody"],[3,"StartCommercial"],[4,"CommercialLength"],[3,"GetCharityCampaignRequest"],[3,"CharityCampaign"],[3,"GetCharityCampaignDonationsRequest"],[3,"CharityCampaignDonation"],[3,"BadgeSet"],[3,"ChatBadge"],[3,"AnnouncementColorError"],[3,"EmoteUrlBuilder"],[3,"GetChannelChatBadgesRequest"],[3,"GetChannelEmotesRequest"],[3,"GetChatSettingsRequest"],[3,"GetChattersRequest"],[3,"Chatter"],[3,"GetEmoteSetsRequest"],[3,"GetGlobalChatBadgesRequest"],[3,"GetGlobalEmotesRequest"],[3,"GetUserChatColorRequest"],[3,"SendAShoutoutRequest"],[4,"SendAShoutoutResponse"],[3,"SendChatAnnouncementRequest"],[3,"SendChatAnnouncementBody"],[3,"UpdateChatSettingsRequest"],[3,"UpdateChatSettingsBody"],[3,"UpdateUserChatColorRequest"],[3,"CreateClipRequest"],[3,"CreatedClip"],[3,"GetClipsRequest"],[3,"Clip"],[3,"CreateEventSubSubscriptionRequest"],[3,"CreateEventSubSubscriptionBody"],[8,"Serialize"],[3,"DeleteEventSubSubscriptionRequest"],[3,"GetEventSubSubscriptionsRequest"],[3,"EventSubSubscriptions"],[3,"GetGamesRequest"],[3,"GetTopGamesRequest"],[3,"GetCreatorGoalsRequest"],[3,"CreatorGoal"],[4,"ContributionType"],[3,"Contribution"],[3,"GetHypeTrainEventsRequest"],[3,"HypeTrainEvent"],[4,"HypeTrainEventType"],[3,"HypeTrainEventData"],[3,"BlockedTerm"],[3,"AddBlockedTermRequest"],[3,"AddBlockedTermBody"],[3,"AddChannelModeratorRequest"],[3,"BanUserRequest"],[3,"BanUserBody"],[3,"CheckAutoModStatusRequest"],[3,"CheckAutoModStatusBody"],[3,"CheckAutoModStatus"],[3,"DeleteChatMessagesRequest"],[3,"GetBannedUsersRequest"],[3,"BannedUser"],[3,"GetBlockedTermsRequest"],[3,"GetModeratorsRequest"],[3,"Moderator"],[3,"GetShieldModeStatusRequest"],[3,"ShieldModeStatus"],[3,"LastShieldMode"],[3,"ManageHeldAutoModMessagesRequest"],[3,"ManageHeldAutoModMessagesBody"],[4,"AutoModAction"],[4,"ManageHeldAutoModMessages"],[3,"RemoveBlockedTermRequest"],[4,"RemoveBlockedTerm"],[3,"BlockedTermIdRef"],[3,"RemoveChannelModeratorRequest"],[3,"UnbanUserRequest"],[3,"UpdateShieldModeStatusRequest"],[3,"UpdateShieldModeStatusBody"],[4,"CustomRewardRedemptionStatus"],[3,"CreateCustomRewardRequest"],[3,"CreateCustomRewardBody"],[3,"DeleteCustomRewardRequest"],[4,"DeleteCustomReward"],[3,"RewardIdRef"],[3,"GetCustomRewardRequest"],[3,"GetCustomRewardRedemptionRequest"],[4,"GetCustomRewardRedemptionSortOrder"],[3,"CustomRewardRedemption"],[3,"Reward"],[3,"UpdateCustomRewardRequest"],[3,"UpdateCustomRewardBody"],[4,"UpdateCustomReward"],[3,"UpdateRedemptionStatusRequest"],[3,"UpdateRedemptionStatusBody"],[4,"UpdateRedemptionStatusInformation"],[3,"RedemptionIdRef"],[3,"CreatePollBody"],[3,"CreatePollRequest"],[3,"NewPollChoice"],[3,"EndPollRequest"],[3,"EndPollBody"],[4,"EndPoll"],[3,"PollIdRef"],[4,"PollStatus"],[3,"GetPollsRequest"],[3,"PollChoice"],[3,"Poll"],[3,"CreatePredictionRequest"],[3,"CreatePredictionBody"],[3,"NewPredictionOutcome"],[3,"EndPredictionRequest"],[3,"EndPredictionBody"],[4,"EndPrediction"],[3,"PredictionIdRef"],[4,"PredictionStatus"],[3,"PredictionOutcomeIdRef"],[3,"PredictionOutcomeId"],[3,"GetPredictionsRequest"],[3,"PredictionOutcome"],[3,"Prediction"],[3,"CancelARaidRequest"],[3,"StartARaidRequest"],[8,"Ord"],[8,"Eq"],[8,"Hash"],[3,"ScheduledBroadcasts"],[3,"Segment"],[3,"Category"],[3,"Vacation"],[3,"CreateChannelStreamScheduleSegmentRequest"],[3,"CreateChannelStreamScheduleSegmentBody"],[3,"DeleteChannelStreamScheduleSegmentRequest"],[4,"DeleteChannelStreamScheduleSegment"],[3,"StreamSegmentIdRef"],[3,"GetChannelStreamScheduleRequest"],[3,"UpdateChannelStreamScheduleRequest"],[4,"UpdateChannelStreamSchedule"],[3,"UpdateChannelStreamScheduleSegmentRequest"],[3,"UpdateChannelStreamScheduleSegmentBody"],[3,"SearchCategoriesRequest"],[3,"SearchChannelsRequest"],[3,"Channel"],[4,"StreamType"],[3,"GetFollowedStreamsRequest"],[3,"GetStreamTagsRequest"],[3,"GetStreamsRequest"],[3,"Stream"],[3,"ReplaceStreamTagsRequest"],[3,"ReplaceStreamTagsBody"],[4,"ReplaceStreamTags"],[3,"CheckUserSubscriptionRequest"],[3,"UserSubscription"],[3,"GetBroadcasterSubscriptionsEventsRequest"],[3,"BroadcasterSubscriptionEvent"],[4,"BroadcasterSubscriptionEventType"],[3,"BroadcasterSubscriptionEventData"],[3,"TagLanguage"],[3,"TagLanguageRef"],[4,"AutoGenerated"],[3,"TwitchTag"],[3,"GetAllStreamTagsRequest"],[3,"TeamInformation"],[3,"GetChannelTeamsRequest"],[3,"BroadcasterTeam"],[3,"GetTeamsRequest"],[3,"Team"],[3,"TeamIdRef"],[3,"BlockUserRequest"],[4,"SourceContext"],[4,"Reason"],[3,"GetUserBlockListRequest"],[3,"UserBlock"],[3,"GetUsersRequest"],[3,"GetUsersFollowsRequest"],[3,"UsersFollows"],[3,"FollowRelationship"],[3,"UnblockUserRequest"],[4,"Sort"],[4,"VideoPeriod"],[4,"VideoTypeFilter"],[3,"DeleteVideosRequest"],[4,"DeleteVideo"],[3,"GetVideosRequest"],[3,"Video"],[3,"MutedSegment"],[3,"SendWhisperRequest"],[3,"SendWhisperBody"],[4,"Topics"],[3,"TwitchResponse"],[4,"TopicData"],[4,"Response"],[3,"ChatModeratorActions"],[3,"Raid"],[3,"VideoPlaybackById"],[3,"HypeTrainEventsV1"],[3,"ChannelSubscribeEventsV1"],[3,"UserModerationNotifications"],[3,"AutoModQueue"],[3,"CommunityPointsChannelV1"],[3,"Following"],[3,"ChannelBitsBadgeUnlocks"],[3,"ChannelBitsEventsV2"],[3,"VideoPlayback"],[3,"ChannelCheerEventsPublicV1"],[3,"ChannelPointsChannelV1"],[3,"ChannelSubGiftsV1"],[3,"HypeTrainEventsV1Rewards"],[4,"AutoModQueueReply"],[3,"AutoModCaughtMessage"],[3,"ContentClassification"],[3,"Message"],[3,"MessageUser"],[3,"MessageUserBadges"],[3,"Content"],[4,"Fragment"],[3,"FragmentUserMention"],[3,"Automod"],[4,"ChannelBitsEventsV2Reply"],[3,"BitsEventData"],[3,"BadgeEntitlement"],[4,"BitsContext"],[3,"ChannelBitsBadgeUnlocksReply"],[4,"ChannelCheerEventsPublicV1Reply"],[4,"TriggerType"],[3,"Redemption"],[4,"RedemptionStatus"],[3,"Reward"],[3,"Progress"],[4,"ChannelPointsChannelV1Reply"],[3,"MysteryGiftPurchase"],[4,"ChannelSubGiftsV1Reply"],[3,"Sub"],[3,"ReSub"],[3,"SubGift"],[3,"ResubGift"],[3,"ExtendSub"],[4,"ChannelSubscribeEventsV1Reply"],[3,"Emote"],[3,"SubMessage"],[3,"FollowingReply"],[3,"HypeTrainRewards"],[3,"HypeTrainStart"],[3,"HypeTrainEnd"],[3,"HypeTrainCooldownExpiration"],[3,"HypeTrainConductorUpdate"],[3,"HypeTrainProgression"],[3,"HypeTrainLevelUp"],[3,"HypeTrainApproaching"],[4,"HypeTrainEventsV1Reply"],[3,"Config"],[4,"HypeTrainDifficulty"],[3,"Kickoff"],[3,"ParticipationConversionRates"],[3,"NotificationThresholds"],[3,"ConductorRewards"],[3,"BitsRewards"],[3,"SubsRewards"],[3,"Participations"],[3,"Conductors"],[3,"HypeTrainProgress"],[3,"Level"],[4,"Reward"],[4,"SourceType"],[4,"ActionType"],[4,"EndingReason"],[3,"ModerationAction"],[3,"ModeratorAdded"],[3,"ModeratorRemoved"],[3,"ChannelTermsAction"],[4,"ChatModeratorActionsReply"],[3,"VipAdded"],[3,"UnbanRequest"],[4,"ModerationActionCommand"],[4,"ChannelAction"],[4,"ModerationType"],[3,"RaidGoV2"],[3,"RaidUpdateV2"],[3,"RaidCancelV2"],[4,"RaidReply"],[4,"UserModerationNotificationsReply"],[4,"VideoPlaybackReply"],[3,"Vod"],[4,"WatchpartyType"],[4,"BroadcastType"],[3,"GetChatters"],[3,"Chatters"],[4,"RequestError"],[13,"PathError"],[8,"ResponseExt"],[8,"RequestExt"],[13,"UnimplementedEvent"],[13,"Welcome"],[13,"Keepalive"],[13,"Notification"],[13,"Revocation"],[13,"Reconnect"],[13,"Error"],[13,"InvalidResponse"],[13,"Error"],[13,"InvalidResponse"],[13,"Error"],[13,"InvalidResponse"],[13,"Error"],[13,"InvalidResponse"],[13,"Error"],[13,"InvalidResponse"],[13,"TopLevelNotSupported"],[13,"FieldNotSupported"],[13,"PairNotSupported"],[13,"ValueNotSupported"],[8,"Topic"],[13,"Message"],[13,"AutoModQueue"],[13,"ChannelBitsEventsV2"],[13,"ChannelBitsBadgeUnlocks"],[13,"ChatModeratorActions"],[13,"ChannelPointsChannelV1"],[13,"ChannelSubscribeEventsV1"],[13,"CommunityPointsChannelV1"],[13,"ChannelCheerEventsPublicV1"],[13,"ChannelSubGiftsV1"],[13,"VideoPlayback"],[13,"VideoPlaybackById"],[13,"HypeTrainEventsV1"],[13,"HypeTrainEventsV1Rewards"],[13,"Following"],[13,"Raid"],[13,"UserModerationNotifications"],[13,"AutomodFragment"],[13,"TextFragment"],[13,"UserMention"],[13,"BitsEvent"],[13,"CheerBomb"],[13,"UpdateRedemptionStatusesFinished"],[13,"UpdateRedemptionStatusProgress"],[13,"RewardRedeemed"],[13,"RedemptionStatusUpdate"],[13,"CustomRewardUpdated"],[13,"Badge"],[13,"Emote"],[13,"AutoModCaught"],[13,"Commercial"],[13,"StreamUp"],[13,"ViewCount"],[13,"StreamDown"],[13,"TosStrike"],[13,"WatchPartyVod"]],"a":{"bits":[10885],"channel":[4390],"channel-bits-badge-unlocks":[10886],"channel-bits-events-v2":[10885],"channel-cheer-events-public-v1":[10887],"channel-points-channel-v1":[10888],"channel-sub-gifts-v1":[10889],"channel-subscribe-events-v1":[10890],"channel.ban":[869],"channel.channel_points_custom_reward":[1170],"channel.channel_points_custom_reward.add":[2524],"channel.channel_points_custom_reward.remove":[2582],"channel.channel_points_custom_reward.update":[2591],"channel.channel_points_custom_reward_redemption":[1171],"channel.channel_points_custom_reward_redemption.add":[2681],"channel.channel_points_custom_reward_redemption.update":[2734],"channel.charity_campaign":[1175],"channel.charity_campaign.donate":[2826],"channel.charity_campaign.progress":[2831],"channel.charity_campaign.start":[2832],"channel.charity_campaign.stop":[2834],"channel.cheer":[1192],"channel.follow":[1674],"channel.goal":[1761],"channel.goal.begin":[2952],"channel.goal.end":[2971],"channel.goal.progress":[2977],"channel.hype_train":[1764],"channel.hype_train.begin":[3041],"channel.hype_train.end":[3065],"channel.hype_train.progress":[3088],"channel.poll":[1923],"channel.poll.begin":[3175],"channel.poll.end":[3207],"channel.poll.progress":[3228],"channel.prediction":[1924],"channel.prediction.begin":[3302],"channel.prediction.end":[3319],"channel.prediction.lock":[3325],"channel.prediction.progress":[3333],"channel.shield_mode":[2017],"channel.shield_mode.begin":[3416],"channel.shield_mode.end":[3425],"channel.shoutout":[2021],"channel.shoutout.create":[3475],"channel.shoutout.receive":[3484],"channel.subscribe":[2045],"channel.subscription":[2046],"channel.subscription.end":[3560],"channel.subscription.gift":[3561],"channel.subscription.message":[3564],"channel.unban":[2382],"channel.update":[2383],"channels":[519],"chat_moderator_actions":[10946],"cheer":[10887],"community-points-channel-v1":[10899],"follow":[10916],"follows":[10916],"gift":[10889],"hype-train-events-v1":[10938],"live":[4555,10971],"mod":[4507,10946],"points":[1170,1171,10888],"raids":[10949],"stream":[10971],"stream.offline":[4049],"stream.online":[4050],"streams":[693],"subscription":[2045,4556,10890],"subscriptions":[2045,10890],"tmi":[99],"user":[4614],"user.authorization.grant":[4224],"user.authorization.revoke":[4225],"user.update":[4199],"video-playback":[10971],"videos":[10971],"viewers":[10971],"vod":[4615,10971],"whisper":[4628]}},\
"twitch_oauth2":{"doc":"github crates-io docs-rs","t":"HCNNDNNNNNNNNNNNNNNNNNNNNNNNNNNCCNCNNNNNNNNNNNNNNNNNNNNNHCEEHNINNNNNNNNNNNDHDNNMMLLLLLLLAKMLLLLLLLLKMLLLLLLLLLLLALLLLKMMMLKMMLAKMLLLLLLKKALLLLLLLLLACKMMLLLLMIQNNNEHNLLLLLLLLLLKLLLLLLDDLMLLLLLLLLLLMLMLLLLLLLLMLLMLMLLMLLLLLLLLLLLNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNENNNNNNNNNNNNNLLLLLLDNEDIDNDDMMLLLLLLLLLLLLLKLLMLLLLLLLLLLAKLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLMMLMLLLKLLMMLKLLMLLLLLLKLLKLLLLLLLLLLLLLLLLLKLLMMLLLLLLEENNNNNENNNNNNNNNNENNNEENNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["AUTH_URL","AccessToken","AnalyticsReadExtensions","AnalyticsReadGames","AppAccessToken","BitsRead","ChannelEditCommercial","ChannelManageBroadcast","ChannelManageExtensions","ChannelManageModerators","ChannelManagePolls","ChannelManagePredictions","ChannelManageRaids","ChannelManageRedemptions","ChannelManageSchedule","ChannelManageVideos","ChannelManageVips","ChannelModerate","ChannelReadCharity","ChannelReadEditors","ChannelReadGoals","ChannelReadHypeTrain","ChannelReadPolls","ChannelReadPredictions","ChannelReadRedemptions","ChannelReadStreamKey","ChannelReadSubscriptions","ChannelReadVips","ChannelSubscriptions","ChatEdit","ChatRead","ClientId","ClientSecret","ClipsEdit","CsrfToken","DeserializeError","ModerationRead","ModeratorManageAnnouncements","ModeratorManageAutoMod","ModeratorManageAutomodSettings","ModeratorManageBannedUsers","ModeratorManageBlockedTerms","ModeratorManageChatMessages","ModeratorManageChatSettings","ModeratorManageShieldMode","ModeratorManageShoutouts","ModeratorReadAutomodSettings","ModeratorReadBlockedTerms","ModeratorReadChatSettings","ModeratorReadChatters","ModeratorReadFollowers","ModeratorReadShieldMode","ModeratorReadShoutouts","NotJson","Other","Other","REVOKE_URL","RefreshToken","RequestParseError","Scope","TOKEN_URL","TwitchError","TwitchToken","UserEdit","UserEditBroadcast","UserEditFollows","UserManageBlockedUsers","UserManageChatColor","UserManageWhispers","UserReadBlockedUsers","UserReadBroadcast","UserReadEmail","UserReadFollows","UserReadSubscriptions","UserToken","VALIDATE_URL","ValidatedToken","WhispersEdit","WhispersRead","access_token","access_token","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","client_id","client_id","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","equivalent","expires_in","expires_in","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","id","into","into","into","is_elapsed","login","login","login","never_expiring","provide","refresh_token","refresh_token","refresh_token","revoke_token","scopes","scopes","scopes","serialize","source","to_owned","to_owned","to_string","to_string","token","token_type","tokens","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","types","url","user_id","user_id","user_id","validate_token","vzip","vzip","vzip","found","Client","Error","InvalidHeaderName","InvalidHeaderValue","Surf","SurfError","TWITCH_OAUTH2_USER_AGENT","UrlError","borrow","borrow_mut","fmt","fmt","from","from","from","from","into","provide","req","source","to_string","try_from","try_into","type_id","vzip","TwitchTokenErrorResponse","TwitchTokenResponse","access_token","access_token","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","error","expires_in","expires_in","fmt","fmt","fmt","from","from","from_response","into","into","message","provide","refresh_token","refresh_token","scopes","scopes","serialize","serialize","status","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AnalyticsReadExtensions","AnalyticsReadGames","BitsRead","ChannelEditCommercial","ChannelManageBroadcast","ChannelManageExtensions","ChannelManageModerators","ChannelManagePolls","ChannelManagePredictions","ChannelManageRaids","ChannelManageRedemptions","ChannelManageSchedule","ChannelManageVideos","ChannelManageVips","ChannelModerate","ChannelReadCharity","ChannelReadEditors","ChannelReadGoals","ChannelReadHypeTrain","ChannelReadPolls","ChannelReadPredictions","ChannelReadRedemptions","ChannelReadStreamKey","ChannelReadSubscriptions","ChannelReadVips","ChannelSubscriptions","ChatEdit","ChatRead","ClipsEdit","ModerationRead","ModeratorManageAnnouncements","ModeratorManageAutoMod","ModeratorManageAutomodSettings","ModeratorManageBannedUsers","ModeratorManageBlockedTerms","ModeratorManageChatMessages","ModeratorManageChatSettings","ModeratorManageShieldMode","ModeratorManageShoutouts","ModeratorReadAutomodSettings","ModeratorReadBlockedTerms","ModeratorReadChatSettings","ModeratorReadChatters","ModeratorReadFollowers","ModeratorReadShieldMode","ModeratorReadShoutouts","Other","Scope","UserEdit","UserEditBroadcast","UserEditFollows","UserManageBlockedUsers","UserManageChatColor","UserManageWhispers","UserReadBlockedUsers","UserReadBroadcast","UserReadEmail","UserReadFollows","UserReadSubscriptions","WhispersEdit","WhispersRead","all","all_slice","as_static_str","as_str","description","parse","AppAccessToken","AppAccessToken","BearerTokenType","ImplicitUserTokenBuilder","TwitchToken","UserToken","UserToken","UserTokenBuilder","ValidatedToken","access_token","access_token","add_scope","add_scope","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","client_id","client_id","client_id","client_id","clone","clone","clone","clone_into","clone_into","clone_into","csrf_is_valid","csrf_is_valid","eq","equivalent","errors","expires_in","expires_in","expires_in","expires_in","fmt","fmt","fmt","force_verify","force_verify","from","from","from","from","from","from_existing","from_existing","from_existing_unchecked","from_existing_unchecked","from_response","from_response","from_response","generate_url","generate_url","get_app_access_token","get_app_access_token_request","get_user_token","get_user_token","get_user_token_request","into","into","into","into","into","is_elapsed","login","login","login","login","login","mock_token","never_expiring","new","new","new","refresh_token","refresh_token","refresh_token","refresh_token","refresh_token","revoke_token","scopes","scopes","scopes","scopes","set_scopes","set_scopes","set_secret","to_owned","to_owned","to_owned","token","token","token","token_type","token_type","token_type","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","user_id","user_id","user_id","user_id","user_id","validate_token","vzip","vzip","vzip","vzip","vzip","AppAccessTokenError","ImplicitUserTokenExchangeError","InvalidToken","NoClientSecretFound","NoExpiration","NoRefreshToken","NotAuthorized","RefreshTokenError","Request","Request","RequestError","RequestError","RequestError","RequestParseError","RequestParseError","RequestParseError","RequestParseError","RequestParseError","RevokeTokenError","StateMismatch","StateMismatch","TwitchError","UserTokenExchangeError","ValidationError","ValidationError","ValidationError","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into_other","provide","provide","provide","provide","provide","provide","source","source","source","source","source","source","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","description","error","AccessToken","AccessTokenRef","ClientId","ClientIdRef","ClientSecret","ClientSecretRef","CsrfToken","CsrfTokenRef","RefreshToken","RefreshTokenRef","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_str","as_str","as_str","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","deref","deref","deref","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_owned","into_owned","into_owned","into_owned","into_owned","new","new","new","new","new","new_random","new_random_len","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","refresh_token","refresh_token_request","revoke_token","revoke_token_request","secret","secret","secret","secret","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","take","take","take","take","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_token","validate_token_request","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"twitch_oauth2"],[156,"twitch_oauth2::RequestParseError"],[157,"twitch_oauth2::client"],[182,"twitch_oauth2::id"],[227,"twitch_oauth2::scopes"],[294,"twitch_oauth2::tokens"],[425,"twitch_oauth2::tokens::errors"],[537,"twitch_oauth2::tokens::errors::ImplicitUserTokenExchangeError"],[539,"twitch_oauth2::types"]],"d":["Authorization URL (<code>https://id.twitch.tv/oauth2/authorize</code>) …","","View analytics data for the Twitch Extensions owned by the …","View analytics data for the games owned by the …","An App Access Token from the OAuth client credentials flow","View Bits information for a channel.","Run commercials on a channel.","Manage a channel’s broadcast configuration, including …","Manage a channel’s Extension configuration, including …","Add or remove the moderator role from users in your …","Manage a channel’s polls.","Manage of channel’s Channel Points Predictions","Manage a channel raiding another channel.","Manage Channel Points custom rewards and their redemptions …","Manage a channel’s stream schedule.","Manage a channel’s videos, including deleting videos.","Add or remove the VIP role from users in your channel.","Perform moderation actions in a channel. The user …","Read charity campaign details and user donations on your …","View a list of users with the editor role for a channel.","View Creator Goals for a channel.","View Hype Train information for a channel.","View a channel’s polls.","View a channel’s Channel Points Predictions.","View Channel Points custom rewards and their redemptions …","View an authorized user’s stream key.","View a list of all subscribers to a channel and check if a …","Read the list of VIPs in your channel.","Read all subscribers to your channel.","Send live stream chat and rooms messages.","View live stream chat and rooms messages.","","","Manage Clips for a channel.","","deserialization failed","View a channel’s moderation data including Moderators, …","Send announcements in channels where you have the …","Manage messages held for review by AutoMod in channels …","Manage a broadcaster’s AutoMod settings","Ban and unban users.","Manage a broadcaster’s list of blocked terms.","Delete chat messages in channels where you have the …","View a broadcaster’s chat room settings.","Manage a broadcaster’s Shield Mode status.","Manage a broadcaster’s shoutouts.","View a broadcaster’s AutoMod settings.","View a broadcaster’s list of blocked terms.","View a broadcaster’s chat room settings.","View the chatters in a broadcaster’s chat room.","Read the followers of a broadcaster.","View a broadcaster’s Shield Mode status.","View a broadcaster’s shoutouts.","returned content is not <code>application/json</code>, found <code>{found}</code>","Other scope that is not implemented.","twitch returned an unexpected status code: {0}","Revokation URL (<code>https://id.twitch.tv/oauth2/revoke</code>) for …","","Errors from parsing responses","Scopes for twitch.","Token URL (<code>https://id.twitch.tv/oauth2/token</code>) for …","twitch returned an error","Trait for twitch tokens to get fields and generalize over …","Manage a user object.","Edit your channel’s broadcast configuration, including …","[DEPRECATED] Was previously used for “Create User …","Manage the block list of a user.","Update the color used for the user’s name in chat.Update …","Read whispers that you send and receive, and send whispers …","View the block list of a user.","View a user’s broadcasting configuration, including …","View a user’s email address.","View the list of channels a user follows.","View if an authorized user is subscribed to specific …","An User Token from the OAuth implicit code flow or OAuth …","Validation URL (<code>https://id.twitch.tv/oauth2/validate</code>) for …","Token validation returned from …","Send whisper messages.","View your whisper messages.","The access token used to authenticate requests with","The access token used to authenticate requests with","","","","","","","","Provides different http clients","Client ID associated with the token. Twitch requires this …","Client ID associated with the token. Twitch requires this …","","","","","","","","","Get current lifetime of token.","Lifetime of the token","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Representation of oauth2 flow in <code>id.twitch.tv</code>","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether or not the token is expired.","Get the username associated to this token","Username of user associated with this token","Username associated with the token","Token will never expire","","Refresh this token, changing the token to a newer one","The refresh token used to extend the life of this user …","The refresh token used to extend the life of this user …","Revoke the token. See …","Module for all possible scopes in twitch.","Retrieve scopes attached to the token","Scopes attached to the token.","","","","","","","Get the AccessToken for authenticating","Get the type of token.","Twitch token types","","","","","","","","","","Types used in OAUTH2 flow.","","Get the user id associated to this token","User ID of the user associated with this token","User ID associated with the token","Validate this token. Should be checked on regularly, …","","","","Found <code>Content-Type</code> header","A client that can do OAUTH2 requests","Error returned by the client","could not construct header name","could not construct header value","surf failed to do the request: {0}","Possible errors from <code>Client::req()</code> when using the surf …","The User-Agent <code>product</code> of this crate.","uri could not be translated into an url.","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Send a request","","","","","","","Twitch’s representation of the oauth flow for errors","Twitch’s representation of the oauth flow.","Get the access token from this response","Access token","","","","","","","","","","","Description of the error message.","Get the expires in from this response","Time (in seconds) until token expires","","","","Returns the argument unchanged.","Returns the argument unchanged.","Create a TwitchTokenResponse from a http::Response","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Message attached to error","","Get the refresh token from this response","Token that can be used to refresh","Get the scopes from this response","Scopes attached to token","","","Status code of error","","","","","","","","","","","","View analytics data for the Twitch Extensions owned by the …","View analytics data for the games owned by the …","View Bits information for a channel.","Run commercials on a channel.","Manage a channel’s broadcast configuration, including …","Manage a channel’s Extension configuration, including …","Add or remove the moderator role from users in your …","Manage a channel’s polls.","Manage of channel’s Channel Points Predictions","Manage a channel raiding another channel.","Manage Channel Points custom rewards and their redemptions …","Manage a channel’s stream schedule.","Manage a channel’s videos, including deleting videos.","Add or remove the VIP role from users in your channel.","Perform moderation actions in a channel. The user …","Read charity campaign details and user donations on your …","View a list of users with the editor role for a channel.","View Creator Goals for a channel.","View Hype Train information for a channel.","View a channel’s polls.","View a channel’s Channel Points Predictions.","View Channel Points custom rewards and their redemptions …","View an authorized user’s stream key.","View a list of all subscribers to a channel and check if a …","Read the list of VIPs in your channel.","Read all subscribers to your channel.","Send live stream chat and rooms messages.","View live stream chat and rooms messages.","Manage Clips for a channel.","View a channel’s moderation data including Moderators, …","Send announcements in channels where you have the …","Manage messages held for review by AutoMod in channels …","Manage a broadcaster’s AutoMod settings","Ban and unban users.","Manage a broadcaster’s list of blocked terms.","Delete chat messages in channels where you have the …","View a broadcaster’s chat room settings.","Manage a broadcaster’s Shield Mode status.","Manage a broadcaster’s shoutouts.","View a broadcaster’s AutoMod settings.","View a broadcaster’s list of blocked terms.","View a broadcaster’s chat room settings.","View the chatters in a broadcaster’s chat room.","Read the followers of a broadcaster.","View a broadcaster’s Shield Mode status.","View a broadcaster’s shoutouts.","Other scope that is not implemented.","Scopes for twitch.","Manage a user object.","Edit your channel’s broadcast configuration, including …","[DEPRECATED] Was previously used for “Create User …","Manage the block list of a user.","Update the color used for the user’s name in chat.Update …","Read whispers that you send and receive, and send whispers …","View the block list of a user.","View a user’s broadcasting configuration, including …","View a user’s email address.","View the list of channels a user follows.","View if an authorized user is subscribed to specific …","Send whisper messages.","View your whisper messages.","Get a vec of all defined twitch Scopes.","Get a slice of all defined twitch Scopes.","Get the scope as a static string slice.","Get the scope as a borrowed string.","Get a description for the token","Make a scope from a cow string","An App Access Token from the OAuth client credentials flow","Token for server-to-server requests.","Types of bearer tokens","Builder for OAuth implicit code flow","Trait for twitch tokens to get fields and generalize over …","An User Token from the OAuth implicit code flow or OAuth …","Token for making requests in the context of an …","Builder for OAuth authorization code flow","Token validation returned from …","The access token used to authenticate requests with","The access token used to authenticate requests with","Add a single scope to request","Add a single scope to request","","","","","","","","","","","Create a <code>UserTokenBuilder</code> to get a token with the OAuth …","Client ID associated with the token. Twitch requires this …","","","Client ID associated with the token. Twitch requires this …","","","","","","","Check if the CSRF is valid","Check if the CSRF is valid","","","Errors","Get current lifetime of token.","","","Lifetime of the token","","","","Enable or disable function to make the user able to switch …","Enable or disable function to make the user able to switch …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Assemble token and validate it. Retrieves <code>client_id</code> and …","Assemble token and validate it. Retrieves <code>login</code>, <code>client_id</code> …","Assemble token without checks.","Assemble token without checks.","Assemble token from twitch responses.","Assemble token from twitch responses.","Assemble a a validated token from a response.","Generate the URL to request a code.","Generate the URL to request a token.","Generate app access token via OAuth client credentials flow","Get the request for getting a app access token.","Generate the code with the help of the authorization code","Generate the code with the help of the hash.","Get the request for getting a TwitchTokenResponse, to be …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns whether or not the token is expired.","Get the username associated to this token","","","Username of user associated with this token","Username associated with the token","Generate a user token from mock-api","Token will never expire","Create a <code>UserTokenBuilder</code>","Create a <code>ImplicitUserTokenBuilder</code>","Create a new token","Refresh this token, changing the token to a newer one","","","The refresh token used to extend the life of this user …","The refresh token used to extend the life of this user …","Revoke the token. See …","Retrieve scopes attached to the token","","","Scopes attached to the token.","Add scopes to the request","Add scopes to the request","Set the client secret","","","","Get the AccessToken for authenticating","","","Get the type of token.","","","","","","","","","","","","","","","","","","Get the user id associated to this token","","","User ID of the user associated with this token","User ID associated with the token","Validate this token. Should be checked on regularly, …","","","","","","General errors for talking with twitch, used in …","Errors for ImplicitUserTokenBuilder::get_user_token","given token is not of the correct token type: {0}","no client secret found","no expiration found on new token","no refresh token found","token is not authorized for use","Errors for TwitchToken::refresh_token","request for token failed","failed to request validation","failed to do revokation","request when refreshing token failed","request for user token failed","could not parse response when getting app access token","could not parse response when validating token","could not parse response when revoking token","could not parse response when refreshing token.","could not parse response when getting user token","Errors for AccessToken::revoke_token","state CSRF does not match when exchanging user token","state CSRF does not match","twitch returned an error: {error:?} - {description:?}","Errors for <code>UserTokenBuilder::get_user_token</code> and …","Errors for AccessToken::validate_token and …","could not get validation for user token","could not get validation for token","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert this error from a infallible to another","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Description of error","Error type","An Access Token","An Access Token","A Client Id","A Client Id","A Client Secret","A Client Secret","A Csrf Token","A Csrf Token","A Refresh Token","A Refresh Token","","","","","","","","","","","","","","","","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","","Constructs a new ClientId from a static reference","Transparently reinterprets the static string slice as a …","Constructs a new ClientSecret from a static reference","Transparently reinterprets the static string slice as a …","Constructs a new AccessToken from a static reference","Transparently reinterprets the static string slice as a …","Constructs a new RefreshToken from a static reference","Transparently reinterprets the static string slice as a …","Constructs a new CsrfToken from a static reference","Transparently reinterprets the static string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>ClientId</code> into a <code>Box&lt;ClientIdRef&gt;</code>","Converts this <code>ClientSecret</code> into a <code>Box&lt;ClientSecretRef&gt;</code>","Converts this <code>AccessToken</code> into a <code>Box&lt;AccessTokenRef&gt;</code>","Converts this <code>RefreshToken</code> into a <code>Box&lt;RefreshTokenRef&gt;</code>","Converts this <code>CsrfToken</code> into a <code>Box&lt;CsrfTokenRef&gt;</code>","Converts a <code>Box&lt;ClientIdRef&gt;</code> into a <code>ClientId</code> without …","Converts a <code>Box&lt;ClientSecretRef&gt;</code> into a <code>ClientSecret</code> …","Converts a <code>Box&lt;AccessTokenRef&gt;</code> into a <code>AccessToken</code> without …","Converts a <code>Box&lt;RefreshTokenRef&gt;</code> into a <code>RefreshToken</code> …","Converts a <code>Box&lt;CsrfTokenRef&gt;</code> into a <code>CsrfToken</code> without …","Constructs a new ClientId","Constructs a new ClientSecret","Constructs a new AccessToken","Constructs a new RefreshToken","Constructs a new CsrfToken","Make a new random CSRF token.","Make a new random CSRF token with given amount of bytes","","","","","","","","","","","Refresh the token, call if it has expired.","Get the request needed to refresh this token.","Revoke the token.","Get the request needed to revoke this token.","Get the secret from this string.","Get the secret from this string.","Get the secret from this string.","Get the secret from this string.","","","","","","","","","","","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate this token.","Get the request needed to validate this token.","","","","",""],"i":[0,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,11,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,11,1,11,0,0,0,0,0,11,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,49,50,1,1,4,11,1,4,11,0,69,4,1,4,1,4,1,4,1,1,69,4,1,1,4,11,11,1,1,4,11,11,11,0,1,4,11,69,69,50,4,50,11,69,49,50,69,0,69,4,1,11,1,4,1,11,69,69,0,1,4,11,1,4,11,1,4,11,0,0,69,50,4,69,1,4,11,70,0,19,31,31,31,0,0,31,31,31,31,31,31,31,31,31,31,31,19,31,31,31,31,31,31,0,0,38,38,38,14,38,14,38,14,38,14,38,14,14,38,38,38,14,14,38,14,38,38,14,14,14,38,38,38,38,38,14,14,38,14,14,38,14,38,14,38,14,38,14,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,27,0,0,0,0,27,0,0,49,50,45,46,45,46,49,50,27,45,46,49,50,27,50,69,49,50,4,49,50,27,49,50,27,45,46,27,27,0,69,49,50,4,49,50,27,45,46,45,46,49,50,27,49,50,49,50,49,50,4,45,46,49,49,45,46,45,45,46,49,50,27,69,69,49,50,50,4,50,50,45,46,50,69,49,50,49,50,69,69,49,50,4,45,46,50,49,50,27,69,49,50,69,49,50,45,46,49,50,27,45,46,49,50,27,45,46,49,50,27,69,49,50,50,4,69,45,46,49,50,27,0,0,52,63,63,63,52,0,56,52,62,63,59,56,52,62,63,59,0,59,60,60,0,0,59,60,56,52,62,63,59,60,56,52,62,63,59,60,56,56,52,52,62,62,63,63,59,59,60,60,56,56,52,52,62,62,63,63,59,59,59,60,60,56,52,62,63,59,60,52,56,52,62,63,59,60,56,52,62,63,59,60,56,52,62,63,59,60,56,52,62,63,59,60,56,52,62,63,59,60,56,52,62,63,59,60,56,52,62,63,59,60,71,71,0,0,0,0,0,0,0,0,0,0,3,3,57,47,47,58,26,26,39,51,51,42,64,64,65,57,58,39,42,65,3,3,3,57,57,47,47,47,58,58,26,26,26,39,39,51,51,51,42,42,64,64,64,65,65,3,57,47,58,26,39,51,42,64,65,3,47,26,51,64,3,47,26,51,64,3,57,47,58,26,39,51,42,64,65,3,47,26,51,64,3,57,47,58,26,39,51,42,64,65,3,3,3,57,57,57,47,47,47,58,58,58,26,26,26,39,39,39,51,51,51,42,42,42,64,64,64,65,65,65,3,57,47,58,26,39,51,42,64,65,3,3,57,57,47,47,58,58,26,26,39,39,51,51,42,42,64,64,65,65,3,3,3,3,3,3,3,57,57,47,47,47,47,47,47,47,58,58,26,26,26,26,26,26,26,39,39,51,51,51,51,51,51,51,42,42,64,64,64,64,64,64,64,65,65,3,57,47,58,26,39,51,42,64,65,3,57,47,58,26,39,51,42,64,65,3,57,47,58,26,39,51,42,64,65,3,47,26,51,64,3,47,26,51,64,57,58,39,42,65,3,47,26,51,64,64,64,3,57,47,58,26,39,51,42,64,65,42,42,39,39,58,39,42,65,3,57,47,58,26,39,51,42,64,65,3,47,26,51,64,3,57,47,58,26,39,51,42,64,65,3,57,47,58,26,39,51,42,64,65,3,47,26,51,64,3,47,26,51,64,3,57,47,58,26,39,51,42,64,65,39,39,3,47,26,51,64],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],3],0,[1,1],[4,4],[[]],[[]],[5,[[6,[1]]]],[5,[[6,[4]]]],[[1,1],7],[[],7],[[],8],0,[[1,9],10],[[1,9],10],[[4,9],10],[[11,9],10],[[11,9],10],[[]],[12,1],[[]],[13,11],[[]],[14,11],0,[[]],[[]],[[]],[[],7],[[],[[16,[15]]]],0,0,0,[17],[[18,19],[[22,[[21,[20]]]]]],0,0,[[[0,[18,23]],19],[[22,[[21,[20]]]]]],0,[[]],0,[[1,24],6],[11,[[16,[25]]]],[[]],[[]],[[],12],[[],12],[[],26],[[],27],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],28],[[],28],[[],28],0,0,[[],[[16,[29]]]],0,0,[[[0,[18,30]],19],[[22,[[21,[20]]]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[31,9],10],[[31,9],10],[32,31],[33,31],[34,31],[[]],[[]],[17],[[[37,[[36,[35]]]]],[[22,[[21,[20]]]]]],[31,[[16,[25]]]],[[],12],[[],6],[[],6],[[],28],[[]],0,0,[38,39],0,[[]],[[]],[[]],[[]],[38,38],[14,14],[[]],[[]],[5,[[6,[38]]]],[5,[[6,[14]]]],0,[38,[[16,[8]]]],0,[[38,9],10],[[14,9],10],[[14,9],10],[[]],[[]],[[[41,[40]]],[[6,[38,11]]]],[[]],[[]],0,[17],[38,[[16,[42]]]],0,[38,16],0,[[38,24],6],[[14,24],6],0,[[]],[[]],[[],12],[[],6],[[],6],[[],6],[[],6],[[],28],[[],28],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],[[36,[1]]]],[[]],[1,2],[1,2],[1,2],[[[44,[[43,[2]]]]],1],0,0,0,0,0,0,0,0,0,0,0,[[45,1]],[[46,1]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,47,48],45],[[],3],[49,3],[50,3],0,[49,49],[50,50],[27,27],[[]],[[]],[[]],[[45,2],7],[[46,2],7],[[27,27],7],[[],7],0,[[],8],[49,8],[50,8],0,[[49,9],10],[[50,9],10],[[27,9],10],[[45,7],45],[[46,7],46],[[]],[[]],[[]],[[]],[[]],[[19,26,[44,[[16,[51]]]],47],[[6,[49,52]]]],[[19,26,[44,[[16,[51]]]],[44,[[16,[47]]]]],[[6,[50,52]]]],[[26,[44,[[16,[51]]]],[44,[3]],[44,[47]],[16,[[36,[1]]]],[16,[8]]],49],[[[44,[26]],[44,[[16,[51]]]],[44,[3]],[44,[[16,[47]]]],53,54,[16,[[36,[1]]]],[16,[8]]],50],[[38,[44,[3]],[44,[47]]],49],[[38,4,[44,[[16,[47]]]]],[[6,[50,[52,[55]]]]]],[[[41,[40]]],[[6,[4,[52,[55]]]]]],[45],[46],[[19,3,47,[36,[1]]],[[6,[49,56]]]],[[57,58,[36,[1]]],[[37,[[36,[35]]]]]],[[45,19,2,2],[[6,[50,59]]]],[[46,19,[16,[2]],[16,[2]],[16,[2]],[16,[2]]],[[6,[50,60]]]],[[45,2],[[37,[[36,[35]]]]]],[[]],[[]],[[]],[[]],[[]],[[],7],[[],[[16,[15]]]],[49,[[16,[15]]]],[50,[[16,[15]]]],0,0,[[19,3,47,[40,[2]],[36,[1]]],[[6,[50,59]]]],0,[[[44,[3]],[44,[47]],48],45],[[3,48],46],[[26,[16,[51]],4,[44,[[16,[47]]]]],[[6,[50,[52,[55]]]]]],[[18,19],[[22,[[21,[20]]]]]],[[49,19],[[22,[[21,[20]]]]]],[[50,19],[[22,[[21,[20]]]]]],0,0,[[[0,[18,23]],19],[[22,[[21,[20]]]]]],[[]],[49],[50],0,[[45,[36,[1]]],45],[[46,[36,[1]]],46],[[50,[16,[47]]]],[[]],[[]],[[]],[[],26],[49,26],[50,26],[[],27],[[],27],[[],27],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],28],[[],28],[[],28],[[],28],[[],28],[[],[[16,[29]]]],[49,[[16,[29]]]],[50,[[16,[29]]]],0,0,[[[0,[18,30]],19],[[22,[[21,[20]]]]]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[56,[[0,[61,25,23,30]]]],9],10],[[[56,[[0,[25,23,30]]]],9],10],[[[52,[[0,[61,25,23,30]]]],9],10],[[[52,[[0,[25,23,30]]]],9],10],[[[62,[[0,[25,23,30]]]],9],10],[[[62,[[0,[61,25,23,30]]]],9],10],[[[63,[[0,[25,23,30]]]],9],10],[[[63,[[0,[61,25,23,30]]]],9],10],[[[59,[[0,[25,23,30]]]],9],10],[[[59,[[0,[61,25,23,30]]]],9],10],[[[60,[[0,[25,23,30]]]],9],10],[[[60,[[0,[61,25,23,30]]]],9],10],[[]],[11,[[56,[[0,[25,23,30]]]]]],[11,[[52,[[0,[25,23,30]]]]]],[[]],[11,[[62,[[0,[25,23,30]]]]]],[[]],[11,[[63,[[0,[25,23,30]]]]]],[[]],[11,[[59,[[0,[25,23,30]]]]]],[[[52,[[0,[25,23,30]]]]],[[59,[[0,[25,23,30]]]]]],[[]],[[[52,[[0,[25,23,30]]]]],[[60,[[0,[25,23,30]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[52,[55]]],[[52,[[0,[25,23,30]]]]]],[17],[17],[17],[17],[17],[17],[[[56,[[0,[25,23,30]]]]],[[16,[25]]]],[[[52,[[0,[25,23,30]]]]],[[16,[25]]]],[[[62,[[0,[25,23,30]]]]],[[16,[25]]]],[[[63,[[0,[25,23,30]]]]],[[16,[25]]]],[[[59,[[0,[25,23,30]]]]],[[16,[25]]]],[[[60,[[0,[25,23,30]]]]],[[16,[25]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,[3,57],[3,2],[57,2],[47,58],[47,2],[58,2],[26,2],[26,39],[39,2],[51,42],[51,2],[42,2],[64,2],[64,65],[65,2],[57,2],[58,2],[39,2],[42,2],[65,2],[3,2],[3,57],[[]],[57,2],[[]],[47,2],[47,58],[[]],[[]],[58,2],[[]],[26,2],[26,39],[39,2],[[]],[51,42],[51,2],[[]],[42,2],[[]],[64,65],[[]],[64,2],[65,2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[3,3],[47,47],[26,26],[51,51],[64,64],[[]],[[]],[[]],[[]],[[]],[[3,3],66],[[57,57],66],[[47,47],66],[[58,58],66],[[26,26],66],[[39,39],66],[[51,51],66],[[42,42],66],[[64,64],66],[[65,65],66],[3],[47],[26],[51],[64],[5,[[6,[3]]]],[5,[[6,[57]]]],[5,[[6,[47]]]],[5,[[6,[58]]]],[5,[[6,[26]]]],[5,[[6,[39]]]],[5,[[6,[51]]]],[5,[[6,[42]]]],[5,[[6,[64]]]],[5,[[6,[65]]]],[[3,57],7],[[3,57],7],[[3,3],7],[[57,57],7],[[57,3],7],[[57,3],7],[[47,47],7],[[47,58],7],[[47,58],7],[[58,47],7],[[58,47],7],[[58,58],7],[[26,39],7],[[26,26],7],[[26,39],7],[[39,39],7],[[39,26],7],[[39,26],7],[[51,51],7],[[51,42],7],[[51,42],7],[[42,51],7],[[42,42],7],[[42,51],7],[[64,65],7],[[64,64],7],[[64,65],7],[[65,64],7],[[65,65],7],[[65,64],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[3,9],10],[[3,9],10],[[57,9],10],[[57,9],10],[[47,9],10],[[47,9],10],[[58,9],10],[[58,9],10],[[26,9],10],[[26,9],10],[[39,9],10],[[39,9],10],[[51,9],10],[[51,9],10],[[42,9],10],[[42,9],10],[[64,9],10],[[64,9],10],[[65,9],10],[[65,9],10],[12,3],[2,3],[57,3],[[[21,[57]]],3],[[[21,[2]]],3],[[]],[[[43,[57]]],3],[[[43,[57]]],57],[2,57],[[]],[[[21,[2]]],47],[12,47],[2,47],[[[21,[58]]],47],[58,47],[[[43,[58]]],47],[[[43,[58]]],58],[2,58],[2,26],[[[21,[2]]],26],[12,26],[[[43,[39]]],26],[39,26],[[[21,[39]]],26],[[]],[[[43,[39]]],39],[2,39],[2,51],[[[43,[42]]],51],[[]],[[[21,[42]]],51],[42,51],[12,51],[[[21,[2]]],51],[2,42],[[[43,[42]]],42],[65,64],[[[43,[65]]],64],[[[21,[2]]],64],[[]],[2,64],[12,64],[[[21,[65]]],64],[[[43,[65]]],65],[2,65],[2,3],[2,57],[2,47],[2,58],[2,26],[2,39],[2,51],[2,42],[2,64],[2,65],[2,[[6,[3]]]],[2,57],[2,[[6,[47]]]],[2,58],[2,[[6,[26]]]],[2,39],[2,[[6,[51]]]],[2,42],[2,[[6,[64]]]],[2,65],[[3,67]],[[57,67]],[[47,67]],[[58,67]],[[26,67]],[[39,67]],[[51,67]],[[42,67]],[[64,67]],[[65,67]],[[]],[[]],[[]],[[]],[[]],[3,[[21,[57]]]],[47,[[21,[58]]]],[26,[[21,[39]]]],[51,[[21,[42]]]],[64,[[21,[65]]]],[[[21,[57]]],3],[[[21,[58]]],47],[[[21,[39]]],26],[[[21,[42]]],51],[[[21,[65]]],64],[12,3],[12,47],[12,26],[12,51],[12,64],[[],64],[68,64],[[3,3],[[16,[66]]]],[[57,57],[[16,[66]]]],[[47,47],[[16,[66]]]],[[58,58],[[16,[66]]]],[[26,26],[[16,[66]]]],[[39,39],[[16,[66]]]],[[51,51],[[16,[66]]]],[[42,42],[[16,[66]]]],[[64,64],[[16,[66]]]],[[65,65],[[16,[66]]]],[[42,19,3,47],[[6,[63]]]],[[42,3,47],[[37,[[36,[35]]]]]],[[39,19,3],[[6,[62]]]],[[39,3],[[37,[[36,[35]]]]]],[58,2],[39,2],[42,2],[65,2],[[3,24],6],[[57,24],6],[[47,24],6],[[58,24],6],[[26,24],6],[[39,24],6],[[51,24],6],[[42,24],6],[[64,24],6],[[65,24],6],[3,12],[47,12],[26,12],[51,12],[64,12],[[]],[57],[[]],[58],[[]],[39],[[]],[42],[[]],[65],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[],28],[[39,19],[[6,[4,52]]]],[39,[[37,[[36,[35]]]]]],[[]],[[]],[[]],[[]],[[]]],"c":[28,65,252,277],"p":[[4,"Scope"],[15,"str"],[3,"ClientId"],[3,"ValidatedToken"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"Duration"],[3,"Formatter"],[6,"Result"],[4,"RequestParseError"],[3,"String"],[3,"Error"],[3,"TwitchTokenErrorResponse"],[6,"UserNameRef"],[4,"Option"],[3,"Demand"],[8,"Sized"],[8,"Client"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Send"],[8,"Serializer"],[8,"Error"],[3,"AccessToken"],[4,"BearerTokenType"],[3,"TypeId"],[3,"UserIdRef"],[8,"Sync"],[4,"SurfError"],[3,"InvalidHeaderName"],[3,"InvalidHeaderValue"],[4,"ParseError"],[15,"u8"],[3,"Vec"],[3,"Request"],[3,"TwitchTokenResponse"],[3,"AccessTokenRef"],[8,"AsRef"],[3,"Response"],[3,"RefreshTokenRef"],[4,"Cow"],[8,"Into"],[3,"UserTokenBuilder"],[3,"ImplicitUserTokenBuilder"],[3,"ClientSecret"],[3,"Url"],[3,"AppAccessToken"],[3,"UserToken"],[3,"RefreshToken"],[4,"ValidationError"],[6,"UserName"],[3,"UserId"],[4,"Infallible"],[4,"AppAccessTokenError"],[3,"ClientIdRef"],[3,"ClientSecretRef"],[4,"UserTokenExchangeError"],[4,"ImplicitUserTokenExchangeError"],[8,"Debug"],[4,"RevokeTokenError"],[4,"RefreshTokenError"],[3,"CsrfToken"],[3,"CsrfTokenRef"],[4,"Ordering"],[8,"Hasher"],[15,"u32"],[8,"TwitchToken"],[13,"NotJson"],[13,"TwitchError"]]},\
"twitch_types":{"doc":"Twitch types","t":"NNEDDNIDDDDNNNNDDGGELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLALLLLLLLLLLLLLLLLKLLLLLLLLLLLLALLLLLLLLLLLLALLLLLLLLALLLALLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLANNNNNNNNNNDDNENNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNDDDDNEDDEDDEDDNDNNNNLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDENNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNEDDNNDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNNDNNENNNDDDDDEDDDDDEDDDNDDNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMNNDDDDDDDDEENNDDDDNNNNNNNNNNNNNNNNDDDDEDDDDNNNDNDDEEENNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNNNDEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMCDCLLLLLMLLLMLMMLLLLL","n":["Admin","Affiliate","BroadcasterType","DisplayName","DisplayNameRef","GlobalMod","IntoCow","MsgId","MsgIdRef","Nickname","NicknameRef","None","None","Partner","Staff","UserId","UserIdRef","UserName","UserNameRef","UserType","as_cow","as_cow","as_cow","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_str","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color","default","default","deref","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","emote","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eventsub","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_static","from_static","from_static","from_static","from_static","from_static","from_str","from_str","from_str","from_str","from_str","from_str","goal","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_owned","into_owned","into_owned","moderation","new","new","new","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","points","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","stream","take","take","take","time","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user","Blue","BlueViolet","CadetBlue","Chocolate","Coral","DodgerBlue","Firebrick","GoldenRod","Green","Hex","HexColor","HexColorRef","HotPink","NamedUserColor","OrangeRed","Red","SeaGreen","SpringGreen","YellowGreen","all","as_cow","as_hex","as_ref","as_ref","as_ref","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","deref","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_static","from_static","from_str","from_str","hash","hash","into","into","into_boxed_ref","into_cow","into_cow","into_cow","into_owned","new","partial_cmp","partial_cmp","serialize","serialize","serialize","take","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","type_id","Animated","BadgeSetId","BadgeSetIdRef","ChatBadgeId","ChatBadgeIdRef","Dark","EmoteAnimationSetting","EmoteId","EmoteIdRef","EmoteScale","EmoteSetId","EmoteSetIdRef","EmoteThemeMode","EmoteUrlBuilder","Image","Light","ResubscriptionEmote","Size1_0","Size2_0","Size3_0","Static","animation_animated","animation_default","animation_static","as_cow","as_cow","as_cow","as_cow","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_str","as_str","as_str","as_str","begin","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","dark_mode","default","default","default_render","deref","deref","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","end","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","hash","hash","hash","hash","hash","hash","hash","hash","id","into","into","into","into","into","into","into","into","into","into","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_owned","into_owned","into_owned","into_owned","light_mode","new","new","new","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","render","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","size_1x","size_2x","size_3x","take","take","take","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","url_1x","url_2x","url_4x","EventSubId","EventSubIdRef","as_cow","as_ref","as_ref","as_ref","as_str","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","cmp","deref","deserialize","deserialize","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_static","from_static","from_str","from_str","hash","hash","into","into_boxed_ref","into_cow","into_cow","into_cow","into_owned","new","partial_cmp","partial_cmp","serialize","serialize","take","to_owned","to_owned","to_string","to_string","try_from","try_into","type_id","type_id","CreatorGoalId","CreatorGoalIdRef","CreatorGoalType","Follower","NewSubscription","NewSubscriptionCount","Subscription","SubscriptionCount","as_cow","as_ref","as_ref","as_ref","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","deref","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_static","from_static","from_str","from_str","hash","hash","into","into","into_boxed_ref","into_cow","into_cow","into_cow","into_owned","new","partial_cmp","partial_cmp","serialize","serialize","serialize","take","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","type_id","Allowed","AutomodStatus","BlockedTermId","BlockedTermIdRef","Denied","Expired","MsgId","MsgIdRef","Pending","as_cow","as_cow","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_static","from_static","from_static","from_static","from_str","from_str","from_str","from_str","hash","hash","hash","hash","into","into","into","into_boxed_ref","into_boxed_ref","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_owned","into_owned","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","serialize","take","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","Active","Active","Archived","Canceled","Completed","GlobalCooldown","Invalid","Locked","Max","MaxPerStream","MaxPerUserPerStream","Moderated","PollChoice","PollChoiceId","PollChoiceIdRef","PollId","PollIdRef","PollStatus","PredictionId","PredictionIdRef","PredictionOutcome","PredictionOutcomeId","PredictionOutcomeIdRef","PredictionStatus","PredictionTopPredictors","RedemptionId","RedemptionIdRef","Resolved","RewardId","RewardIdRef","Terminated","as_cow","as_cow","as_cow","as_cow","as_cow","as_cow","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_str","as_str","as_str","as_str","as_str","as_str","bits_votes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_points","channel_points_used","channel_points_votes","channel_points_won","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","color","deref","deref","deref","deref","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","global_cooldown_seconds","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","is_enabled","login","name","new","new","new","new","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","take","take","take","take","take","take","title","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","top_predictors","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","users","votes","is_enabled","is_enabled","max_per_stream","max_per_user_per_stream","All","Archive","CategoryId","CategoryIdRef","CharityCampaignId","CharityCampaignIdRef","CharityDonationId","CharityDonationIdRef","ClipId","ClipIdRef","CommercialLength","CommercialLengthParseError","Day","Highlight","HypeTrainId","HypeTrainIdRef","IgdbId","IgdbIdRef","InvalidLength","Length120","Length150","Length180","Length30","Length60","Length90","Live","Month","Other","Playlist","Premiere","Prime","Private","Public","Rerun","StreamId","StreamIdRef","StreamSegmentId","StreamSegmentIdRef","SubscriptionTier","TagId","TagIdRef","TeamId","TeamIdRef","Tier1","Tier2","Tier3","TwitchCategory","Upload","VideoId","VideoIdRef","VideoPeriod","VideoPrivacy","VideoType","WatchParty","WatchPartyPremiere","WatchPartyRerun","Week","as_cow","as_cow","as_cow","as_cow","as_cow","as_cow","as_cow","as_cow","as_cow","as_cow","as_cow","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_str","as_str","as_str","as_str","as_str","as_str","as_str","as_str","as_str","as_str","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","box_art_url","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_static","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_str","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","id","igdb_id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_boxed_ref","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_cow","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","into_owned","name","new","new","new","new","new","new","new","new","new","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","provide","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","take","take","take","take","take","take","take","take","take","take","take","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","InvalidFormat","Other","TimeError","TimeFormatError","Timestamp","TimestampParseError","TimestampRef","as_cow","as_ref","as_ref","as_ref","as_str","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","day","deref","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_static","from_static","from_str","from_str","from_str_unchecked","hash","hash","hour","into","into","into_boxed_ref","into_cow","into_cow","into_cow","into_owned","is_before","millis","minute","month","new","new_unchecked","normalize","now","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","provide","second","serialize","serialize","source","take","to_day","to_fixed_offset","to_owned","to_owned","to_string","to_string","to_string","to_utc","today","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","type_id","type_id","type_id","year","location","s","BroadcasterType","User","UserType","borrow","borrow_mut","clone","clone_into","deserialize","display_name","eq","fmt","from","id","into","login","profile_image_url","serialize","to_owned","try_from","try_into","type_id"],"q":[[0,"twitch_types"],[265,"twitch_types::color"],[372,"twitch_types::emote"],[766,"twitch_types::eventsub"],[834,"twitch_types::goal"],[922,"twitch_types::moderation"],[1077,"twitch_types::points"],[1620,"twitch_types::points::Max"],[1624,"twitch_types::stream"],[2509,"twitch_types::time"],[2616,"twitch_types::time::TimestampParseError"],[2618,"twitch_types::user"]],"d":["Admin","Affiliate","Broadcaster types: “partner”, “affiliate”, or “…","A users display name","A users display name","Global Moderator","Convert a type into a <code>Cow</code>","A message ID","A message ID","A nickname, not capitalized.","A nickname, not capitalized.","None","None","Partner","Staff","A user ID.","A user ID.","A username, also specified as login. Should not be …","A reference to a borrowed <code>UserName</code>, also specified as …","User types: “staff”, “admin”, “global_mod”, or …","Get a <code>Cow&lt;&#39;_, UserIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, DisplayNameRef&gt;</code>","Get a <code>Cow&lt;&#39;_, NicknameRef&gt;</code>","","","","","","","","","","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","types for colors","","","","","","","","","","","","","","types for emotes","","","","","","","","","","","","","","","","","","","","","types for eventsub related things","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a newUserIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newDisplayNamefrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newNicknamefrom a static reference","Transparently reinterprets the static string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","types for goals","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>UserId</code> into a <code>Box&lt;UserIdRef&gt;</code>","Converts this <code>DisplayName</code> into a <code>Box&lt;DisplayNameRef&gt;</code>","Converts this <code>Nickname</code> into a <code>Box&lt;NicknameRef&gt;</code>","Make the cow with proper ownership, muu","","","","","","","","","","Converts a <code>Box&lt;UserIdRef&gt;</code> into a <code>UserId</code> without copying or …","Converts a <code>Box&lt;DisplayNameRef&gt;</code> into a <code>DisplayName</code> without …","Converts a <code>Box&lt;NicknameRef&gt;</code> into a <code>Nickname</code> without …","types for moderation","Constructs a new UserId","Constructs a new DisplayName","Constructs a new Nickname","Parse a string into a <code>UserType</code>","","","","","","","","","types for points","","","","","","","","","types for stream related things","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","types for time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","types for user related things","Blue","Blue Violet","Cadet Blue","Chocolate","Coral","Dodger Blue","Firebrick","Golden Rod","Green","A hex color","A color in hex","A color in hex","Hot Pink","Colors a user can have","Orange Red","Red","Sea Green","Spring Green","Yellow Green","All named colors","Get a <code>Cow&lt;&#39;_, HexColorRef&gt;</code>","Return this color in hex","","","","Provides access to the underlying value as a string slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","","Constructs a newHexColorfrom a static reference","Transparently reinterprets the static string slice as a …","","Transparently reinterprets the string slice as a …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>HexColor</code> into a <code>Box&lt;HexColorRef&gt;</code>","","","","Converts a <code>Box&lt;HexColorRef&gt;</code> into a <code>HexColor</code> without …","Constructs a new HexColor","","","","","","Unwraps the underlying <code>String</code> value","","","","Creates a owned NamedUserColor&lt;’static&gt; from a borrowed …","","","","","","","","","","","","Animated","A Badge set ID","A Badge set ID","A channel chat badge ID","A channel chat badge ID","Dark","Formats for an emote.","A chat Emote ID","A chat Emote ID","Scales available for an emote.","An Emote Set ID","An Emote Set ID","Background themes available for an emote.","Builder for emote URLs.","Links to the same image of different sizes","Light","An emote index as defined by eventsub, similar to IRC …","1.0","2.0","3.0","Static","Set animation mode to animate","Set animation mode to default","Set animation mode to static","Get a <code>Cow&lt;&#39;_, BadgeSetIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, ChatBadgeIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, EmoteIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, EmoteSetIdRef&gt;</code>","","","","","","","","","","","","","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","The index of where the Emote starts in the text.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Set theme to dark mode","","","Generates url for this emote.","","","","","","","","","","","","","","","","","","The index of where the Emote ends in the text.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a newBadgeSetIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newChatBadgeIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newEmoteIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newEmoteSetIdfrom a static reference","Transparently reinterprets the static string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","","","","","","","","The emote ID.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>BadgeSetId</code> into a <code>Box&lt;BadgeSetIdRef&gt;</code>","Converts this <code>ChatBadgeId</code> into a <code>Box&lt;ChatBadgeIdRef&gt;</code>","Converts this <code>EmoteId</code> into a <code>Box&lt;EmoteIdRef&gt;</code>","Converts this <code>EmoteSetId</code> into a <code>Box&lt;EmoteSetIdRef&gt;</code>","","","","","","","","","","","","","Converts a <code>Box&lt;BadgeSetIdRef&gt;</code> into a <code>BadgeSetId</code> without …","Converts a <code>Box&lt;ChatBadgeIdRef&gt;</code> into a <code>ChatBadgeId</code> without …","Converts a <code>Box&lt;EmoteIdRef&gt;</code> into a <code>EmoteId</code> without copying …","Converts a <code>Box&lt;EmoteSetIdRef&gt;</code> into a <code>EmoteSetId</code> without …","Set theme to light mode","Constructs a new BadgeSetId","Constructs a new ChatBadgeId","Constructs a new EmoteId","Construct a new <code>EmoteUrlBuilder</code> from a <code>EmoteId</code>","Constructs a new EmoteSetId","","","","","","","","","Create the URL for this emote.","","","","","","","","","","","","","","Set size to 1.0","Set size to 2.0","Set size to 3.0","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>EmoteUrlBuilder</code> for this emote","URL to png of size 28x28","URL to png of size 56x56","URL to png of size 112x112","An EventSub Subscription ID","An EventSub Subscription ID","Get a <code>Cow&lt;&#39;_, EventSubIdRef&gt;</code>","","","","Provides access to the underlying value as a string slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Constructs a newEventSubIdfrom a static reference","Transparently reinterprets the static string slice as a …","","Transparently reinterprets the string slice as a …","","","Calls <code>U::from(self)</code>.","Converts this <code>EventSubId</code> into a <code>Box&lt;EventSubIdRef&gt;</code>","","","","Converts a <code>Box&lt;EventSubIdRef&gt;</code> into a <code>EventSubId</code> without …","Constructs a new EventSubId","","","","","Unwraps the underlying <code>String</code> value","","","","","","","","","A Creator Goal ID","A Creator Goal ID","Type of creator goal","The goal is to increase followers.","The goal is to increase subscriptions. This type shows …","The goal is to increase subscriptions. This type shows …","The goal is to increase subscriptions. This type shows the …","The goal is to increase subscriptions. This type shows the …","Get a <code>Cow&lt;&#39;_, CreatorGoalIdRef&gt;</code>","","","","Provides access to the underlying value as a string slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Constructs a newCreatorGoalIdfrom a static reference","Transparently reinterprets the static string slice as a …","","Transparently reinterprets the string slice as a …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>CreatorGoalId</code> into a <code>Box&lt;CreatorGoalIdRef&gt;</code>","","","","Converts a <code>Box&lt;CreatorGoalIdRef&gt;</code> into a <code>CreatorGoalId</code> …","Constructs a new CreatorGoalId","","","","","","Unwraps the underlying <code>String</code> value","","","","","","","","","","","","","Message has been allowed","Status of a message that is or was in AutoMod queue","A blocked term ID","A blocked term ID","Message has been denied","Automod message expired in queue","A message ID","A message ID","Message has been caught and pending moderation","Get a <code>Cow&lt;&#39;_, MsgIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, BlockedTermIdRef&gt;</code>","","","","","","","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","Constructs a newMsgIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newBlockedTermIdfrom a static reference","Transparently reinterprets the static string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>MsgId</code> into a <code>Box&lt;MsgIdRef&gt;</code>","Converts this <code>BlockedTermId</code> into a <code>Box&lt;BlockedTermIdRef&gt;</code>","","","","","","","Converts a <code>Box&lt;MsgIdRef&gt;</code> into a <code>MsgId</code> without copying or …","Converts a <code>Box&lt;BlockedTermIdRef&gt;</code> into a <code>BlockedTermId</code> …","Constructs a new MsgId","Constructs a new BlockedTermId","","","","","","","","","","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","","","","","","","","","","","","","","","","","","","","","Poll is currently in progress.","The Prediction is active and viewers can make predictions.","Poll is no longer visible on the channel.","The Prediction has been canceled and the Channel Points …","Poll has reached its ended_at time.","Information about global cooldown","Something went wrong determining the state.","The Prediction has been locked and viewers can no longer …","Reward redemption max","Max per stream","Max per user per stream","Poll is no longer visible to any user on Twitch.","Poll choice","A poll choice ID","A poll choice ID","A poll ID","A poll ID","Status of a poll","A prediction ID","A prediction ID","Outcome for the Prediction","A prediction choice ID","A prediction choice ID","Status of the Prediction","Users who were the top predictors.","A reward redemption ID.","A reward redemption ID.","A winning outcome has been chosen and the Channel Points …","A reward ID.","A reward ID.","Poll has been manually terminated before its ended_at time.","Get a <code>Cow&lt;&#39;_, RewardIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, RedemptionIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, PollIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, PollChoiceIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, PredictionIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, PredictionOutcomeIdRef&gt;</code>","","","","","","","","","","","","","","","","","","","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Number of votes received via Bits.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of Channel Points used for the outcome.","Number of Channel Points used by the user.","Number of votes received via Channel Points.","Number of Channel Points won by the user.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Color for the outcome. Valid values: BLUE, PINK","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a newRewardIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newRedemptionIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newPollIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newPollChoiceIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newPredictionIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newPredictionOutcomeIdfrom a static reference","Transparently reinterprets the static string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","Cooldown amount","","","","","","","","","","","","","ID for the choice.","ID for the outcome.","ID of the user.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>RewardId</code> into a <code>Box&lt;RewardIdRef&gt;</code>","Converts this <code>RedemptionId</code> into a <code>Box&lt;RedemptionIdRef&gt;</code>","Converts this <code>PollId</code> into a <code>Box&lt;PollIdRef&gt;</code>","Converts this <code>PollChoiceId</code> into a <code>Box&lt;PollChoiceIdRef&gt;</code>","Converts this <code>PredictionId</code> into a <code>Box&lt;PredictionIdRef&gt;</code>","Converts this <code>PredictionOutcomeId</code> into a …","","","","","","","","","","","","","","","","","","","Converts a <code>Box&lt;RewardIdRef&gt;</code> into a <code>RewardId</code> without …","Converts a <code>Box&lt;RedemptionIdRef&gt;</code> into a <code>RedemptionId</code> …","Converts a <code>Box&lt;PollIdRef&gt;</code> into a <code>PollId</code> without copying or …","Converts a <code>Box&lt;PollChoiceIdRef&gt;</code> into a <code>PollChoiceId</code> …","Converts a <code>Box&lt;PredictionIdRef&gt;</code> into a <code>PredictionId</code> …","Converts a <code>Box&lt;PredictionOutcomeIdRef&gt;</code> into a …","Cooldown enabled","Login of the user.","Display name of the user.","Constructs a new RewardId","Constructs a new RedemptionId","Constructs a new PollId","Constructs a new PollChoiceId","Constructs a new PredictionId","Constructs a new PredictionOutcomeId","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Text displayed for the choice.","Text displayed for outcome.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Array of users who were the top predictors. null if none. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Number of unique users that chose the outcome.","Total number of votes received for the choice across all …","Max per stream is enabled","Max per user per stream is enabled","Max amount of redemptions per stream","Max amount of redemptions per user per stream","Filter by all. Effectively a no-op","An archived video","A game or category ID","A game or category ID","A Charity Campaign ID","A Charity Campaign ID","A Charity Donation ID","A Charity Donation ID","A clip ID","A clip ID","Length of the commercial in seconds","Error for the <code>TryFrom</code> on <code>CommercialLength</code>","Filter by from this day only","A highlight","A Hype Train ID","A Hype Train ID","A IGDB ID","A IGDB ID","invalid length of {0}","120s","150s","180s","30s","60s","90s","A live video","Filter by this month","Other","A playlist video","A premiere","Prime subscription","Video is private","Video is public","A rerun","A Stream ID","A Stream ID","A Stream Segment ID.","A Stream Segment ID.","Subscription tiers","A tag ID","A tag ID","A Team ID","A Team ID","Tier 1. $4.99","Tier 1. $9.99","Tier 1. $24.99","A game or category as defined by Twitch","A uploaded video","A video ID","A video ID","Period during which the video was created","Type of video","Type of video","A watch party","A watchparty premiere,","A watchparty rerun","Filter by this week","Get a <code>Cow&lt;&#39;_, StreamIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, CategoryIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, TagIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, TeamIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, VideoIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, ClipIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, StreamSegmentIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, HypeTrainIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, CharityCampaignIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, CharityDonationIdRef&gt;</code>","Get a <code>Cow&lt;&#39;_, IgdbIdRef&gt;</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","Provides access to the underlying value as a string slice.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Template URL for the game’s box art.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Constructs a newStreamIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newCategoryIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newTagIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newTeamIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newVideoIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newClipIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newStreamSegmentIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newHypeTrainIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newCharityCampaignIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newCharityDonationIdfrom a static reference","Transparently reinterprets the static string slice as a …","Constructs a newIgdbIdfrom a static reference","Transparently reinterprets the static string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","Transparently reinterprets the string slice as a …","","","","","","","","","","","","","","","","","","","","","","","Game or category ID.","The ID that IGDB uses to identify this game.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>StreamId</code> into a <code>Box&lt;StreamIdRef&gt;</code>","Converts this <code>CategoryId</code> into a <code>Box&lt;CategoryIdRef&gt;</code>","Converts this <code>TagId</code> into a <code>Box&lt;TagIdRef&gt;</code>","Converts this <code>TeamId</code> into a <code>Box&lt;TeamIdRef&gt;</code>","Converts this <code>VideoId</code> into a <code>Box&lt;VideoIdRef&gt;</code>","Converts this <code>ClipId</code> into a <code>Box&lt;ClipIdRef&gt;</code>","Converts this <code>StreamSegmentId</code> into a …","Converts this <code>HypeTrainId</code> into a <code>Box&lt;HypeTrainIdRef&gt;</code>","Converts this <code>CharityCampaignId</code> into a …","Converts this <code>CharityDonationId</code> into a …","Converts this <code>IgdbId</code> into a <code>Box&lt;IgdbIdRef&gt;</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts a <code>Box&lt;StreamIdRef&gt;</code> into a <code>StreamId</code> without …","Converts a <code>Box&lt;CategoryIdRef&gt;</code> into a <code>CategoryId</code> without …","Converts a <code>Box&lt;TagIdRef&gt;</code> into a <code>TagId</code> without copying or …","Converts a <code>Box&lt;TeamIdRef&gt;</code> into a <code>TeamId</code> without copying or …","Converts a <code>Box&lt;VideoIdRef&gt;</code> into a <code>VideoId</code> without copying …","Converts a <code>Box&lt;ClipIdRef&gt;</code> into a <code>ClipId</code> without copying or …","Converts a <code>Box&lt;StreamSegmentIdRef&gt;</code> into a <code>StreamSegmentId</code> …","Converts a <code>Box&lt;HypeTrainIdRef&gt;</code> into a <code>HypeTrainId</code> without …","Converts a <code>Box&lt;CharityCampaignIdRef&gt;</code> into a …","Converts a <code>Box&lt;CharityDonationIdRef&gt;</code> into a …","Converts a <code>Box&lt;IgdbIdRef&gt;</code> into a <code>IgdbId</code> without copying or …","Game name.","Constructs a new StreamId","Constructs a new CategoryId","Constructs a new TagId","Constructs a new TeamId","Constructs a new VideoId","Constructs a new ClipId","Constructs a new StreamSegmentId","Constructs a new HypeTrainId","Constructs a new CharityCampaignId","Constructs a new CharityDonationId","Constructs a new IgdbId","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","Unwraps the underlying <code>String</code> value","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Timestamp has an invalid format.","Other error","Could not parse the timestamp using <code>time</code>","Could not format the timestamp using <code>time</code>","RFC3339 timestamp","Errors that can occur when parsing a timestamp.","RFC3339 timestamp","Get a <code>Cow&lt;&#39;_, TimestampRef&gt;</code>","","","","Provides access to the underlying value as a string slice.","","","","","","","","","","","","Get the day","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","Constructs a new Timestamp from a static reference if it …","Transparently reinterprets the static string slice as a …","","Transparently reinterprets the string slice as a …","Transparently reinterprets the string slice as a …","","","Get the hour","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts this <code>Timestamp</code> into a <code>Box&lt;TimestampRef&gt;</code>","","","","Converts a <code>Box&lt;TimestampRef&gt;</code> into a <code>Timestamp</code> without …","Compare another time and return <code>self &lt; other</code>.","Get the millis","Get the minute","Get the month","Constructs a new Timestamp if it conforms to <code>Timestamp</code>","Constructs a new Timestamp without validation","Normalize the timestamp into UTC time.","Create a timestamp corresponding to current time","","","","","","","Get the second","","","","Unwraps the underlying <code>String</code> value","Make a timestamp with the time component set to 00:00:00.","Construct into a <code>OffsetDateTime</code> time.","","","","","","Construct into a <code>OffsetDateTime</code> time with a guaranteed UTC …","Create a timestamp corresponding to the start of the …","","","","","","","","","","","","","Get the year","location of error","Thing that failed","","A user according to many endpoints","","","","","","","Display name of user","","","Returns the argument unchanged.","ID of the user","Calls <code>U::from(self)</code>.","Login name of the user, not capitalized","URL of the user’s profile","","","","",""],"i":[10,9,0,0,0,10,0,0,0,0,0,9,10,9,10,0,0,0,0,0,1,3,4,5,5,1,7,7,3,8,8,4,1,3,4,5,5,5,1,1,7,7,7,3,3,8,8,8,4,4,9,10,5,1,7,3,8,4,9,10,5,7,8,9,10,5,7,8,9,10,5,1,7,3,8,4,9,10,0,9,10,5,7,8,5,1,7,3,8,4,9,10,0,5,5,5,1,1,1,7,7,7,3,3,3,8,8,8,4,4,4,9,10,0,5,5,1,1,7,7,3,3,8,8,4,4,9,10,5,5,5,5,5,5,5,1,1,1,1,7,7,7,7,7,7,7,3,3,3,3,8,8,8,8,8,8,8,4,4,4,4,9,10,5,1,7,3,8,4,5,1,7,3,8,4,0,5,1,7,3,8,4,9,10,5,7,8,9,10,5,7,8,110,5,5,1,7,7,3,8,8,4,1,3,4,0,5,7,8,10,5,1,7,3,8,4,9,10,0,5,1,7,3,8,4,9,10,0,5,7,8,0,5,1,7,3,8,4,9,10,5,1,7,3,8,4,5,7,8,9,10,5,7,8,9,10,5,1,7,3,8,4,9,10,0,24,24,24,24,24,24,24,24,24,24,0,0,24,0,24,24,24,24,24,24,23,24,25,25,23,23,25,25,25,23,23,24,25,23,24,25,24,25,24,25,23,25,25,23,24,25,25,25,23,23,23,24,25,25,23,23,24,24,25,25,25,25,25,25,25,23,23,23,23,24,24,24,25,23,25,23,25,23,25,24,25,25,25,23,23,25,25,23,25,23,24,25,25,23,24,24,25,23,24,25,24,24,25,24,25,23,24,35,0,0,0,0,36,0,0,0,0,0,0,0,0,0,36,0,37,37,37,35,26,26,26,27,28,29,30,31,31,27,32,32,28,33,33,29,34,34,30,27,28,29,30,38,31,31,31,27,27,32,32,32,28,28,33,33,33,29,29,35,36,37,26,34,34,34,30,30,38,39,31,27,32,28,33,29,35,36,37,26,34,30,38,39,31,32,33,35,36,37,26,34,38,39,31,32,33,35,36,37,26,34,38,39,31,27,32,28,33,29,34,30,26,36,37,29,31,32,33,34,31,27,32,28,33,29,35,36,37,34,30,38,39,38,31,31,31,27,27,27,32,32,32,28,28,28,33,33,33,29,29,29,35,36,37,34,34,34,30,30,30,38,39,31,31,27,27,32,32,28,28,33,33,29,29,35,35,36,36,37,37,26,34,34,30,30,38,38,39,31,31,31,31,31,31,31,27,27,27,27,32,32,32,32,32,32,32,28,28,28,28,33,33,33,33,33,33,33,29,29,29,29,35,36,37,26,34,34,34,34,34,34,34,30,30,30,30,38,39,31,27,32,28,33,29,34,30,31,27,32,28,33,29,34,30,31,27,32,28,33,29,34,30,38,31,32,33,35,36,37,26,34,38,39,31,32,33,34,31,31,27,32,32,28,33,33,29,34,34,30,27,28,29,30,26,31,32,33,26,34,31,27,32,28,33,29,34,30,26,31,27,32,28,33,29,35,36,37,34,30,38,39,26,26,26,31,32,33,34,31,27,32,28,33,29,35,36,37,26,34,30,38,39,31,27,32,28,33,29,35,36,37,34,30,38,31,32,33,35,36,37,26,34,38,39,31,32,33,35,36,37,26,34,38,39,31,27,32,28,33,29,35,36,37,26,34,30,38,39,29,39,39,39,0,0,40,41,41,40,40,41,41,41,40,40,41,40,41,41,41,40,41,41,40,41,41,41,40,40,40,41,41,40,40,41,41,41,41,41,41,41,40,40,40,40,41,40,41,40,41,40,41,41,41,41,40,40,41,41,40,41,40,41,41,40,41,40,41,41,41,40,0,0,0,44,44,44,44,44,42,43,43,42,42,43,43,43,42,42,44,43,42,44,43,44,43,44,43,42,43,43,42,44,43,43,43,42,42,42,44,43,43,42,42,44,43,43,43,43,43,43,43,42,42,42,42,44,43,42,43,42,43,42,43,44,43,43,43,42,42,43,43,42,43,42,44,43,43,42,44,43,42,43,44,43,44,43,42,44,49,0,0,0,49,49,0,0,49,45,46,47,47,45,48,48,46,45,46,47,47,47,45,45,48,48,48,46,46,49,47,45,48,46,49,47,48,49,47,48,49,47,45,48,46,47,48,47,45,48,46,49,47,47,47,45,45,45,48,48,48,46,46,46,49,47,47,45,45,48,48,46,46,49,47,47,47,47,47,47,47,45,45,45,45,48,48,48,48,48,48,48,46,46,46,46,49,47,45,48,46,47,45,48,46,47,45,48,46,47,48,49,47,48,47,47,45,48,48,46,45,46,47,48,47,45,48,46,47,45,48,46,49,47,48,47,45,48,46,49,47,45,48,46,47,48,49,47,48,49,47,45,48,46,49,65,66,65,66,65,0,65,66,0,62,62,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,0,0,65,50,51,52,53,54,55,56,56,50,57,57,51,58,58,52,59,59,53,60,60,54,61,61,55,50,51,52,53,54,55,64,56,56,56,50,50,57,57,57,51,51,58,58,58,52,52,59,59,59,53,53,60,60,60,54,54,61,61,61,55,55,62,63,64,65,66,67,68,56,50,57,51,58,52,59,53,60,54,61,55,62,63,64,65,66,67,68,67,68,64,68,56,57,58,59,60,61,62,63,64,65,66,67,68,56,57,58,59,60,61,62,63,64,65,66,67,68,56,50,57,51,58,52,59,53,60,54,61,55,67,56,57,58,59,60,61,56,50,57,51,58,52,59,53,60,54,61,55,62,63,64,65,66,67,68,56,56,56,50,50,50,57,57,57,51,51,51,58,58,58,52,52,52,59,59,59,53,53,53,60,60,60,54,54,54,61,61,61,55,55,55,62,63,64,65,66,67,68,56,56,50,50,57,57,51,51,58,58,52,52,59,59,53,53,60,60,54,54,61,61,55,55,62,63,64,65,66,67,68,56,56,56,56,56,56,56,50,50,50,50,57,57,57,57,57,57,57,51,51,51,51,58,58,58,58,58,58,58,52,52,52,52,59,59,59,59,59,59,59,53,53,53,53,60,60,60,60,60,60,60,54,54,54,54,61,61,61,61,61,61,61,55,55,55,55,62,63,64,65,66,67,68,56,50,57,51,58,52,59,53,60,54,61,55,56,50,57,51,58,52,59,53,60,54,61,55,63,56,50,57,51,58,52,59,53,60,54,61,55,64,67,68,56,57,58,59,60,61,62,63,64,65,66,67,68,56,57,58,59,60,61,56,56,50,57,57,51,58,58,52,59,59,53,60,60,54,61,61,55,50,51,52,53,54,55,63,68,68,56,57,58,59,60,61,56,50,57,51,58,52,59,53,60,54,61,55,56,50,57,51,58,52,59,53,60,54,61,55,62,63,64,65,66,67,68,56,57,58,59,60,61,64,67,56,50,57,51,58,52,59,53,60,54,61,55,62,63,64,65,66,67,68,56,50,57,51,58,52,59,53,60,54,61,55,67,56,57,58,59,60,61,62,63,64,65,66,67,68,56,57,58,59,60,61,62,63,64,65,66,67,68,56,50,57,51,58,52,59,53,60,54,61,55,62,63,64,65,66,67,68,67,64,111,112,111,112,93,94,0,0,0,0,0,0,0,0,0,0,93,94,0,0,0,0,97,96,96,96,96,96,96,94,93,92,94,94,92,95,95,94,0,0,0,0,0,0,0,0,0,92,92,92,0,94,0,0,0,0,0,94,94,94,93,69,70,71,72,73,74,75,76,77,78,79,80,80,69,81,81,70,82,82,71,83,83,72,84,84,73,85,85,74,86,86,75,87,87,76,88,88,77,89,89,78,90,90,79,69,70,71,72,73,74,75,76,77,78,79,80,80,80,69,69,81,81,81,70,70,82,82,82,71,71,83,83,83,72,72,84,84,84,73,73,85,85,85,74,74,86,86,86,75,75,87,87,87,76,76,88,88,88,77,77,89,89,89,78,78,90,90,90,79,79,91,92,93,94,95,96,97,80,69,81,70,82,71,83,72,84,73,85,74,86,75,87,76,88,77,89,78,90,79,91,92,93,94,95,96,97,91,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,80,69,81,70,82,71,83,72,84,73,85,74,86,75,87,76,88,77,89,78,90,79,80,81,82,83,84,85,86,87,88,89,90,80,69,81,70,82,71,83,72,84,73,85,74,86,75,87,76,88,77,89,78,90,79,91,92,93,94,95,96,80,80,80,69,69,69,81,81,81,70,70,70,82,82,82,71,71,71,83,83,83,72,72,72,84,84,84,73,73,73,85,85,85,74,74,74,86,86,86,75,75,75,87,87,87,76,76,76,88,88,88,77,77,77,89,89,89,78,78,78,90,90,90,79,79,79,91,92,93,94,95,96,80,80,69,69,81,81,70,70,82,82,71,71,83,83,72,72,84,84,73,73,85,85,74,74,86,86,75,75,87,87,76,76,88,88,77,77,89,89,78,78,90,90,79,79,91,92,93,94,95,96,96,97,97,80,80,80,80,80,80,80,69,69,69,69,81,81,81,81,81,81,81,70,70,70,70,82,82,82,82,82,82,82,71,71,71,71,83,83,83,83,83,83,83,72,72,72,72,84,84,84,84,84,84,84,73,73,73,73,85,85,85,85,85,85,85,74,74,74,74,86,86,86,86,86,86,86,75,75,75,75,87,87,87,87,87,87,87,76,76,76,76,88,88,88,88,88,88,88,77,77,77,77,89,89,89,89,89,89,89,78,78,78,78,90,90,90,90,90,90,90,79,79,79,79,91,92,93,94,95,96,97,80,69,81,70,82,71,83,72,84,73,85,74,86,75,87,76,88,77,89,78,90,79,80,69,81,70,82,71,83,72,84,73,85,74,86,75,87,76,88,77,89,78,90,79,80,69,81,70,82,71,83,72,84,73,85,74,86,75,87,76,88,77,89,78,90,79,91,91,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,80,81,82,83,84,85,86,87,88,89,90,80,80,69,81,81,70,82,82,71,83,83,72,84,84,73,85,85,74,86,86,75,87,87,76,88,88,77,89,89,78,90,90,79,69,70,71,72,73,74,75,76,77,78,79,91,80,81,82,83,84,85,86,87,88,89,90,80,69,81,70,82,71,83,72,84,73,85,74,86,75,87,76,88,77,89,78,90,79,97,80,69,81,70,82,71,83,72,84,73,85,74,86,75,87,76,88,77,89,78,90,79,91,92,93,94,95,96,80,81,82,83,84,85,86,87,88,89,90,80,69,81,70,82,71,83,72,84,73,85,74,86,75,87,76,88,77,89,78,90,79,91,92,93,94,95,96,80,69,81,70,82,71,83,72,84,73,85,74,86,75,87,76,88,77,89,78,90,79,96,97,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,96,97,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,80,69,81,70,82,71,83,72,84,73,85,74,86,75,87,76,88,77,89,78,90,79,91,92,93,94,95,96,97,103,103,103,103,0,0,0,100,101,101,100,100,101,101,101,100,100,103,101,100,103,101,101,100,101,101,100,101,101,101,101,100,100,100,100,101,101,100,100,103,103,101,101,101,101,100,100,103,103,103,103,101,100,101,100,100,101,100,100,101,103,101,101,101,100,100,100,100,100,100,101,101,100,101,101,101,100,100,100,103,100,101,100,103,101,100,100,101,100,101,100,103,100,101,101,101,101,101,100,100,103,101,103,101,100,103,100,113,113,0,0,0,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[2,[1]]]],[3,[[2,[3]]]],[4,[[2,[4]]]],[5,6],[5,1],[1,6],[7,6],[7,3],[3,6],[8,4],[8,6],[4,6],[1,6],[3,6],[4,6],[5,1],[5,6],[[]],[1,6],[[]],[7,3],[7,6],[[]],[[]],[3,6],[8,6],[8,4],[[]],[4,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[5,5],[7,7],[8,8],[9,9],[10,10],[[]],[[]],[[]],[[]],[[]],[[5,5],11],[[1,1],11],[[7,7],11],[[3,3],11],[[8,8],11],[[4,4],11],[[9,9],11],[[10,10],11],0,[[],9],[[],10],[5],[7],[8],[12,[[13,[5]]]],[12,[[13,[1]]]],[12,[[13,[7]]]],[12,[[13,[3]]]],[12,[[13,[8]]]],[12,[[13,[4]]]],[12,[[13,[9]]]],[12,[[13,[10]]]],0,[[5,5],14],[[5,1],14],[[5,1],14],[[1,5],14],[[1,1],14],[[1,5],14],[[7,3],14],[[7,7],14],[[7,3],14],[[3,3],14],[[3,7],14],[[3,7],14],[[8,8],14],[[8,4],14],[[8,4],14],[[4,8],14],[[4,8],14],[[4,4],14],[[9,9],14],[[10,10],14],0,[[5,15],16],[[5,15],16],[[1,15],16],[[1,15],16],[[7,15],16],[[7,15],16],[[3,15],16],[[3,15],16],[[8,15],16],[[8,15],16],[[4,15],16],[[4,15],16],[[9,15],16],[[10,15],16],[[[17,[6]]],5],[[[17,[1]]],5],[6,5],[18,5],[1,5],[[]],[[[2,[1]]],5],[5,1],[[[2,[1]]],1],[6,1],[18,1],[3,7],[[]],[[[17,[6]]],7],[[[2,[3]]],7],[6,7],[18,7],[[[17,[3]]],7],[18,3],[6,3],[7,3],[[[2,[3]]],3],[[[17,[4]]],8],[[]],[18,8],[4,8],[6,8],[[[2,[4]]],8],[[[17,[6]]],8],[[[2,[4]]],4],[18,4],[6,4],[8,4],[[]],[[]],[6,5],[6,1],[6,7],[6,3],[6,8],[6,4],[6,[[13,[5]]]],[6,1],[6,[[13,[7]]]],[6,3],[6,[[13,[8]]]],[6,4],0,[[5,19]],[[1,19]],[[7,19]],[[3,19]],[[8,19]],[[4,19]],[[9,19]],[[10,19]],[[]],[[]],[[]],[[]],[[]],[5,[[17,[1]]]],[7,[[17,[3]]]],[8,[[17,[4]]]],[[],2],[5,[[2,[1]]]],[5,[[2,[1]]]],[1,[[2,[1]]]],[7,[[2,[3]]]],[7,[[2,[3]]]],[3,[[2,[3]]]],[8,[[2,[4]]]],[8,[[2,[4]]]],[4,[[2,[4]]]],[[[17,[1]]],5],[[[17,[3]]],7],[[[17,[4]]],8],0,[18,5],[18,7],[18,8],[6,10],[[5,5],[[20,[11]]]],[[1,1],[[20,[11]]]],[[7,7],[[20,[11]]]],[[3,3],[[20,[11]]]],[[8,8],[[20,[11]]]],[[4,4],[[20,[11]]]],[[9,9],[[20,[11]]]],[[10,10],[[20,[11]]]],0,[[5,21],13],[[1,21],13],[[7,21],13],[[3,21],13],[[8,21],13],[[4,21],13],[[9,21],13],[[10,21],13],0,[5,18],[7,18],[8,18],0,[[]],[1],[[]],[3],[[]],[4],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[23,[[2,[23]]]],[24,23],[25,6],[25,23],[23,6],[23,6],[[]],[25,6],[25,23],[23,6],[[]],[[]],[[]],[[]],[[]],[25,25],[24,24],[[]],[[]],[[25,25],11],[[23,23],11],[25],[12,[[13,[25]]]],[12,[[13,[23]]]],[12,[[13,[24]]]],[[25,23],14],[[25,25],14],[[25,23],14],[[23,25],14],[[23,25],14],[[23,23],14],[[24,24],14],[[25,15],16],[[25,15],16],[[23,15],16],[[23,15],16],[[24,15],16],[[24,15],16],[6,25],[[[17,[23]]],25],[18,25],[[]],[[[17,[6]]],25],[[[2,[23]]],25],[23,25],[18,23],[25,23],[6,23],[[[2,[23]]],23],[[]],[25,24],[[[2,[23]]],24],[6,25],[6,23],[6,[[13,[25]]]],[6,23],[[25,19]],[[23,19]],[[]],[[]],[25,[[17,[23]]]],[25,[[2,[23]]]],[25,[[2,[23]]]],[23,[[2,[23]]]],[[[17,[23]]],25],[18,25],[[25,25],[[20,[11]]]],[[23,23],[[20,[11]]]],[[25,21],13],[[23,21],13],[[24,21],13],[25,18],[[]],[23],[[]],[24,24],[[],18],[[],18],[[],18],[[],13],[[],13],[6,[[13,[24]]]],[[],13],[[],13],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[26,26],[26,26],[26,26],[27,[[2,[27]]]],[28,[[2,[28]]]],[29,[[2,[29]]]],[30,[[2,[30]]]],[31,6],[31,27],[27,6],[32,28],[32,6],[28,6],[33,29],[33,6],[29,6],[34,30],[34,6],[30,6],[27,6],[28,6],[29,6],[30,6],0,[[]],[31,6],[31,27],[27,6],[[]],[[]],[32,6],[32,28],[28,6],[[]],[33,6],[[]],[33,29],[29,6],[[]],[[]],[[]],[[]],[[]],[[]],[34,6],[34,30],[[]],[30,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,31],[32,32],[33,33],[35,35],[36,36],[37,37],[26,26],[34,34],[38,38],[39,39],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[31,31],11],[[27,27],11],[[32,32],11],[[28,28],11],[[33,33],11],[[29,29],11],[[34,34],11],[[30,30],11],[26,26],[[],36],[[],37],[29,18],[31],[32],[33],[34],[12,[[13,[31]]]],[12,[[13,[27]]]],[12,[[13,[32]]]],[12,[[13,[28]]]],[12,[[13,[33]]]],[12,[[13,[29]]]],[12,[[13,[35]]]],[12,[[13,[36]]]],[12,[[13,[37]]]],[12,[[13,[34]]]],[12,[[13,[30]]]],[12,[[13,[38]]]],[12,[[13,[39]]]],0,[[31,27],14],[[31,31],14],[[31,27],14],[[27,31],14],[[27,27],14],[[27,31],14],[[32,32],14],[[32,28],14],[[32,28],14],[[28,32],14],[[28,28],14],[[28,32],14],[[33,29],14],[[33,33],14],[[33,29],14],[[29,33],14],[[29,29],14],[[29,33],14],[[35,35],14],[[36,36],14],[[37,37],14],[[34,34],14],[[34,30],14],[[34,30],14],[[30,30],14],[[30,34],14],[[30,34],14],[[38,38],14],[[39,39],14],[[31,15],16],[[31,15],16],[[27,15],16],[[27,15],16],[[32,15],16],[[32,15],16],[[28,15],16],[[28,15],16],[[33,15],16],[[33,15],16],[[29,15],16],[[29,15],16],[[35,15],16],[[35,15],16],[[36,15],16],[[36,15],16],[[37,15],16],[[37,15],16],[[26,15],16],[[34,15],16],[[34,15],16],[[30,15],16],[[30,15],16],[[38,15],16],[[38,15],16],[[39,15],16],[6,31],[18,31],[[[2,[27]]],31],[[[17,[6]]],31],[[[17,[27]]],31],[27,31],[[]],[[[2,[27]]],27],[31,27],[18,27],[6,27],[[[17,[28]]],32],[6,32],[18,32],[[[17,[6]]],32],[28,32],[[[2,[28]]],32],[[]],[[[2,[28]]],28],[18,28],[32,28],[6,28],[29,33],[[[17,[29]]],33],[[[2,[29]]],33],[[[17,[6]]],33],[18,33],[6,33],[[]],[[[2,[29]]],29],[6,29],[18,29],[33,29],[[]],[[]],[[]],[[]],[[[2,[30]]],34],[30,34],[[[17,[30]]],34],[18,34],[[]],[[[17,[6]]],34],[6,34],[18,30],[34,30],[[[2,[30]]],30],[6,30],[[]],[[]],[6,31],[6,27],[6,32],[6,28],[6,33],[6,29],[6,34],[6,30],[6,[[13,[31]]]],[6,27],[6,[[13,[32]]]],[6,28],[6,[[13,[33]]]],[6,29],[6,[[13,[34]]]],[6,30],[[31,19]],[[27,19]],[[32,19]],[[28,19]],[[33,19]],[[29,19]],[[34,19]],[[30,19]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,[[17,[27]]]],[32,[[17,[28]]]],[33,[[17,[29]]]],[34,[[17,[30]]]],[31,[[2,[27]]]],[31,[[2,[27]]]],[27,[[2,[27]]]],[32,[[2,[28]]]],[32,[[2,[28]]]],[28,[[2,[28]]]],[33,[[2,[29]]]],[33,[[2,[29]]]],[29,[[2,[29]]]],[34,[[2,[30]]]],[34,[[2,[30]]]],[30,[[2,[30]]]],[[[17,[27]]],31],[[[17,[28]]],32],[[[17,[29]]],33],[[[17,[30]]],34],[26,26],[18,31],[18,32],[18,33],[29,26],[18,34],[[31,31],[[20,[11]]]],[[27,27],[[20,[11]]]],[[32,32],[[20,[11]]]],[[28,28],[[20,[11]]]],[[33,33],[[20,[11]]]],[[29,29],[[20,[11]]]],[[34,34],[[20,[11]]]],[[30,30],[[20,[11]]]],[26,18],[[31,21],13],[[27,21],13],[[32,21],13],[[28,21],13],[[33,21],13],[[29,21],13],[[35,21],13],[[36,21],13],[[37,21],13],[[34,21],13],[[30,21],13],[[38,21],13],[[39,21],13],[26,26],[26,26],[26,26],[31,18],[32,18],[33,18],[34,18],[[]],[27],[[]],[28],[[]],[29],[[]],[[]],[[]],[[]],[[]],[30],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[29,26],0,0,0,0,0,[40,[[2,[40]]]],[41,6],[41,40],[40,6],[40,6],[41,40],[41,6],[[]],[[]],[40,6],[[]],[[]],[41,41],[[]],[[41,41],11],[[40,40],11],[41],[12,[[13,[41]]]],[12,[[13,[40]]]],[[41,41],14],[[41,40],14],[[41,40],14],[[40,41],14],[[40,41],14],[[40,40],14],[[41,15],16],[[41,15],16],[[40,15],16],[[40,15],16],[40,41],[[[17,[40]]],41],[18,41],[[[2,[40]]],41],[6,41],[[[17,[6]]],41],[[]],[6,40],[[[2,[40]]],40],[41,40],[18,40],[6,41],[6,40],[6,[[13,[41]]]],[6,40],[[41,19]],[[40,19]],[[]],[41,[[17,[40]]]],[41,[[2,[40]]]],[41,[[2,[40]]]],[40,[[2,[40]]]],[[[17,[40]]],41],[18,41],[[41,41],[[20,[11]]]],[[40,40],[[20,[11]]]],[[41,21],13],[[40,21],13],[41,18],[[]],[40],[[],18],[[],18],[[],13],[[],13],[[],22],[[],22],0,0,0,0,0,0,0,0,[42,[[2,[42]]]],[43,6],[43,42],[42,6],[42,6],[43,6],[[]],[43,42],[42,6],[[]],[[]],[[]],[[]],[[]],[43,43],[44,44],[[]],[[]],[[43,43],11],[[42,42],11],[43],[12,[[13,[43]]]],[12,[[13,[42]]]],[12,[[13,[44]]]],[[43,42],14],[[43,42],14],[[43,43],14],[[42,43],14],[[42,43],14],[[42,42],14],[[44,44],14],[[43,15],16],[[43,15],16],[[42,15],16],[[42,15],16],[[44,15],16],[[[2,[42]]],43],[42,43],[6,43],[[[17,[6]]],43],[18,43],[[]],[[[17,[42]]],43],[43,42],[18,42],[6,42],[[[2,[42]]],42],[[]],[6,43],[6,42],[6,[[13,[43]]]],[6,42],[[43,19]],[[42,19]],[[]],[[]],[43,[[17,[42]]]],[43,[[2,[42]]]],[43,[[2,[42]]]],[42,[[2,[42]]]],[[[17,[42]]],43],[18,43],[[43,43],[[20,[11]]]],[[42,42],[[20,[11]]]],[[43,21],13],[[42,21],13],[[44,21],13],[43,18],[[]],[42],[[]],[[],18],[[],18],[[],13],[[],13],[[],13],[[],13],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,0,[45,[[2,[45]]]],[46,[[2,[46]]]],[47,45],[47,6],[45,6],[48,46],[48,6],[46,6],[45,6],[46,6],[[]],[47,6],[47,45],[45,6],[[]],[48,46],[[]],[48,6],[[]],[46,6],[[]],[[]],[[]],[[]],[[]],[[]],[47,47],[48,48],[49,49],[[]],[[]],[[]],[[47,47],11],[[45,45],11],[[48,48],11],[[46,46],11],[47],[48],[12,[[13,[47]]]],[12,[[13,[45]]]],[12,[[13,[48]]]],[12,[[13,[46]]]],[12,[[13,[49]]]],[[47,45],14],[[47,45],14],[[47,47],14],[[45,47],14],[[45,45],14],[[45,47],14],[[48,46],14],[[48,48],14],[[48,46],14],[[46,48],14],[[46,46],14],[[46,48],14],[[49,49],14],[[47,15],16],[[47,15],16],[[45,15],16],[[45,15],16],[[48,15],16],[[48,15],16],[[46,15],16],[[46,15],16],[[49,15],16],[[]],[[[2,[45]]],47],[[[17,[6]]],47],[[[17,[45]]],47],[6,47],[18,47],[45,47],[18,45],[[[2,[45]]],45],[47,45],[6,45],[6,48],[[]],[[[2,[46]]],48],[18,48],[[[17,[6]]],48],[46,48],[[[17,[46]]],48],[[[2,[46]]],46],[18,46],[48,46],[6,46],[[]],[6,47],[6,45],[6,48],[6,46],[6,[[13,[47]]]],[6,45],[6,[[13,[48]]]],[6,46],[[47,19]],[[45,19]],[[48,19]],[[46,19]],[[]],[[]],[[]],[47,[[17,[45]]]],[48,[[17,[46]]]],[47,[[2,[45]]]],[47,[[2,[45]]]],[45,[[2,[45]]]],[48,[[2,[46]]]],[48,[[2,[46]]]],[46,[[2,[46]]]],[[[17,[45]]],47],[[[17,[46]]],48],[18,47],[18,48],[[47,47],[[20,[11]]]],[[45,45],[[20,[11]]]],[[48,48],[[20,[11]]]],[[46,46],[[20,[11]]]],[[47,21],13],[[45,21],13],[[48,21],13],[[46,21],13],[[49,21],13],[47,18],[48,18],[[]],[45],[[]],[46],[[]],[[],18],[[],18],[[],18],[[],18],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[50,[[2,[50]]]],[51,[[2,[51]]]],[52,[[2,[52]]]],[53,[[2,[53]]]],[54,[[2,[54]]]],[55,[[2,[55]]]],[56,50],[56,6],[50,6],[57,6],[57,51],[51,6],[58,52],[58,6],[52,6],[59,53],[59,6],[53,6],[60,54],[60,6],[54,6],[61,55],[61,6],[55,6],[50,6],[51,6],[52,6],[53,6],[54,6],[55,6],0,[[]],[56,6],[56,50],[50,6],[[]],[57,51],[[]],[57,6],[51,6],[[]],[[]],[58,52],[58,6],[52,6],[[]],[59,53],[[]],[59,6],[53,6],[[]],[[]],[60,54],[60,6],[54,6],[[]],[61,6],[[]],[61,55],[[]],[55,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[56,56],[57,57],[58,58],[59,59],[60,60],[61,61],[62,62],[63,63],[64,64],[65,65],[66,66],[67,67],[68,68],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[56,56],11],[[50,50],11],[[57,57],11],[[51,51],11],[[58,58],11],[[52,52],11],[[59,59],11],[[53,53],11],[[60,60],11],[[54,54],11],[[61,61],11],[[55,55],11],0,[56],[57],[58],[59],[60],[61],[12,[[13,[56]]]],[12,[[13,[50]]]],[12,[[13,[57]]]],[12,[[13,[51]]]],[12,[[13,[58]]]],[12,[[13,[52]]]],[12,[[13,[59]]]],[12,[[13,[53]]]],[12,[[13,[60]]]],[12,[[13,[54]]]],[12,[[13,[61]]]],[12,[[13,[55]]]],[12,[[13,[62]]]],[12,[[13,[63]]]],[12,[[13,[64]]]],[12,[[13,[65]]]],[12,[[13,[66]]]],[12,[[13,[67]]]],[12,[[13,[68]]]],[[56,56],14],[[56,50],14],[[56,50],14],[[50,56],14],[[50,56],14],[[50,50],14],[[57,57],14],[[57,51],14],[[57,51],14],[[51,51],14],[[51,57],14],[[51,57],14],[[58,52],14],[[58,58],14],[[58,52],14],[[52,58],14],[[52,58],14],[[52,52],14],[[59,53],14],[[59,53],14],[[59,59],14],[[53,53],14],[[53,59],14],[[53,59],14],[[60,54],14],[[60,60],14],[[60,54],14],[[54,54],14],[[54,60],14],[[54,60],14],[[61,55],14],[[61,55],14],[[61,61],14],[[55,55],14],[[55,61],14],[[55,61],14],[[62,62],14],[[63,63],14],[[64,64],14],[[65,65],14],[[66,66],14],[[67,67],14],[[68,68],14],[[56,15],16],[[56,15],16],[[50,15],16],[[50,15],16],[[57,15],16],[[57,15],16],[[51,15],16],[[51,15],16],[[58,15],16],[[58,15],16],[[52,15],16],[[52,15],16],[[59,15],16],[[59,15],16],[[53,15],16],[[53,15],16],[[60,15],16],[[60,15],16],[[54,15],16],[[54,15],16],[[61,15],16],[[61,15],16],[[55,15],16],[[55,15],16],[[62,15],16],[[63,15],16],[[64,15],16],[[65,15],16],[[66,15],16],[[67,15],16],[[68,15],16],[[[2,[50]]],56],[[]],[18,56],[6,56],[50,56],[[[17,[6]]],56],[[[17,[50]]],56],[18,50],[[[2,[50]]],50],[6,50],[56,50],[[[17,[51]]],57],[[[2,[51]]],57],[[]],[18,57],[[[17,[6]]],57],[51,57],[6,57],[18,51],[57,51],[[[2,[51]]],51],[6,51],[[]],[[[17,[52]]],58],[6,58],[[[2,[52]]],58],[18,58],[[[17,[6]]],58],[52,58],[18,52],[[[2,[52]]],52],[6,52],[58,52],[53,59],[[[17,[53]]],59],[18,59],[6,59],[[[17,[6]]],59],[[]],[[[2,[53]]],59],[59,53],[[[2,[53]]],53],[6,53],[18,53],[18,60],[6,60],[[[2,[54]]],60],[[[17,[54]]],60],[54,60],[[]],[[[17,[6]]],60],[[[2,[54]]],54],[18,54],[6,54],[60,54],[[[2,[55]]],61],[[[17,[55]]],61],[6,61],[18,61],[[]],[[[17,[6]]],61],[55,61],[[[2,[55]]],55],[61,55],[18,55],[6,55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,56],[6,50],[6,57],[6,51],[6,58],[6,52],[6,59],[6,53],[6,60],[6,54],[6,61],[6,55],[6,[[13,[56]]]],[6,50],[6,[[13,[57]]]],[6,51],[6,[[13,[58]]]],[6,52],[6,[[13,[59]]]],[6,53],[6,[[13,[60]]]],[6,54],[6,[[13,[61]]]],[6,55],0,[[56,19]],[[50,19]],[[57,19]],[[51,19]],[[58,19]],[[52,19]],[[59,19]],[[53,19]],[[60,19]],[[54,19]],[[61,19]],[[55,19]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[56,[[17,[50]]]],[57,[[17,[51]]]],[58,[[17,[52]]]],[59,[[17,[53]]]],[60,[[17,[54]]]],[61,[[17,[55]]]],[56,[[2,[50]]]],[56,[[2,[50]]]],[50,[[2,[50]]]],[57,[[2,[51]]]],[57,[[2,[51]]]],[51,[[2,[51]]]],[58,[[2,[52]]]],[58,[[2,[52]]]],[52,[[2,[52]]]],[59,[[2,[53]]]],[59,[[2,[53]]]],[53,[[2,[53]]]],[60,[[2,[54]]]],[60,[[2,[54]]]],[54,[[2,[54]]]],[61,[[2,[55]]]],[61,[[2,[55]]]],[55,[[2,[55]]]],[[[17,[50]]],56],[[[17,[51]]],57],[[[17,[52]]],58],[[[17,[53]]],59],[[[17,[54]]],60],[[[17,[55]]],61],0,0,0,[18,56],[18,57],[18,58],[18,59],[18,60],[18,61],[[56,56],[[20,[11]]]],[[50,50],[[20,[11]]]],[[57,57],[[20,[11]]]],[[51,51],[[20,[11]]]],[[58,58],[[20,[11]]]],[[52,52],[[20,[11]]]],[[59,59],[[20,[11]]]],[[53,53],[[20,[11]]]],[[60,60],[[20,[11]]]],[[54,54],[[20,[11]]]],[[61,61],[[20,[11]]]],[[55,55],[[20,[11]]]],[[56,21],13],[[50,21],13],[[57,21],13],[[51,21],13],[[58,21],13],[[52,21],13],[[59,21],13],[[53,21],13],[[60,21],13],[[54,21],13],[[61,21],13],[[55,21],13],[[62,21],13],[[63,21],13],[[64,21],13],[[65,21],13],[[66,21],13],[[67,21],13],[[68,21],13],[56,18],[57,18],[58,18],[59,18],[60,18],[61,18],0,0,[[]],[50],[[]],[51],[[]],[52],[[]],[53],[[]],[54],[[]],[55],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],0,[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[69,[[2,[69]]]],[70,[[2,[70]]]],[71,[[2,[71]]]],[72,[[2,[72]]]],[73,[[2,[73]]]],[74,[[2,[74]]]],[75,[[2,[75]]]],[76,[[2,[76]]]],[77,[[2,[77]]]],[78,[[2,[78]]]],[79,[[2,[79]]]],[80,6],[80,69],[69,6],[81,6],[81,70],[70,6],[82,6],[82,71],[71,6],[83,72],[83,6],[72,6],[84,6],[84,73],[73,6],[85,74],[85,6],[74,6],[86,75],[86,6],[75,6],[87,76],[87,6],[76,6],[88,77],[88,6],[77,6],[89,78],[89,6],[78,6],[90,6],[90,79],[79,6],[69,6],[70,6],[71,6],[72,6],[73,6],[74,6],[75,6],[76,6],[77,6],[78,6],[79,6],[80,69],[80,6],[[]],[69,6],[[]],[81,70],[[]],[81,6],[70,6],[[]],[[]],[82,71],[82,6],[[]],[71,6],[[]],[83,72],[83,6],[[]],[72,6],[84,6],[84,73],[[]],[[]],[73,6],[85,6],[[]],[85,74],[[]],[74,6],[[]],[86,75],[86,6],[[]],[75,6],[[]],[87,76],[87,6],[[]],[76,6],[88,6],[[]],[88,77],[[]],[77,6],[89,78],[89,6],[[]],[[]],[78,6],[90,79],[90,6],[[]],[[]],[79,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[80,80],[81,81],[82,82],[83,83],[84,84],[85,85],[86,86],[87,87],[88,88],[89,89],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[80,80],11],[[69,69],11],[[81,81],11],[[70,70],11],[[82,82],11],[[71,71],11],[[83,83],11],[[72,72],11],[[84,84],11],[[73,73],11],[[85,85],11],[[74,74],11],[[86,86],11],[[75,75],11],[[87,87],11],[[76,76],11],[[88,88],11],[[77,77],11],[[89,89],11],[[78,78],11],[[90,90],11],[[79,79],11],[80],[81],[82],[83],[84],[85],[86],[87],[88],[89],[90],[12,[[13,[80]]]],[12,[[13,[69]]]],[12,[[13,[81]]]],[12,[[13,[70]]]],[12,[[13,[82]]]],[12,[[13,[71]]]],[12,[[13,[83]]]],[12,[[13,[72]]]],[12,[[13,[84]]]],[12,[[13,[73]]]],[12,[[13,[85]]]],[12,[[13,[74]]]],[12,[[13,[86]]]],[12,[[13,[75]]]],[12,[[13,[87]]]],[12,[[13,[76]]]],[12,[[13,[88]]]],[12,[[13,[77]]]],[12,[[13,[89]]]],[12,[[13,[78]]]],[12,[[13,[90]]]],[12,[[13,[79]]]],[12,[[13,[91]]]],[12,[[13,[92]]]],[12,[[13,[93]]]],[12,[[13,[94]]]],[12,[[13,[95]]]],[12,[[13,[96]]]],[[80,69],14],[[80,80],14],[[80,69],14],[[69,80],14],[[69,69],14],[[69,80],14],[[81,81],14],[[81,70],14],[[81,70],14],[[70,70],14],[[70,81],14],[[70,81],14],[[82,82],14],[[82,71],14],[[82,71],14],[[71,82],14],[[71,82],14],[[71,71],14],[[83,72],14],[[83,72],14],[[83,83],14],[[72,83],14],[[72,83],14],[[72,72],14],[[84,73],14],[[84,84],14],[[84,73],14],[[73,73],14],[[73,84],14],[[73,84],14],[[85,74],14],[[85,74],14],[[85,85],14],[[74,85],14],[[74,74],14],[[74,85],14],[[86,86],14],[[86,75],14],[[86,75],14],[[75,86],14],[[75,86],14],[[75,75],14],[[87,76],14],[[87,87],14],[[87,76],14],[[76,87],14],[[76,76],14],[[76,87],14],[[88,77],14],[[88,88],14],[[88,77],14],[[77,88],14],[[77,77],14],[[77,88],14],[[89,89],14],[[89,78],14],[[89,78],14],[[78,78],14],[[78,89],14],[[78,89],14],[[90,79],14],[[90,90],14],[[90,79],14],[[79,90],14],[[79,79],14],[[79,90],14],[[91,91],14],[[92,92],14],[[93,93],14],[[94,94],14],[[95,95],14],[[96,96],14],[[80,15],16],[[80,15],16],[[69,15],16],[[69,15],16],[[81,15],16],[[81,15],16],[[70,15],16],[[70,15],16],[[82,15],16],[[82,15],16],[[71,15],16],[[71,15],16],[[83,15],16],[[83,15],16],[[72,15],16],[[72,15],16],[[84,15],16],[[84,15],16],[[73,15],16],[[73,15],16],[[85,15],16],[[85,15],16],[[74,15],16],[[74,15],16],[[86,15],16],[[86,15],16],[[75,15],16],[[75,15],16],[[87,15],16],[[87,15],16],[[76,15],16],[[76,15],16],[[88,15],16],[[88,15],16],[[77,15],16],[[77,15],16],[[89,15],16],[[89,15],16],[[78,15],16],[[78,15],16],[[90,15],16],[[90,15],16],[[79,15],16],[[79,15],16],[[91,15],16],[[92,15],16],[[93,15],16],[[94,15],16],[[95,15],16],[[96,15],16],[[96,15],16],[[97,15],16],[[97,15],16],[69,80],[18,80],[6,80],[[[2,[69]]],80],[[[17,[6]]],80],[[[17,[69]]],80],[[]],[18,69],[80,69],[6,69],[[[2,[69]]],69],[[]],[[[17,[6]]],81],[70,81],[18,81],[[[17,[70]]],81],[[[2,[70]]],81],[6,81],[18,70],[81,70],[[[2,[70]]],70],[6,70],[[[17,[71]]],82],[[[17,[6]]],82],[[[2,[71]]],82],[6,82],[18,82],[71,82],[[]],[18,71],[82,71],[[[2,[71]]],71],[6,71],[18,83],[[]],[[[17,[72]]],83],[[[17,[6]]],83],[72,83],[6,83],[[[2,[72]]],83],[6,72],[[[2,[72]]],72],[18,72],[83,72],[18,84],[[[2,[73]]],84],[6,84],[[[17,[6]]],84],[[]],[73,84],[[[17,[73]]],84],[18,73],[6,73],[84,73],[[[2,[73]]],73],[[[2,[74]]],85],[74,85],[[]],[[[17,[74]]],85],[18,85],[6,85],[[[17,[6]]],85],[[[2,[74]]],74],[6,74],[85,74],[18,74],[6,86],[18,86],[75,86],[[[17,[75]]],86],[[]],[[[17,[6]]],86],[[[2,[75]]],86],[86,75],[18,75],[[[2,[75]]],75],[6,75],[76,87],[[[2,[76]]],87],[18,87],[6,87],[[]],[[[17,[6]]],87],[[[17,[76]]],87],[6,76],[87,76],[18,76],[[[2,[76]]],76],[[[17,[77]]],88],[[[17,[6]]],88],[18,88],[77,88],[[]],[[[2,[77]]],88],[6,88],[6,77],[18,77],[88,77],[[[2,[77]]],77],[[[17,[78]]],89],[78,89],[6,89],[18,89],[[]],[[[2,[78]]],89],[[[17,[6]]],89],[89,78],[6,78],[18,78],[[[2,[78]]],78],[[]],[[[17,[79]]],90],[[[2,[79]]],90],[[[17,[6]]],90],[18,90],[79,90],[6,90],[90,79],[6,79],[[[2,[79]]],79],[18,79],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,80],[6,69],[6,81],[6,70],[6,82],[6,71],[6,83],[6,72],[6,84],[6,73],[6,85],[6,74],[6,86],[6,75],[6,87],[6,76],[6,88],[6,77],[6,89],[6,78],[6,90],[6,79],[6,[[13,[80]]]],[6,69],[6,[[13,[81]]]],[6,70],[6,[[13,[82]]]],[6,71],[6,[[13,[83]]]],[6,72],[6,[[13,[84]]]],[6,73],[6,[[13,[85]]]],[6,74],[6,[[13,[86]]]],[6,75],[6,[[13,[87]]]],[6,76],[6,[[13,[88]]]],[6,77],[6,[[13,[89]]]],[6,78],[6,[[13,[90]]]],[6,79],[[80,19]],[[69,19]],[[81,19]],[[70,19]],[[82,19]],[[71,19]],[[83,19]],[[72,19]],[[84,19]],[[73,19]],[[85,19]],[[74,19]],[[86,19]],[[75,19]],[[87,19]],[[76,19]],[[88,19]],[[77,19]],[[89,19]],[[78,19]],[[90,19]],[[79,19]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[80,[[17,[69]]]],[81,[[17,[70]]]],[82,[[17,[71]]]],[83,[[17,[72]]]],[84,[[17,[73]]]],[85,[[17,[74]]]],[86,[[17,[75]]]],[87,[[17,[76]]]],[88,[[17,[77]]]],[89,[[17,[78]]]],[90,[[17,[79]]]],[80,[[2,[69]]]],[80,[[2,[69]]]],[69,[[2,[69]]]],[81,[[2,[70]]]],[81,[[2,[70]]]],[70,[[2,[70]]]],[82,[[2,[71]]]],[82,[[2,[71]]]],[71,[[2,[71]]]],[83,[[2,[72]]]],[83,[[2,[72]]]],[72,[[2,[72]]]],[84,[[2,[73]]]],[84,[[2,[73]]]],[73,[[2,[73]]]],[85,[[2,[74]]]],[85,[[2,[74]]]],[74,[[2,[74]]]],[86,[[2,[75]]]],[86,[[2,[75]]]],[75,[[2,[75]]]],[87,[[2,[76]]]],[87,[[2,[76]]]],[76,[[2,[76]]]],[88,[[2,[77]]]],[88,[[2,[77]]]],[77,[[2,[77]]]],[89,[[2,[78]]]],[89,[[2,[78]]]],[78,[[2,[78]]]],[90,[[2,[79]]]],[90,[[2,[79]]]],[79,[[2,[79]]]],[[[17,[69]]],80],[[[17,[70]]],81],[[[17,[71]]],82],[[[17,[72]]],83],[[[17,[73]]],84],[[[17,[74]]],85],[[[17,[75]]],86],[[[17,[76]]],87],[[[17,[77]]],88],[[[17,[78]]],89],[[[17,[79]]],90],0,[18,80],[18,81],[18,82],[18,83],[18,84],[18,85],[18,86],[18,87],[18,88],[18,89],[18,90],[[80,80],[[20,[11]]]],[[69,69],[[20,[11]]]],[[81,81],[[20,[11]]]],[[70,70],[[20,[11]]]],[[82,82],[[20,[11]]]],[[71,71],[[20,[11]]]],[[83,83],[[20,[11]]]],[[72,72],[[20,[11]]]],[[84,84],[[20,[11]]]],[[73,73],[[20,[11]]]],[[85,85],[[20,[11]]]],[[74,74],[[20,[11]]]],[[86,86],[[20,[11]]]],[[75,75],[[20,[11]]]],[[87,87],[[20,[11]]]],[[76,76],[[20,[11]]]],[[88,88],[[20,[11]]]],[[77,77],[[20,[11]]]],[[89,89],[[20,[11]]]],[[78,78],[[20,[11]]]],[[90,90],[[20,[11]]]],[[79,79],[[20,[11]]]],[98],[[80,21],13],[[69,21],13],[[81,21],13],[[70,21],13],[[82,21],13],[[71,21],13],[[83,21],13],[[72,21],13],[[84,21],13],[[73,21],13],[[85,21],13],[[74,21],13],[[86,21],13],[[75,21],13],[[87,21],13],[[76,21],13],[[88,21],13],[[77,21],13],[[89,21],13],[[78,21],13],[[90,21],13],[[79,21],13],[[91,21],13],[[92,21],13],[[93,21],13],[[94,21],13],[[95,21],13],[[96,21],13],[80,18],[81,18],[82,18],[83,18],[84,18],[85,18],[86,18],[87,18],[88,18],[89,18],[90,18],[[]],[69],[[]],[70],[[]],[71],[[]],[72],[[]],[73],[[]],[74],[[]],[75],[[]],[76],[[]],[77],[[]],[78],[[]],[79],[[]],[[]],[[]],[[]],[[]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[99,[[13,[96]]]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,0,0,0,0,0,0,[100,[[2,[100]]]],[101,6],[101,100],[100,6],[100,6],[[]],[101,6],[101,100],[[]],[100,6],[[]],[[]],[[]],[[]],[101,101],[[]],[100,6],[101],[12,[[13,[101]]]],[12,[[13,[100]]]],[[101,102],14],[[101,101],14],[[101,100],14],[[101,100],14],[[100,100],14],[[100,101],14],[[100,101],14],[[100,102],14],[[101,15],16],[[101,15],16],[[100,15],16],[[100,15],16],[[103,15],16],[[103,15],16],[[]],[[[17,[100]]],101],[100,101],[[[2,[100]]],101],[[[2,[100]]],100],[101,100],[104,103],[105,103],[[]],[106,103],[6,101],[6,100],[6,[[13,[101]]]],[6,[[13,[100,103]]]],[6,100],[[101,19]],[[100,19]],[100,6],[[]],[[]],[101,[[17,[100]]]],[101,[[2,[100]]]],[101,[[2,[100]]]],[100,[[2,[100]]]],[[[17,[100]]],101],[[100,107],14],[100,[[20,[6]]]],[100,6],[100,6],[18,[[13,[101,103]]]],[18,101],[100,[[13,[[2,[100]],103]]]],[[],101],[[101,101],[[20,[11]]]],[[101,102],[[20,[11]]]],[[100,100],[[20,[11]]]],[[100,101],[[20,[11]]]],[[100,102],[[20,[11]]]],[98],[100,6],[[101,21],13],[[100,21],13],[103,[[20,[108]]]],[101,18],[100,101],[100,102],[[]],[100],[[],18],[[],18],[[],18],[100,102],[[],101],[102,[[13,[101]]]],[[],13],[6,[[13,[101]]]],[18,[[13,[101]]]],[6,[[13,[100]]]],[18,[[13,[100,103]]]],[[],13],[[],13],[[],13],[[],22],[[],22],[[],22],[100,6],0,0,0,0,0,[[]],[[]],[109,109],[[]],[12,[[13,[109]]]],0,[[109,109],14],[[109,15],16],[[]],0,[[]],0,0,[[109,21],13],[[]],[[],13],[[],13],[[],22]],"c":[],"p":[[3,"UserIdRef"],[4,"Cow"],[3,"DisplayNameRef"],[3,"NicknameRef"],[3,"UserId"],[15,"str"],[3,"DisplayName"],[3,"Nickname"],[4,"BroadcasterType"],[4,"UserType"],[4,"Ordering"],[8,"Deserializer"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Box"],[3,"String"],[8,"Hasher"],[4,"Option"],[8,"Serializer"],[3,"TypeId"],[3,"HexColorRef"],[4,"NamedUserColor"],[3,"HexColor"],[3,"EmoteUrlBuilder"],[3,"BadgeSetIdRef"],[3,"ChatBadgeIdRef"],[3,"EmoteIdRef"],[3,"EmoteSetIdRef"],[3,"BadgeSetId"],[3,"ChatBadgeId"],[3,"EmoteId"],[3,"EmoteSetId"],[4,"EmoteAnimationSetting"],[4,"EmoteThemeMode"],[4,"EmoteScale"],[3,"ResubscriptionEmote"],[3,"Image"],[3,"EventSubIdRef"],[3,"EventSubId"],[3,"CreatorGoalIdRef"],[3,"CreatorGoalId"],[4,"CreatorGoalType"],[3,"MsgIdRef"],[3,"BlockedTermIdRef"],[3,"MsgId"],[3,"BlockedTermId"],[4,"AutomodStatus"],[3,"RewardIdRef"],[3,"RedemptionIdRef"],[3,"PollIdRef"],[3,"PollChoiceIdRef"],[3,"PredictionIdRef"],[3,"PredictionOutcomeIdRef"],[3,"RewardId"],[3,"RedemptionId"],[3,"PollId"],[3,"PollChoiceId"],[3,"PredictionId"],[3,"PredictionOutcomeId"],[4,"Max"],[3,"GlobalCooldown"],[3,"PollChoice"],[4,"PollStatus"],[4,"PredictionStatus"],[3,"PredictionOutcome"],[3,"PredictionTopPredictors"],[3,"StreamIdRef"],[3,"CategoryIdRef"],[3,"TagIdRef"],[3,"TeamIdRef"],[3,"VideoIdRef"],[3,"ClipIdRef"],[3,"StreamSegmentIdRef"],[3,"HypeTrainIdRef"],[3,"CharityCampaignIdRef"],[3,"CharityDonationIdRef"],[3,"IgdbIdRef"],[3,"StreamId"],[3,"CategoryId"],[3,"TagId"],[3,"TeamId"],[3,"VideoId"],[3,"ClipId"],[3,"StreamSegmentId"],[3,"HypeTrainId"],[3,"CharityCampaignId"],[3,"CharityDonationId"],[3,"IgdbId"],[3,"TwitchCategory"],[4,"SubscriptionTier"],[4,"VideoPeriod"],[4,"VideoType"],[4,"VideoPrivacy"],[4,"CommercialLength"],[4,"CommercialLengthParseError"],[3,"Demand"],[15,"u64"],[3,"TimestampRef"],[3,"Timestamp"],[3,"OffsetDateTime"],[4,"TimestampParseError"],[4,"Format"],[4,"Parse"],[4,"Infallible"],[8,"Sized"],[8,"Error"],[3,"User"],[8,"IntoCow"],[13,"MaxPerStream"],[13,"MaxPerUserPerStream"],[13,"InvalidFormat"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
